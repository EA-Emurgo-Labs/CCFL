{
	"id": "1d0333f4c92747a46ce7861dda79e8f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"TestSwap.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.24;\n\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\nimport \"./IERC20Standard.sol\";\nimport \"./IV3SwapRouter.sol\";\n\n/// @title CCFL contract\n/// @author\n/// @notice Link/usd\ncontract TestSwap {\n    // uniswap config\n    IV3SwapRouter public swapRouter =\n        IV3SwapRouter(0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E);\n    uint24 public constant feeTier = 3000;\n    IUniswapV3Factory public factory =\n        IUniswapV3Factory(0x0227628f3F023bb0B980b67D528571c95c6DaC1c);\n\n    constructor() {}\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapTokenForUSD(\n        uint256 amountOut,\n        uint256 amountInMaximum,\n        IERC20Standard stableCoin,\n        IERC20Standard tokenAddress\n    ) public returns (uint256 amountIn) {\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        tokenAddress.approve(address(swapRouter), amountInMaximum);\n\n        address pool = factory.getPool(\n            address(tokenAddress),\n            address(stableCoin),\n            feeTier\n        );\n\n        uint24 fee = IUniswapV3Pool(pool).fee();\n\n        uint160 sqrtPriceLimitX96;\n        {\n            (\n                uint160 sqrtPriceX96,\n                int24 tick,\n                uint16 observationIndex,\n                uint16 observationCardinality,\n                uint16 observationCardinalityNext,\n                uint8 feeProtocol,\n                bool unlocked\n            ) = IUniswapV3Pool(pool).slot0();\n            sqrtPriceLimitX96 = sqrtPriceX96;\n        }\n\n        IV3SwapRouter.ExactOutputSingleParams memory params = IV3SwapRouter\n            .ExactOutputSingleParams({\n                tokenIn: address(tokenAddress),\n                tokenOut: address(stableCoin),\n                fee: fee,\n                recipient: msg.sender,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(\n                address(tokenAddress),\n                address(swapRouter),\n                0\n            );\n        }\n    }\n\n    function swapEarnForUSD(\n        uint256 amountIn,\n        IERC20Standard stableCoin,\n        IERC20Standard tokenAddress\n    ) public returns (uint256 amountOut) {\n        // Transfer the specified amount of DAI to this contract.\n        // TransferHelper.safeTransferFrom(\n        //     address(tokenAddress),\n        //     msg.sender,\n        //     address(this),\n        //     amountIn\n        // );\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(\n            address(tokenAddress),\n            address(swapRouter),\n            amountIn\n        );\n\n        address pool = factory.getPool(\n            address(tokenAddress),\n            address(stableCoin),\n            feeTier\n        );\n\n        uint24 fee = IUniswapV3Pool(pool).fee();\n\n        // uint160 sqrtPriceLimitX96;\n        // {\n        //     (\n        //         uint160 sqrtPriceX96,\n        //         int24 tick,\n        //         uint16 observationIndex,\n        //         uint16 observationCardinality,\n        //         uint16 observationCardinalityNext,\n        //         uint8 feeProtocol,\n        //         bool unlocked\n        //     ) = IUniswapV3Pool(pool).slot0();\n        //     sqrtPriceLimitX96 = 0;\n        // }\n\n        IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: address(tokenAddress),\n                tokenOut: address(stableCoin),\n                fee: fee,\n                recipient: msg.sender,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    function approveAll(IERC20Standard tokenAddress, address receiver) public{\n        tokenAddress.approve(receiver, tokenAddress.balanceOf(address(this)));\n    }\n\n    receive() external payable {}\n}\n"
			},
			"IV3SwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface IV3SwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"IERC20Standard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.20;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IERC20Standard is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA INVALID DUP13 TLOAD RETURNDATASIZE PC ADDRESS 0x25 MLOAD DUP7 PUSH29 0x1BF162F0055AEC99AC03BEBAA27E50A78387EA9B9664736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "129:2408:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cafe8c5c3d58302551867c1bf162f0055aec99ac03bebaa27e50a78387ea9b9664736f6c634300081a0033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"IERC20Standard.sol",
								"IV3SwapRouter.sol",
								"TestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Standard.sol": {
				"IERC20Standard": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Standard.sol\":\"IERC20Standard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"IERC20Standard.sol\":{\"keccak256\":\"0x6de74494535348a285871959d6141adadcb56060fead04ad7baaf21fa5e748dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce6237b20eeb6103c81e205dac93ba9bf3d057279f6f4c787c0cdde7f84ea9a\",\"dweb:/ipfs/QmSexRYC5VkuFYHQ9DP5KVwHkPBeMwQBwEjpL1nLsrRLDa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IV3SwapRouter.sol": {
				"IV3SwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256))": "b858183f",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": "04e45aaf",
							"exactOutput((bytes,address,uint256,uint256))": "09b81346",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": "5023b4df",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap.\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap.\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"IV3SwapRouter.sol\":\"IV3SwapRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap."
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap."
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"TestSwap.sol": {
				"TestSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20Standard",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "approveAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Factory",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTier",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20Standard",
									"name": "stableCoin",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Standard",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "swapEarnForUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract IV3SwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMaximum",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20Standard",
									"name": "stableCoin",
									"type": "address"
								},
								{
									"internalType": "contract IERC20Standard",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "swapTokenForUSD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "@notice Link/usd",
						"kind": "dev",
						"methods": {
							"swapTokenForUSD(uint256,uint256,address,address)": {
								"details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
								"params": {
									"amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
									"amountOut": "The exact amount of WETH9 to receive from the swap."
								},
								"returns": {
									"amountIn": "The amount of DAI actually spent in the swap."
								}
							}
						},
						"title": "CCFL contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TestSwap.sol\":393:5659  contract TestSwap {... */\n  mstore(0x40, 0x80)\n    /* \"TestSwap.sol\":495:537  0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E */\n  0x3bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e\n    /* \"TestSwap.sol\":439:538  IV3SwapRouter public swapRouter =... */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TestSwap.sol\":648:690  0x0227628f3F023bb0B980b67D528571c95c6DaC1c */\n  0x0227628f3f023bb0b980b67d528571c95c6dac1c\n    /* \"TestSwap.sol\":587:691  IUniswapV3Factory public factory =... */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"TestSwap.sol\":698:714  constructor() {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"TestSwap.sol\":393:5659  contract TestSwap {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TestSwap.sol\":393:5659  contract TestSwap {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0a443276\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x72f5d98a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8efc0828\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa3fa08e4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"TestSwap.sol\":5463:5622  function approveAll(IERC20Standard tokenAddress, address receiver) public{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"TestSwap.sol\":544:581  uint24 public constant feeTier = 3000 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TestSwap.sol\":1342:3476  function swapTokenForUSD(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TestSwap.sol\":3482:5457  function swapEarnForUSD(... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TestSwap.sol\":439:538  IV3SwapRouter public swapRouter =... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TestSwap.sol\":587:691  IUniswapV3Factory public factory =... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TestSwap.sol\":5463:5622  function approveAll(IERC20Standard tokenAddress, address receiver) public{... */\n    tag_15:\n        /* \"TestSwap.sol\":5546:5558  tokenAddress */\n      dup2\n        /* \"TestSwap.sol\":5546:5566  tokenAddress.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"TestSwap.sol\":5567:5575  receiver */\n      dup3\n        /* \"TestSwap.sol\":5577:5589  tokenAddress */\n      dup5\n        /* \"TestSwap.sol\":5577:5599  tokenAddress.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"TestSwap.sol\":5608:5612  this */\n      address\n        /* \"TestSwap.sol\":5577:5614  tokenAddress.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"TestSwap.sol\":5546:5615  tokenAddress.approve(receiver, tokenAddress.balanceOf(address(this))) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      pop\n        /* \"TestSwap.sol\":5463:5622  function approveAll(IERC20Standard tokenAddress, address receiver) public{... */\n      pop\n      pop\n      jump\t// out\n        /* \"TestSwap.sol\":544:581  uint24 public constant feeTier = 3000 */\n    tag_18:\n        /* \"TestSwap.sol\":577:581  3000 */\n      0x0bb8\n        /* \"TestSwap.sol\":544:581  uint24 public constant feeTier = 3000 */\n      dup2\n      jump\t// out\n        /* \"TestSwap.sol\":1342:3476  function swapTokenForUSD(... */\n    tag_25:\n        /* \"TestSwap.sol\":1521:1537  uint256 amountIn */\n      0x00\n        /* \"TestSwap.sol\":1765:1777  tokenAddress */\n      dup2\n        /* \"TestSwap.sol\":1765:1785  tokenAddress.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"TestSwap.sol\":1794:1804  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":1807:1822  amountInMaximum */\n      dup7\n        /* \"TestSwap.sol\":1765:1823  tokenAddress.approve(address(swapRouter), amountInMaximum) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_58:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_61:\n      pop\n        /* \"TestSwap.sol\":1834:1846  address pool */\n      0x00\n        /* \"TestSwap.sol\":1849:1856  factory */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":1849:1864  factory.getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"TestSwap.sol\":1886:1898  tokenAddress */\n      dup5\n        /* \"TestSwap.sol\":1921:1931  stableCoin */\n      dup7\n        /* \"TestSwap.sol\":577:581  3000 */\n      0x0bb8\n        /* \"TestSwap.sol\":1849:1963  factory.getPool(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"TestSwap.sol\":1834:1963  address pool = factory.getPool(... */\n      swap1\n      pop\n        /* \"TestSwap.sol\":1974:1984  uint24 fee */\n      0x00\n        /* \"TestSwap.sol\":2002:2006  pool */\n      dup2\n        /* \"TestSwap.sol\":1987:2011  IUniswapV3Pool(pool).fee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddca3f43\n        /* \"TestSwap.sol\":1987:2013  IUniswapV3Pool(pool).fee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"TestSwap.sol\":1974:2013  uint24 fee = IUniswapV3Pool(pool).fee() */\n      swap1\n      pop\n        /* \"TestSwap.sol\":2024:2049  uint160 sqrtPriceLimitX96 */\n      0x00\n        /* \"TestSwap.sol\":2091:2111  uint160 sqrtPriceX96 */\n      dup1\n        /* \"TestSwap.sol\":2129:2139  int24 tick */\n      0x00\n        /* \"TestSwap.sol\":2157:2180  uint16 observationIndex */\n      dup1\n        /* \"TestSwap.sol\":2198:2227  uint16 observationCardinality */\n      0x00\n        /* \"TestSwap.sol\":2245:2278  uint16 observationCardinalityNext */\n      dup1\n        /* \"TestSwap.sol\":2296:2313  uint8 feeProtocol */\n      0x00\n        /* \"TestSwap.sol\":2331:2344  bool unlocked */\n      dup1\n        /* \"TestSwap.sol\":2376:2380  pool */\n      dup10\n        /* \"TestSwap.sol\":2361:2387  IUniswapV3Pool(pool).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"TestSwap.sol\":2361:2389  IUniswapV3Pool(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"TestSwap.sol\":2073:2389  (... */\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n      swap7\n      pop\n        /* \"TestSwap.sol\":2423:2435  sqrtPriceX96 */\n      dup7\n        /* \"TestSwap.sol\":2403:2435  sqrtPriceLimitX96 = sqrtPriceX96 */\n      swap8\n      pop\n        /* \"TestSwap.sol\":2059:2446  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"TestSwap.sol\":2456:2507  IV3SwapRouter.ExactOutputSingleParams memory params */\n      0x00\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TestSwap.sol\":2596:2608  tokenAddress */\n      dup8\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2645:2655  stableCoin */\n      dup9\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2679:2682  fee */\n      dup5\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2711:2721  msg.sender */\n      caller\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2750:2759  amountOut */\n      dup11\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2794:2809  amountInMaximum */\n      dup10\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":2846:2847  0 */\n      0x00\n        /* \"TestSwap.sol\":2510:2862  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"TestSwap.sol\":2456:2862  IV3SwapRouter.ExactOutputSingleParams memory params = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"TestSwap.sol\":2986:2996  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":2986:3014  swapRouter.exactOutputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x5023b4df\n        /* \"TestSwap.sol\":3015:3021  params */\n      dup3\n        /* \"TestSwap.sol\":2986:3022  swapRouter.exactOutputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_80:\n        /* \"TestSwap.sol\":2975:3022  amountIn = swapRouter.exactOutputSingle(params) */\n      swap5\n      pop\n        /* \"TestSwap.sol\":3293:3308  amountInMaximum */\n      dup8\n        /* \"TestSwap.sol\":3282:3290  amountIn */\n      dup6\n        /* \"TestSwap.sol\":3282:3308  amountIn < amountInMaximum */\n      lt\n        /* \"TestSwap.sol\":3278:3470  if (amountIn < amountInMaximum) {... */\n      iszero\n      tag_81\n      jumpi\n        /* \"TestSwap.sol\":3324:3459  TransferHelper.safeApprove(... */\n      tag_82\n        /* \"TestSwap.sol\":3376:3388  tokenAddress */\n      dup7\n        /* \"TestSwap.sol\":3415:3425  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":3444:3445  0 */\n      0x00\n        /* \"TestSwap.sol\":3324:3350  TransferHelper.safeApprove */\n      tag_83\n        /* \"TestSwap.sol\":3324:3459  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_82:\n        /* \"TestSwap.sol\":3278:3470  if (amountIn < amountInMaximum) {... */\n    tag_81:\n        /* \"TestSwap.sol\":1539:3476  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"TestSwap.sol\":1342:3476  function swapTokenForUSD(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TestSwap.sol\":3482:5457  function swapEarnForUSD(... */\n    tag_32:\n        /* \"TestSwap.sol\":3626:3643  uint256 amountOut */\n      0x00\n        /* \"TestSwap.sol\":4114:4240  TransferHelper.safeApprove(... */\n      tag_85\n        /* \"TestSwap.sol\":4162:4174  tokenAddress */\n      dup3\n        /* \"TestSwap.sol\":4197:4207  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":4222:4230  amountIn */\n      dup7\n        /* \"TestSwap.sol\":4114:4140  TransferHelper.safeApprove */\n      tag_83\n        /* \"TestSwap.sol\":4114:4240  TransferHelper.safeApprove(... */\n      jump\t// in\n    tag_85:\n        /* \"TestSwap.sol\":4251:4263  address pool */\n      0x00\n        /* \"TestSwap.sol\":4266:4273  factory */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":4266:4281  factory.getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"TestSwap.sol\":4303:4315  tokenAddress */\n      dup5\n        /* \"TestSwap.sol\":4338:4348  stableCoin */\n      dup7\n        /* \"TestSwap.sol\":577:581  3000 */\n      0x0bb8\n        /* \"TestSwap.sol\":4266:4380  factory.getPool(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_86:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_89:\n        /* \"TestSwap.sol\":4251:4380  address pool = factory.getPool(... */\n      swap1\n      pop\n        /* \"TestSwap.sol\":4391:4401  uint24 fee */\n      0x00\n        /* \"TestSwap.sol\":4419:4423  pool */\n      dup2\n        /* \"TestSwap.sol\":4404:4428  IUniswapV3Pool(pool).fee */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddca3f43\n        /* \"TestSwap.sol\":4404:4430  IUniswapV3Pool(pool).fee() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_92:\n        /* \"TestSwap.sol\":4391:4430  uint24 fee = IUniswapV3Pool(pool).fee() */\n      swap1\n      pop\n        /* \"TestSwap.sol\":4901:4951  IV3SwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"TestSwap.sol\":5039:5051  tokenAddress */\n      dup7\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5088:5098  stableCoin */\n      dup8\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5122:5125  fee */\n      dup4\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5154:5164  msg.sender */\n      caller\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5192:5200  amountIn */\n      dup9\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5236:5237  0 */\n      0x00\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"TestSwap.sol\":5274:5275  0 */\n      0x00\n        /* \"TestSwap.sol\":4954:5290  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"TestSwap.sol\":4901:5290  IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"TestSwap.sol\":5415:5425  swapRouter */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"TestSwap.sol\":5415:5442  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"TestSwap.sol\":5443:5449  params */\n      dup3\n        /* \"TestSwap.sol\":5415:5450  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_97:\n        /* \"TestSwap.sol\":5403:5450  amountOut = swapRouter.exactInputSingle(params) */\n      swap4\n      pop\n        /* \"TestSwap.sol\":3645:5457  {... */\n      pop\n      pop\n      pop\n        /* \"TestSwap.sol\":3482:5457  function swapEarnForUSD(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"TestSwap.sol\":439:538  IV3SwapRouter public swapRouter =... */\n    tag_36:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"TestSwap.sol\":587:691  IUniswapV3Factory public factory =... */\n    tag_41:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_83:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1986:1998  bool success */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2000:2017  bytes memory data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2026  token */\n      dup5\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2055:2078  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2080:2082  to */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2084:2089  value */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_99\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_104\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_103)\n    tag_104:\n      0x60\n      swap2\n      pop\n    tag_103:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2136:2137  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2125  data */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      eq\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_106\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_107:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n    tag_106:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_105:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_112:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_114:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_115:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_172\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_114\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:686   */\n    tag_116:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":656:680   */\n      tag_174\n        /* \"#utility.yul\":674:679   */\n      dup3\n        /* \"#utility.yul\":656:680   */\n      tag_115\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":645:680   */\n      swap1\n      pop\n        /* \"#utility.yul\":568:686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":692:858   */\n    tag_117:\n        /* \"#utility.yul\":787:833   */\n      tag_176\n        /* \"#utility.yul\":827:832   */\n      dup2\n        /* \"#utility.yul\":787:833   */\n      tag_116\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":780:785   */\n      dup2\n        /* \"#utility.yul\":777:834   */\n      eq\n        /* \"#utility.yul\":767:852   */\n      tag_177\n      jumpi\n        /* \"#utility.yul\":848:849   */\n      0x00\n        /* \"#utility.yul\":845:846   */\n      dup1\n        /* \"#utility.yul\":838:850   */\n      revert\n        /* \"#utility.yul\":767:852   */\n    tag_177:\n        /* \"#utility.yul\":692:858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:1047   */\n    tag_118:\n        /* \"#utility.yul\":932:937   */\n      0x00\n        /* \"#utility.yul\":970:976   */\n      dup2\n        /* \"#utility.yul\":957:977   */\n      calldataload\n        /* \"#utility.yul\":948:977   */\n      swap1\n      pop\n        /* \"#utility.yul\":986:1041   */\n      tag_179\n        /* \"#utility.yul\":1035:1040   */\n      dup2\n        /* \"#utility.yul\":986:1041   */\n      tag_117\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":864:1047   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1053:1175   */\n    tag_119:\n        /* \"#utility.yul\":1126:1150   */\n      tag_181\n        /* \"#utility.yul\":1144:1149   */\n      dup2\n        /* \"#utility.yul\":1126:1150   */\n      tag_115\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":1119:1124   */\n      dup2\n        /* \"#utility.yul\":1116:1151   */\n      eq\n        /* \"#utility.yul\":1106:1169   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":1165:1166   */\n      0x00\n        /* \"#utility.yul\":1162:1163   */\n      dup1\n        /* \"#utility.yul\":1155:1167   */\n      revert\n        /* \"#utility.yul\":1106:1169   */\n    tag_182:\n        /* \"#utility.yul\":1053:1175   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1181:1320   */\n    tag_120:\n        /* \"#utility.yul\":1227:1232   */\n      0x00\n        /* \"#utility.yul\":1265:1271   */\n      dup2\n        /* \"#utility.yul\":1252:1272   */\n      calldataload\n        /* \"#utility.yul\":1243:1272   */\n      swap1\n      pop\n        /* \"#utility.yul\":1281:1314   */\n      tag_184\n        /* \"#utility.yul\":1308:1313   */\n      dup2\n        /* \"#utility.yul\":1281:1314   */\n      tag_119\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":1181:1320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1326:1844   */\n    tag_14:\n        /* \"#utility.yul\":1416:1422   */\n      0x00\n        /* \"#utility.yul\":1424:1430   */\n      dup1\n        /* \"#utility.yul\":1473:1475   */\n      0x40\n        /* \"#utility.yul\":1461:1470   */\n      dup4\n        /* \"#utility.yul\":1452:1459   */\n      dup6\n        /* \"#utility.yul\":1448:1471   */\n      sub\n        /* \"#utility.yul\":1444:1476   */\n      slt\n        /* \"#utility.yul\":1441:1560   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":1479:1558   */\n      tag_187\n      tag_112\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":1441:1560   */\n    tag_186:\n        /* \"#utility.yul\":1599:1600   */\n      0x00\n        /* \"#utility.yul\":1624:1699   */\n      tag_188\n        /* \"#utility.yul\":1691:1698   */\n      dup6\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup7\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1624:1699   */\n      tag_118\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":1614:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1570:1709   */\n      pop\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1774:1827   */\n      tag_189\n        /* \"#utility.yul\":1819:1826   */\n      dup6\n        /* \"#utility.yul\":1810:1816   */\n      dup3\n        /* \"#utility.yul\":1799:1808   */\n      dup7\n        /* \"#utility.yul\":1795:1817   */\n      add\n        /* \"#utility.yul\":1774:1827   */\n      tag_120\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":1764:1827   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:1837   */\n      pop\n        /* \"#utility.yul\":1326:1844   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1850:1941   */\n    tag_121:\n        /* \"#utility.yul\":1886:1893   */\n      0x00\n        /* \"#utility.yul\":1926:1934   */\n      0xffffff\n        /* \"#utility.yul\":1919:1924   */\n      dup3\n        /* \"#utility.yul\":1915:1935   */\n      and\n        /* \"#utility.yul\":1904:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1850:1941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2062   */\n    tag_122:\n        /* \"#utility.yul\":2032:2055   */\n      tag_192\n        /* \"#utility.yul\":2049:2054   */\n      dup2\n        /* \"#utility.yul\":2032:2055   */\n      tag_121\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2027:2030   */\n      dup3\n        /* \"#utility.yul\":2020:2056   */\n      mstore\n        /* \"#utility.yul\":1947:2062   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2068:2286   */\n    tag_20:\n        /* \"#utility.yul\":2159:2163   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2186:2195   */\n      dup3\n        /* \"#utility.yul\":2182:2200   */\n      add\n        /* \"#utility.yul\":2174:2200   */\n      swap1\n      pop\n        /* \"#utility.yul\":2210:2279   */\n      tag_194\n        /* \"#utility.yul\":2276:2277   */\n      0x00\n        /* \"#utility.yul\":2265:2274   */\n      dup4\n        /* \"#utility.yul\":2261:2278   */\n      add\n        /* \"#utility.yul\":2252:2258   */\n      dup5\n        /* \"#utility.yul\":2210:2279   */\n      tag_122\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":2068:2286   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2292:2369   */\n    tag_123:\n        /* \"#utility.yul\":2329:2336   */\n      0x00\n        /* \"#utility.yul\":2358:2363   */\n      dup2\n        /* \"#utility.yul\":2347:2363   */\n      swap1\n      pop\n        /* \"#utility.yul\":2292:2369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2375:2497   */\n    tag_124:\n        /* \"#utility.yul\":2448:2472   */\n      tag_197\n        /* \"#utility.yul\":2466:2471   */\n      dup2\n        /* \"#utility.yul\":2448:2472   */\n      tag_123\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2441:2446   */\n      dup2\n        /* \"#utility.yul\":2438:2473   */\n      eq\n        /* \"#utility.yul\":2428:2491   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":2487:2488   */\n      0x00\n        /* \"#utility.yul\":2484:2485   */\n      dup1\n        /* \"#utility.yul\":2477:2489   */\n      revert\n        /* \"#utility.yul\":2428:2491   */\n    tag_198:\n        /* \"#utility.yul\":2375:2497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2503:2642   */\n    tag_125:\n        /* \"#utility.yul\":2549:2554   */\n      0x00\n        /* \"#utility.yul\":2587:2593   */\n      dup2\n        /* \"#utility.yul\":2574:2594   */\n      calldataload\n        /* \"#utility.yul\":2565:2594   */\n      swap1\n      pop\n        /* \"#utility.yul\":2603:2636   */\n      tag_200\n        /* \"#utility.yul\":2630:2635   */\n      dup2\n        /* \"#utility.yul\":2603:2636   */\n      tag_124\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":2503:2642   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2648:3501   */\n    tag_24:\n        /* \"#utility.yul\":2778:2784   */\n      0x00\n        /* \"#utility.yul\":2786:2792   */\n      dup1\n        /* \"#utility.yul\":2794:2800   */\n      0x00\n        /* \"#utility.yul\":2802:2808   */\n      dup1\n        /* \"#utility.yul\":2851:2854   */\n      0x80\n        /* \"#utility.yul\":2839:2848   */\n      dup6\n        /* \"#utility.yul\":2830:2837   */\n      dup8\n        /* \"#utility.yul\":2826:2849   */\n      sub\n        /* \"#utility.yul\":2822:2855   */\n      slt\n        /* \"#utility.yul\":2819:2939   */\n      iszero\n      tag_202\n      jumpi\n        /* \"#utility.yul\":2858:2937   */\n      tag_203\n      tag_112\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2819:2939   */\n    tag_202:\n        /* \"#utility.yul\":2978:2979   */\n      0x00\n        /* \"#utility.yul\":3003:3056   */\n      tag_204\n        /* \"#utility.yul\":3048:3055   */\n      dup8\n        /* \"#utility.yul\":3039:3045   */\n      dup3\n        /* \"#utility.yul\":3028:3037   */\n      dup9\n        /* \"#utility.yul\":3024:3046   */\n      add\n        /* \"#utility.yul\":3003:3056   */\n      tag_125\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2993:3056   */\n      swap5\n      pop\n        /* \"#utility.yul\":2949:3066   */\n      pop\n        /* \"#utility.yul\":3105:3107   */\n      0x20\n        /* \"#utility.yul\":3131:3184   */\n      tag_205\n        /* \"#utility.yul\":3176:3183   */\n      dup8\n        /* \"#utility.yul\":3167:3173   */\n      dup3\n        /* \"#utility.yul\":3156:3165   */\n      dup9\n        /* \"#utility.yul\":3152:3174   */\n      add\n        /* \"#utility.yul\":3131:3184   */\n      tag_125\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":3121:3184   */\n      swap4\n      pop\n        /* \"#utility.yul\":3076:3194   */\n      pop\n        /* \"#utility.yul\":3233:3235   */\n      0x40\n        /* \"#utility.yul\":3259:3334   */\n      tag_206\n        /* \"#utility.yul\":3326:3333   */\n      dup8\n        /* \"#utility.yul\":3317:3323   */\n      dup3\n        /* \"#utility.yul\":3306:3315   */\n      dup9\n        /* \"#utility.yul\":3302:3324   */\n      add\n        /* \"#utility.yul\":3259:3334   */\n      tag_118\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3249:3334   */\n      swap3\n      pop\n        /* \"#utility.yul\":3204:3344   */\n      pop\n        /* \"#utility.yul\":3383:3385   */\n      0x60\n        /* \"#utility.yul\":3409:3484   */\n      tag_207\n        /* \"#utility.yul\":3476:3483   */\n      dup8\n        /* \"#utility.yul\":3467:3473   */\n      dup3\n        /* \"#utility.yul\":3456:3465   */\n      dup9\n        /* \"#utility.yul\":3452:3474   */\n      add\n        /* \"#utility.yul\":3409:3484   */\n      tag_118\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3399:3484   */\n      swap2\n      pop\n        /* \"#utility.yul\":3354:3494   */\n      pop\n        /* \"#utility.yul\":2648:3501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3507:3625   */\n    tag_126:\n        /* \"#utility.yul\":3594:3618   */\n      tag_209\n        /* \"#utility.yul\":3612:3617   */\n      dup2\n        /* \"#utility.yul\":3594:3618   */\n      tag_123\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3589:3592   */\n      dup3\n        /* \"#utility.yul\":3582:3619   */\n      mstore\n        /* \"#utility.yul\":3507:3625   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3631:3853   */\n    tag_27:\n        /* \"#utility.yul\":3724:3728   */\n      0x00\n        /* \"#utility.yul\":3762:3764   */\n      0x20\n        /* \"#utility.yul\":3751:3760   */\n      dup3\n        /* \"#utility.yul\":3747:3765   */\n      add\n        /* \"#utility.yul\":3739:3765   */\n      swap1\n      pop\n        /* \"#utility.yul\":3775:3846   */\n      tag_211\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3832:3841   */\n      dup4\n        /* \"#utility.yul\":3828:3845   */\n      add\n        /* \"#utility.yul\":3819:3825   */\n      dup5\n        /* \"#utility.yul\":3775:3846   */\n      tag_126\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":3631:3853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3859:4566   */\n    tag_31:\n        /* \"#utility.yul\":3980:3986   */\n      0x00\n        /* \"#utility.yul\":3988:3994   */\n      dup1\n        /* \"#utility.yul\":3996:4002   */\n      0x00\n        /* \"#utility.yul\":4045:4047   */\n      0x60\n        /* \"#utility.yul\":4033:4042   */\n      dup5\n        /* \"#utility.yul\":4024:4031   */\n      dup7\n        /* \"#utility.yul\":4020:4043   */\n      sub\n        /* \"#utility.yul\":4016:4048   */\n      slt\n        /* \"#utility.yul\":4013:4132   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":4051:4130   */\n      tag_214\n      tag_112\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4013:4132   */\n    tag_213:\n        /* \"#utility.yul\":4171:4172   */\n      0x00\n        /* \"#utility.yul\":4196:4249   */\n      tag_215\n        /* \"#utility.yul\":4241:4248   */\n      dup7\n        /* \"#utility.yul\":4232:4238   */\n      dup3\n        /* \"#utility.yul\":4221:4230   */\n      dup8\n        /* \"#utility.yul\":4217:4239   */\n      add\n        /* \"#utility.yul\":4196:4249   */\n      tag_125\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":4186:4249   */\n      swap4\n      pop\n        /* \"#utility.yul\":4142:4259   */\n      pop\n        /* \"#utility.yul\":4298:4300   */\n      0x20\n        /* \"#utility.yul\":4324:4399   */\n      tag_216\n        /* \"#utility.yul\":4391:4398   */\n      dup7\n        /* \"#utility.yul\":4382:4388   */\n      dup3\n        /* \"#utility.yul\":4371:4380   */\n      dup8\n        /* \"#utility.yul\":4367:4389   */\n      add\n        /* \"#utility.yul\":4324:4399   */\n      tag_118\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4314:4399   */\n      swap3\n      pop\n        /* \"#utility.yul\":4269:4409   */\n      pop\n        /* \"#utility.yul\":4448:4450   */\n      0x40\n        /* \"#utility.yul\":4474:4549   */\n      tag_217\n        /* \"#utility.yul\":4541:4548   */\n      dup7\n        /* \"#utility.yul\":4532:4538   */\n      dup3\n        /* \"#utility.yul\":4521:4530   */\n      dup8\n        /* \"#utility.yul\":4517:4539   */\n      add\n        /* \"#utility.yul\":4474:4549   */\n      tag_118\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4464:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4419:4559   */\n      pop\n        /* \"#utility.yul\":3859:4566   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4572:4632   */\n    tag_127:\n        /* \"#utility.yul\":4600:4603   */\n      0x00\n        /* \"#utility.yul\":4621:4626   */\n      dup2\n        /* \"#utility.yul\":4614:4626   */\n      swap1\n      pop\n        /* \"#utility.yul\":4572:4632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4638:4780   */\n    tag_128:\n        /* \"#utility.yul\":4688:4697   */\n      0x00\n        /* \"#utility.yul\":4721:4774   */\n      tag_220\n        /* \"#utility.yul\":4739:4773   */\n      tag_221\n        /* \"#utility.yul\":4748:4772   */\n      tag_222\n        /* \"#utility.yul\":4766:4771   */\n      dup5\n        /* \"#utility.yul\":4748:4772   */\n      tag_114\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4739:4773   */\n      tag_127\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":4721:4774   */\n      tag_114\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":4708:4774   */\n      swap1\n      pop\n        /* \"#utility.yul\":4638:4780   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4912   */\n    tag_129:\n        /* \"#utility.yul\":4836:4845   */\n      0x00\n        /* \"#utility.yul\":4869:4906   */\n      tag_224\n        /* \"#utility.yul\":4900:4905   */\n      dup3\n        /* \"#utility.yul\":4869:4906   */\n      tag_128\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":4856:4906   */\n      swap1\n      pop\n        /* \"#utility.yul\":4786:4912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4918:5065   */\n    tag_130:\n        /* \"#utility.yul\":4989:4998   */\n      0x00\n        /* \"#utility.yul\":5022:5059   */\n      tag_226\n        /* \"#utility.yul\":5053:5058   */\n      dup3\n        /* \"#utility.yul\":5022:5059   */\n      tag_129\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":5009:5059   */\n      swap1\n      pop\n        /* \"#utility.yul\":4918:5065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5071:5244   */\n    tag_131:\n        /* \"#utility.yul\":5179:5237   */\n      tag_228\n        /* \"#utility.yul\":5231:5236   */\n      dup2\n        /* \"#utility.yul\":5179:5237   */\n      tag_130\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5174:5177   */\n      dup3\n        /* \"#utility.yul\":5167:5238   */\n      mstore\n        /* \"#utility.yul\":5071:5244   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5250:5514   */\n    tag_38:\n        /* \"#utility.yul\":5364:5368   */\n      0x00\n        /* \"#utility.yul\":5402:5404   */\n      0x20\n        /* \"#utility.yul\":5391:5400   */\n      dup3\n        /* \"#utility.yul\":5387:5405   */\n      add\n        /* \"#utility.yul\":5379:5405   */\n      swap1\n      pop\n        /* \"#utility.yul\":5415:5507   */\n      tag_230\n        /* \"#utility.yul\":5504:5505   */\n      0x00\n        /* \"#utility.yul\":5493:5502   */\n      dup4\n        /* \"#utility.yul\":5489:5506   */\n      add\n        /* \"#utility.yul\":5480:5486   */\n      dup5\n        /* \"#utility.yul\":5415:5507   */\n      tag_131\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":5250:5514   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5520:5671   */\n    tag_132:\n        /* \"#utility.yul\":5595:5604   */\n      0x00\n        /* \"#utility.yul\":5628:5665   */\n      tag_232\n        /* \"#utility.yul\":5659:5664   */\n      dup3\n        /* \"#utility.yul\":5628:5665   */\n      tag_129\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5615:5665   */\n      swap1\n      pop\n        /* \"#utility.yul\":5520:5671   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5677:5858   */\n    tag_133:\n        /* \"#utility.yul\":5789:5851   */\n      tag_234\n        /* \"#utility.yul\":5845:5850   */\n      dup2\n        /* \"#utility.yul\":5789:5851   */\n      tag_132\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5784:5787   */\n      dup3\n        /* \"#utility.yul\":5777:5852   */\n      mstore\n        /* \"#utility.yul\":5677:5858   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5864:6136   */\n    tag_43:\n        /* \"#utility.yul\":5982:5986   */\n      0x00\n        /* \"#utility.yul\":6020:6022   */\n      0x20\n        /* \"#utility.yul\":6009:6018   */\n      dup3\n        /* \"#utility.yul\":6005:6023   */\n      add\n        /* \"#utility.yul\":5997:6023   */\n      swap1\n      pop\n        /* \"#utility.yul\":6033:6129   */\n      tag_236\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6115:6124   */\n      dup4\n        /* \"#utility.yul\":6111:6128   */\n      add\n        /* \"#utility.yul\":6102:6108   */\n      dup5\n        /* \"#utility.yul\":6033:6129   */\n      tag_133\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5864:6136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6142:6260   */\n    tag_134:\n        /* \"#utility.yul\":6229:6253   */\n      tag_238\n        /* \"#utility.yul\":6247:6252   */\n      dup2\n        /* \"#utility.yul\":6229:6253   */\n      tag_115\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6224:6227   */\n      dup3\n        /* \"#utility.yul\":6217:6254   */\n      mstore\n        /* \"#utility.yul\":6142:6260   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6266:6488   */\n    tag_46:\n        /* \"#utility.yul\":6359:6363   */\n      0x00\n        /* \"#utility.yul\":6397:6399   */\n      0x20\n        /* \"#utility.yul\":6386:6395   */\n      dup3\n        /* \"#utility.yul\":6382:6400   */\n      add\n        /* \"#utility.yul\":6374:6400   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6481   */\n      tag_240\n        /* \"#utility.yul\":6478:6479   */\n      0x00\n        /* \"#utility.yul\":6467:6476   */\n      dup4\n        /* \"#utility.yul\":6463:6480   */\n      add\n        /* \"#utility.yul\":6454:6460   */\n      dup5\n        /* \"#utility.yul\":6410:6481   */\n      tag_134\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6266:6488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:6637   */\n    tag_135:\n        /* \"#utility.yul\":6551:6556   */\n      0x00\n        /* \"#utility.yul\":6582:6588   */\n      dup2\n        /* \"#utility.yul\":6576:6589   */\n      mload\n        /* \"#utility.yul\":6567:6589   */\n      swap1\n      pop\n        /* \"#utility.yul\":6598:6631   */\n      tag_242\n        /* \"#utility.yul\":6625:6630   */\n      dup2\n        /* \"#utility.yul\":6598:6631   */\n      tag_124\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":6494:6637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6643:6994   */\n    tag_50:\n        /* \"#utility.yul\":6713:6719   */\n      0x00\n        /* \"#utility.yul\":6762:6764   */\n      0x20\n        /* \"#utility.yul\":6750:6759   */\n      dup3\n        /* \"#utility.yul\":6741:6748   */\n      dup5\n        /* \"#utility.yul\":6737:6760   */\n      sub\n        /* \"#utility.yul\":6733:6765   */\n      slt\n        /* \"#utility.yul\":6730:6849   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":6768:6847   */\n      tag_245\n      tag_112\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6730:6849   */\n    tag_244:\n        /* \"#utility.yul\":6888:6889   */\n      0x00\n        /* \"#utility.yul\":6913:6977   */\n      tag_246\n        /* \"#utility.yul\":6969:6976   */\n      dup5\n        /* \"#utility.yul\":6960:6966   */\n      dup3\n        /* \"#utility.yul\":6949:6958   */\n      dup6\n        /* \"#utility.yul\":6945:6967   */\n      add\n        /* \"#utility.yul\":6913:6977   */\n      tag_135\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6903:6977   */\n      swap2\n      pop\n        /* \"#utility.yul\":6859:6987   */\n      pop\n        /* \"#utility.yul\":6643:6994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7000:7332   */\n    tag_52:\n        /* \"#utility.yul\":7121:7125   */\n      0x00\n        /* \"#utility.yul\":7159:7161   */\n      0x40\n        /* \"#utility.yul\":7148:7157   */\n      dup3\n        /* \"#utility.yul\":7144:7162   */\n      add\n        /* \"#utility.yul\":7136:7162   */\n      swap1\n      pop\n        /* \"#utility.yul\":7172:7243   */\n      tag_248\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7229:7238   */\n      dup4\n        /* \"#utility.yul\":7225:7242   */\n      add\n        /* \"#utility.yul\":7216:7222   */\n      dup6\n        /* \"#utility.yul\":7172:7243   */\n      tag_134\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":7253:7325   */\n      tag_249\n        /* \"#utility.yul\":7321:7323   */\n      0x20\n        /* \"#utility.yul\":7310:7319   */\n      dup4\n        /* \"#utility.yul\":7306:7324   */\n      add\n        /* \"#utility.yul\":7297:7303   */\n      dup5\n        /* \"#utility.yul\":7253:7325   */\n      tag_126\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7000:7332   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7338:7428   */\n    tag_136:\n        /* \"#utility.yul\":7372:7379   */\n      0x00\n        /* \"#utility.yul\":7415:7420   */\n      dup2\n        /* \"#utility.yul\":7408:7421   */\n      iszero\n        /* \"#utility.yul\":7401:7422   */\n      iszero\n        /* \"#utility.yul\":7390:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7338:7428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7434:7550   */\n    tag_137:\n        /* \"#utility.yul\":7504:7525   */\n      tag_252\n        /* \"#utility.yul\":7519:7524   */\n      dup2\n        /* \"#utility.yul\":7504:7525   */\n      tag_136\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7497:7502   */\n      dup2\n        /* \"#utility.yul\":7494:7526   */\n      eq\n        /* \"#utility.yul\":7484:7544   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":7540:7541   */\n      0x00\n        /* \"#utility.yul\":7537:7538   */\n      dup1\n        /* \"#utility.yul\":7530:7542   */\n      revert\n        /* \"#utility.yul\":7484:7544   */\n    tag_253:\n        /* \"#utility.yul\":7434:7550   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7556:7693   */\n    tag_138:\n        /* \"#utility.yul\":7610:7615   */\n      0x00\n        /* \"#utility.yul\":7641:7647   */\n      dup2\n        /* \"#utility.yul\":7635:7648   */\n      mload\n        /* \"#utility.yul\":7626:7648   */\n      swap1\n      pop\n        /* \"#utility.yul\":7657:7687   */\n      tag_255\n        /* \"#utility.yul\":7681:7686   */\n      dup2\n        /* \"#utility.yul\":7657:7687   */\n      tag_137\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7556:7693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8044   */\n    tag_56:\n        /* \"#utility.yul\":7766:7772   */\n      0x00\n        /* \"#utility.yul\":7815:7817   */\n      0x20\n        /* \"#utility.yul\":7803:7812   */\n      dup3\n        /* \"#utility.yul\":7794:7801   */\n      dup5\n        /* \"#utility.yul\":7790:7813   */\n      sub\n        /* \"#utility.yul\":7786:7818   */\n      slt\n        /* \"#utility.yul\":7783:7902   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":7821:7900   */\n      tag_258\n      tag_112\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7783:7902   */\n    tag_257:\n        /* \"#utility.yul\":7941:7942   */\n      0x00\n        /* \"#utility.yul\":7966:8027   */\n      tag_259\n        /* \"#utility.yul\":8019:8026   */\n      dup5\n        /* \"#utility.yul\":8010:8016   */\n      dup3\n        /* \"#utility.yul\":7999:8008   */\n      dup6\n        /* \"#utility.yul\":7995:8017   */\n      add\n        /* \"#utility.yul\":7966:8027   */\n      tag_138\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7956:8027   */\n      swap2\n      pop\n        /* \"#utility.yul\":7912:8037   */\n      pop\n        /* \"#utility.yul\":7699:8044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8050:8488   */\n    tag_63:\n        /* \"#utility.yul\":8197:8201   */\n      0x00\n        /* \"#utility.yul\":8235:8237   */\n      0x60\n        /* \"#utility.yul\":8224:8233   */\n      dup3\n        /* \"#utility.yul\":8220:8238   */\n      add\n        /* \"#utility.yul\":8212:8238   */\n      swap1\n      pop\n        /* \"#utility.yul\":8248:8319   */\n      tag_261\n        /* \"#utility.yul\":8316:8317   */\n      0x00\n        /* \"#utility.yul\":8305:8314   */\n      dup4\n        /* \"#utility.yul\":8301:8318   */\n      add\n        /* \"#utility.yul\":8292:8298   */\n      dup7\n        /* \"#utility.yul\":8248:8319   */\n      tag_134\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":8329:8401   */\n      tag_262\n        /* \"#utility.yul\":8397:8399   */\n      0x20\n        /* \"#utility.yul\":8386:8395   */\n      dup4\n        /* \"#utility.yul\":8382:8400   */\n      add\n        /* \"#utility.yul\":8373:8379   */\n      dup6\n        /* \"#utility.yul\":8329:8401   */\n      tag_134\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":8411:8481   */\n      tag_263\n        /* \"#utility.yul\":8477:8479   */\n      0x40\n        /* \"#utility.yul\":8466:8475   */\n      dup4\n        /* \"#utility.yul\":8462:8480   */\n      add\n        /* \"#utility.yul\":8453:8459   */\n      dup5\n        /* \"#utility.yul\":8411:8481   */\n      tag_122\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8050:8488   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8494:8637   */\n    tag_139:\n        /* \"#utility.yul\":8551:8556   */\n      0x00\n        /* \"#utility.yul\":8582:8588   */\n      dup2\n        /* \"#utility.yul\":8576:8589   */\n      mload\n        /* \"#utility.yul\":8567:8589   */\n      swap1\n      pop\n        /* \"#utility.yul\":8598:8631   */\n      tag_265\n        /* \"#utility.yul\":8625:8630   */\n      dup2\n        /* \"#utility.yul\":8598:8631   */\n      tag_119\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":8494:8637   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8643:8994   */\n    tag_67:\n        /* \"#utility.yul\":8713:8719   */\n      0x00\n        /* \"#utility.yul\":8762:8764   */\n      0x20\n        /* \"#utility.yul\":8750:8759   */\n      dup3\n        /* \"#utility.yul\":8741:8748   */\n      dup5\n        /* \"#utility.yul\":8737:8760   */\n      sub\n        /* \"#utility.yul\":8733:8765   */\n      slt\n        /* \"#utility.yul\":8730:8849   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":8768:8847   */\n      tag_268\n      tag_112\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8730:8849   */\n    tag_267:\n        /* \"#utility.yul\":8888:8889   */\n      0x00\n        /* \"#utility.yul\":8913:8977   */\n      tag_269\n        /* \"#utility.yul\":8969:8976   */\n      dup5\n        /* \"#utility.yul\":8960:8966   */\n      dup3\n        /* \"#utility.yul\":8949:8958   */\n      dup6\n        /* \"#utility.yul\":8945:8967   */\n      add\n        /* \"#utility.yul\":8913:8977   */\n      tag_139\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8903:8977   */\n      swap2\n      pop\n        /* \"#utility.yul\":8859:8987   */\n      pop\n        /* \"#utility.yul\":8643:8994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9000:9120   */\n    tag_140:\n        /* \"#utility.yul\":9072:9095   */\n      tag_271\n        /* \"#utility.yul\":9089:9094   */\n      dup2\n        /* \"#utility.yul\":9072:9095   */\n      tag_121\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":9065:9070   */\n      dup2\n        /* \"#utility.yul\":9062:9096   */\n      eq\n        /* \"#utility.yul\":9052:9114   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":9110:9111   */\n      0x00\n        /* \"#utility.yul\":9107:9108   */\n      dup1\n        /* \"#utility.yul\":9100:9112   */\n      revert\n        /* \"#utility.yul\":9052:9114   */\n    tag_272:\n        /* \"#utility.yul\":9000:9120   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9126:9267   */\n    tag_141:\n        /* \"#utility.yul\":9182:9187   */\n      0x00\n        /* \"#utility.yul\":9213:9219   */\n      dup2\n        /* \"#utility.yul\":9207:9220   */\n      mload\n        /* \"#utility.yul\":9198:9220   */\n      swap1\n      pop\n        /* \"#utility.yul\":9229:9261   */\n      tag_274\n        /* \"#utility.yul\":9255:9260   */\n      dup2\n        /* \"#utility.yul\":9229:9261   */\n      tag_140\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9126:9267   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9273:9622   */\n    tag_71:\n        /* \"#utility.yul\":9342:9348   */\n      0x00\n        /* \"#utility.yul\":9391:9393   */\n      0x20\n        /* \"#utility.yul\":9379:9388   */\n      dup3\n        /* \"#utility.yul\":9370:9377   */\n      dup5\n        /* \"#utility.yul\":9366:9389   */\n      sub\n        /* \"#utility.yul\":9362:9394   */\n      slt\n        /* \"#utility.yul\":9359:9478   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":9397:9476   */\n      tag_277\n      tag_112\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9359:9478   */\n    tag_276:\n        /* \"#utility.yul\":9517:9518   */\n      0x00\n        /* \"#utility.yul\":9542:9605   */\n      tag_278\n        /* \"#utility.yul\":9597:9604   */\n      dup5\n        /* \"#utility.yul\":9588:9594   */\n      dup3\n        /* \"#utility.yul\":9577:9586   */\n      dup6\n        /* \"#utility.yul\":9573:9595   */\n      add\n        /* \"#utility.yul\":9542:9605   */\n      tag_141\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":9532:9605   */\n      swap2\n      pop\n        /* \"#utility.yul\":9488:9615   */\n      pop\n        /* \"#utility.yul\":9273:9622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9628:9750   */\n    tag_142:\n        /* \"#utility.yul\":9701:9725   */\n      tag_280\n        /* \"#utility.yul\":9719:9724   */\n      dup2\n        /* \"#utility.yul\":9701:9725   */\n      tag_114\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9694:9699   */\n      dup2\n        /* \"#utility.yul\":9691:9726   */\n      eq\n        /* \"#utility.yul\":9681:9744   */\n      tag_281\n      jumpi\n        /* \"#utility.yul\":9740:9741   */\n      0x00\n        /* \"#utility.yul\":9737:9738   */\n      dup1\n        /* \"#utility.yul\":9730:9742   */\n      revert\n        /* \"#utility.yul\":9681:9744   */\n    tag_281:\n        /* \"#utility.yul\":9628:9750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9756:9899   */\n    tag_143:\n        /* \"#utility.yul\":9813:9818   */\n      0x00\n        /* \"#utility.yul\":9844:9850   */\n      dup2\n        /* \"#utility.yul\":9838:9851   */\n      mload\n        /* \"#utility.yul\":9829:9851   */\n      swap1\n      pop\n        /* \"#utility.yul\":9860:9893   */\n      tag_283\n        /* \"#utility.yul\":9887:9892   */\n      dup2\n        /* \"#utility.yul\":9860:9893   */\n      tag_142\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":9756:9899   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9905:9995   */\n    tag_144:\n        /* \"#utility.yul\":9940:9947   */\n      0x00\n        /* \"#utility.yul\":9983:9988   */\n      dup2\n        /* \"#utility.yul\":9980:9981   */\n      0x02\n        /* \"#utility.yul\":9969:9989   */\n      signextend\n        /* \"#utility.yul\":9958:9989   */\n      swap1\n      pop\n        /* \"#utility.yul\":9905:9995   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10001:10119   */\n    tag_145:\n        /* \"#utility.yul\":10072:10094   */\n      tag_286\n        /* \"#utility.yul\":10088:10093   */\n      dup2\n        /* \"#utility.yul\":10072:10094   */\n      tag_144\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10065:10070   */\n      dup2\n        /* \"#utility.yul\":10062:10095   */\n      eq\n        /* \"#utility.yul\":10052:10113   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":10109:10110   */\n      0x00\n        /* \"#utility.yul\":10106:10107   */\n      dup1\n        /* \"#utility.yul\":10099:10111   */\n      revert\n        /* \"#utility.yul\":10052:10113   */\n    tag_287:\n        /* \"#utility.yul\":10001:10119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10125:10264   */\n    tag_146:\n        /* \"#utility.yul\":10180:10185   */\n      0x00\n        /* \"#utility.yul\":10211:10217   */\n      dup2\n        /* \"#utility.yul\":10205:10218   */\n      mload\n        /* \"#utility.yul\":10196:10218   */\n      swap1\n      pop\n        /* \"#utility.yul\":10227:10258   */\n      tag_289\n        /* \"#utility.yul\":10252:10257   */\n      dup2\n        /* \"#utility.yul\":10227:10258   */\n      tag_145\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10125:10264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10270:10359   */\n    tag_147:\n        /* \"#utility.yul\":10306:10313   */\n      0x00\n        /* \"#utility.yul\":10346:10352   */\n      0xffff\n        /* \"#utility.yul\":10339:10344   */\n      dup3\n        /* \"#utility.yul\":10335:10353   */\n      and\n        /* \"#utility.yul\":10324:10353   */\n      swap1\n      pop\n        /* \"#utility.yul\":10270:10359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10365:10485   */\n    tag_148:\n        /* \"#utility.yul\":10437:10460   */\n      tag_292\n        /* \"#utility.yul\":10454:10459   */\n      dup2\n        /* \"#utility.yul\":10437:10460   */\n      tag_147\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":10430:10435   */\n      dup2\n        /* \"#utility.yul\":10427:10461   */\n      eq\n        /* \"#utility.yul\":10417:10479   */\n      tag_293\n      jumpi\n        /* \"#utility.yul\":10475:10476   */\n      0x00\n        /* \"#utility.yul\":10472:10473   */\n      dup1\n        /* \"#utility.yul\":10465:10477   */\n      revert\n        /* \"#utility.yul\":10417:10479   */\n    tag_293:\n        /* \"#utility.yul\":10365:10485   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10491:10632   */\n    tag_149:\n        /* \"#utility.yul\":10547:10552   */\n      0x00\n        /* \"#utility.yul\":10578:10584   */\n      dup2\n        /* \"#utility.yul\":10572:10585   */\n      mload\n        /* \"#utility.yul\":10563:10585   */\n      swap1\n      pop\n        /* \"#utility.yul\":10594:10626   */\n      tag_295\n        /* \"#utility.yul\":10620:10625   */\n      dup2\n        /* \"#utility.yul\":10594:10626   */\n      tag_148\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10491:10632   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10638:10724   */\n    tag_150:\n        /* \"#utility.yul\":10673:10680   */\n      0x00\n        /* \"#utility.yul\":10713:10717   */\n      0xff\n        /* \"#utility.yul\":10706:10711   */\n      dup3\n        /* \"#utility.yul\":10702:10718   */\n      and\n        /* \"#utility.yul\":10691:10718   */\n      swap1\n      pop\n        /* \"#utility.yul\":10638:10724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10730:10848   */\n    tag_151:\n        /* \"#utility.yul\":10801:10823   */\n      tag_298\n        /* \"#utility.yul\":10817:10822   */\n      dup2\n        /* \"#utility.yul\":10801:10823   */\n      tag_150\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10794:10799   */\n      dup2\n        /* \"#utility.yul\":10791:10824   */\n      eq\n        /* \"#utility.yul\":10781:10842   */\n      tag_299\n      jumpi\n        /* \"#utility.yul\":10838:10839   */\n      0x00\n        /* \"#utility.yul\":10835:10836   */\n      dup1\n        /* \"#utility.yul\":10828:10840   */\n      revert\n        /* \"#utility.yul\":10781:10842   */\n    tag_299:\n        /* \"#utility.yul\":10730:10848   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10854:10993   */\n    tag_152:\n        /* \"#utility.yul\":10909:10914   */\n      0x00\n        /* \"#utility.yul\":10940:10946   */\n      dup2\n        /* \"#utility.yul\":10934:10947   */\n      mload\n        /* \"#utility.yul\":10925:10947   */\n      swap1\n      pop\n        /* \"#utility.yul\":10956:10987   */\n      tag_301\n        /* \"#utility.yul\":10981:10986   */\n      dup2\n        /* \"#utility.yul\":10956:10987   */\n      tag_151\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":10854:10993   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10999:12270   */\n    tag_75:\n        /* \"#utility.yul\":11113:11119   */\n      0x00\n        /* \"#utility.yul\":11121:11127   */\n      dup1\n        /* \"#utility.yul\":11129:11135   */\n      0x00\n        /* \"#utility.yul\":11137:11143   */\n      dup1\n        /* \"#utility.yul\":11145:11151   */\n      0x00\n        /* \"#utility.yul\":11153:11159   */\n      dup1\n        /* \"#utility.yul\":11161:11167   */\n      0x00\n        /* \"#utility.yul\":11210:11213   */\n      0xe0\n        /* \"#utility.yul\":11198:11207   */\n      dup9\n        /* \"#utility.yul\":11189:11196   */\n      dup11\n        /* \"#utility.yul\":11185:11208   */\n      sub\n        /* \"#utility.yul\":11181:11214   */\n      slt\n        /* \"#utility.yul\":11178:11298   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":11217:11296   */\n      tag_304\n      tag_112\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11178:11298   */\n    tag_303:\n        /* \"#utility.yul\":11337:11338   */\n      0x00\n        /* \"#utility.yul\":11362:11426   */\n      tag_305\n        /* \"#utility.yul\":11418:11425   */\n      dup11\n        /* \"#utility.yul\":11409:11415   */\n      dup3\n        /* \"#utility.yul\":11398:11407   */\n      dup12\n        /* \"#utility.yul\":11394:11416   */\n      add\n        /* \"#utility.yul\":11362:11426   */\n      tag_143\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11352:11426   */\n      swap8\n      pop\n        /* \"#utility.yul\":11308:11436   */\n      pop\n        /* \"#utility.yul\":11475:11477   */\n      0x20\n        /* \"#utility.yul\":11501:11563   */\n      tag_306\n        /* \"#utility.yul\":11555:11562   */\n      dup11\n        /* \"#utility.yul\":11546:11552   */\n      dup3\n        /* \"#utility.yul\":11535:11544   */\n      dup12\n        /* \"#utility.yul\":11531:11553   */\n      add\n        /* \"#utility.yul\":11501:11563   */\n      tag_146\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11491:11563   */\n      swap7\n      pop\n        /* \"#utility.yul\":11446:11573   */\n      pop\n        /* \"#utility.yul\":11612:11614   */\n      0x40\n        /* \"#utility.yul\":11638:11701   */\n      tag_307\n        /* \"#utility.yul\":11693:11700   */\n      dup11\n        /* \"#utility.yul\":11684:11690   */\n      dup3\n        /* \"#utility.yul\":11673:11682   */\n      dup12\n        /* \"#utility.yul\":11669:11691   */\n      add\n        /* \"#utility.yul\":11638:11701   */\n      tag_149\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":11628:11701   */\n      swap6\n      pop\n        /* \"#utility.yul\":11583:11711   */\n      pop\n        /* \"#utility.yul\":11750:11752   */\n      0x60\n        /* \"#utility.yul\":11776:11839   */\n      tag_308\n        /* \"#utility.yul\":11831:11838   */\n      dup11\n        /* \"#utility.yul\":11822:11828   */\n      dup3\n        /* \"#utility.yul\":11811:11820   */\n      dup12\n        /* \"#utility.yul\":11807:11829   */\n      add\n        /* \"#utility.yul\":11776:11839   */\n      tag_149\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":11766:11839   */\n      swap5\n      pop\n        /* \"#utility.yul\":11721:11849   */\n      pop\n        /* \"#utility.yul\":11888:11891   */\n      0x80\n        /* \"#utility.yul\":11915:11978   */\n      tag_309\n        /* \"#utility.yul\":11970:11977   */\n      dup11\n        /* \"#utility.yul\":11961:11967   */\n      dup3\n        /* \"#utility.yul\":11950:11959   */\n      dup12\n        /* \"#utility.yul\":11946:11968   */\n      add\n        /* \"#utility.yul\":11915:11978   */\n      tag_149\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11905:11978   */\n      swap4\n      pop\n        /* \"#utility.yul\":11859:11988   */\n      pop\n        /* \"#utility.yul\":12027:12030   */\n      0xa0\n        /* \"#utility.yul\":12054:12116   */\n      tag_310\n        /* \"#utility.yul\":12108:12115   */\n      dup11\n        /* \"#utility.yul\":12099:12105   */\n      dup3\n        /* \"#utility.yul\":12088:12097   */\n      dup12\n        /* \"#utility.yul\":12084:12106   */\n      add\n        /* \"#utility.yul\":12054:12116   */\n      tag_152\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":12044:12116   */\n      swap3\n      pop\n        /* \"#utility.yul\":11998:12126   */\n      pop\n        /* \"#utility.yul\":12165:12168   */\n      0xc0\n        /* \"#utility.yul\":12192:12253   */\n      tag_311\n        /* \"#utility.yul\":12245:12252   */\n      dup11\n        /* \"#utility.yul\":12236:12242   */\n      dup3\n        /* \"#utility.yul\":12225:12234   */\n      dup12\n        /* \"#utility.yul\":12221:12243   */\n      add\n        /* \"#utility.yul\":12192:12253   */\n      tag_138\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":12182:12253   */\n      swap2\n      pop\n        /* \"#utility.yul\":12136:12263   */\n      pop\n        /* \"#utility.yul\":10999:12270   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12276:12384   */\n    tag_153:\n        /* \"#utility.yul\":12353:12377   */\n      tag_313\n        /* \"#utility.yul\":12371:12376   */\n      dup2\n        /* \"#utility.yul\":12353:12377   */\n      tag_115\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":12348:12351   */\n      dup3\n        /* \"#utility.yul\":12341:12378   */\n      mstore\n        /* \"#utility.yul\":12276:12384   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12390:12495   */\n    tag_154:\n        /* \"#utility.yul\":12465:12488   */\n      tag_315\n        /* \"#utility.yul\":12482:12487   */\n      dup2\n        /* \"#utility.yul\":12465:12488   */\n      tag_121\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12460:12463   */\n      dup3\n        /* \"#utility.yul\":12453:12489   */\n      mstore\n        /* \"#utility.yul\":12390:12495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12501:12609   */\n    tag_155:\n        /* \"#utility.yul\":12578:12602   */\n      tag_317\n        /* \"#utility.yul\":12596:12601   */\n      dup2\n        /* \"#utility.yul\":12578:12602   */\n      tag_123\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":12573:12576   */\n      dup3\n        /* \"#utility.yul\":12566:12603   */\n      mstore\n        /* \"#utility.yul\":12501:12609   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12615:12723   */\n    tag_156:\n        /* \"#utility.yul\":12692:12716   */\n      tag_319\n        /* \"#utility.yul\":12710:12715   */\n      dup2\n        /* \"#utility.yul\":12692:12716   */\n      tag_114\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":12687:12690   */\n      dup3\n        /* \"#utility.yul\":12680:12717   */\n      mstore\n        /* \"#utility.yul\":12615:12723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12829:14274   */\n    tag_157:\n        /* \"#utility.yul\":13006:13010   */\n      0xe0\n        /* \"#utility.yul\":13001:13004   */\n      dup3\n        /* \"#utility.yul\":12997:13011   */\n      add\n        /* \"#utility.yul\":13096:13100   */\n      0x00\n        /* \"#utility.yul\":13089:13094   */\n      dup3\n        /* \"#utility.yul\":13085:13101   */\n      add\n        /* \"#utility.yul\":13079:13102   */\n      mload\n        /* \"#utility.yul\":13115:13178   */\n      tag_321\n        /* \"#utility.yul\":13172:13176   */\n      0x00\n        /* \"#utility.yul\":13167:13170   */\n      dup6\n        /* \"#utility.yul\":13163:13177   */\n      add\n        /* \"#utility.yul\":13149:13161   */\n      dup3\n        /* \"#utility.yul\":13115:13178   */\n      tag_153\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":13021:13188   */\n      pop\n        /* \"#utility.yul\":13274:13278   */\n      0x20\n        /* \"#utility.yul\":13267:13272   */\n      dup3\n        /* \"#utility.yul\":13263:13279   */\n      add\n        /* \"#utility.yul\":13257:13280   */\n      mload\n        /* \"#utility.yul\":13293:13356   */\n      tag_322\n        /* \"#utility.yul\":13350:13354   */\n      0x20\n        /* \"#utility.yul\":13345:13348   */\n      dup6\n        /* \"#utility.yul\":13341:13355   */\n      add\n        /* \"#utility.yul\":13327:13339   */\n      dup3\n        /* \"#utility.yul\":13293:13356   */\n      tag_153\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":13198:13366   */\n      pop\n        /* \"#utility.yul\":13447:13451   */\n      0x40\n        /* \"#utility.yul\":13440:13445   */\n      dup3\n        /* \"#utility.yul\":13436:13452   */\n      add\n        /* \"#utility.yul\":13430:13453   */\n      mload\n        /* \"#utility.yul\":13466:13527   */\n      tag_323\n        /* \"#utility.yul\":13521:13525   */\n      0x40\n        /* \"#utility.yul\":13516:13519   */\n      dup6\n        /* \"#utility.yul\":13512:13526   */\n      add\n        /* \"#utility.yul\":13498:13510   */\n      dup3\n        /* \"#utility.yul\":13466:13527   */\n      tag_154\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":13376:13537   */\n      pop\n        /* \"#utility.yul\":13624:13628   */\n      0x60\n        /* \"#utility.yul\":13617:13622   */\n      dup3\n        /* \"#utility.yul\":13613:13629   */\n      add\n        /* \"#utility.yul\":13607:13630   */\n      mload\n        /* \"#utility.yul\":13643:13706   */\n      tag_324\n        /* \"#utility.yul\":13700:13704   */\n      0x60\n        /* \"#utility.yul\":13695:13698   */\n      dup6\n        /* \"#utility.yul\":13691:13705   */\n      add\n        /* \"#utility.yul\":13677:13689   */\n      dup3\n        /* \"#utility.yul\":13643:13706   */\n      tag_153\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":13547:13716   */\n      pop\n        /* \"#utility.yul\":13803:13807   */\n      0x80\n        /* \"#utility.yul\":13796:13801   */\n      dup3\n        /* \"#utility.yul\":13792:13808   */\n      add\n        /* \"#utility.yul\":13786:13809   */\n      mload\n        /* \"#utility.yul\":13822:13885   */\n      tag_325\n        /* \"#utility.yul\":13879:13883   */\n      0x80\n        /* \"#utility.yul\":13874:13877   */\n      dup6\n        /* \"#utility.yul\":13870:13884   */\n      add\n        /* \"#utility.yul\":13856:13868   */\n      dup3\n        /* \"#utility.yul\":13822:13885   */\n      tag_155\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":13726:13895   */\n      pop\n        /* \"#utility.yul\":13988:13992   */\n      0xa0\n        /* \"#utility.yul\":13981:13986   */\n      dup3\n        /* \"#utility.yul\":13977:13993   */\n      add\n        /* \"#utility.yul\":13971:13994   */\n      mload\n        /* \"#utility.yul\":14007:14070   */\n      tag_326\n        /* \"#utility.yul\":14064:14068   */\n      0xa0\n        /* \"#utility.yul\":14059:14062   */\n      dup6\n        /* \"#utility.yul\":14055:14069   */\n      add\n        /* \"#utility.yul\":14041:14053   */\n      dup3\n        /* \"#utility.yul\":14007:14070   */\n      tag_155\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":13905:14080   */\n      pop\n        /* \"#utility.yul\":14175:14179   */\n      0xc0\n        /* \"#utility.yul\":14168:14173   */\n      dup3\n        /* \"#utility.yul\":14164:14180   */\n      add\n        /* \"#utility.yul\":14158:14181   */\n      mload\n        /* \"#utility.yul\":14194:14257   */\n      tag_327\n        /* \"#utility.yul\":14251:14255   */\n      0xc0\n        /* \"#utility.yul\":14246:14249   */\n      dup6\n        /* \"#utility.yul\":14242:14256   */\n      add\n        /* \"#utility.yul\":14228:14240   */\n      dup3\n        /* \"#utility.yul\":14194:14257   */\n      tag_156\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":14090:14267   */\n      pop\n        /* \"#utility.yul\":12975:14274   */\n      pop\n        /* \"#utility.yul\":12829:14274   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14280:14663   */\n    tag_77:\n        /* \"#utility.yul\":14453:14457   */\n      0x00\n        /* \"#utility.yul\":14491:14494   */\n      0xe0\n        /* \"#utility.yul\":14480:14489   */\n      dup3\n        /* \"#utility.yul\":14476:14495   */\n      add\n        /* \"#utility.yul\":14468:14495   */\n      swap1\n      pop\n        /* \"#utility.yul\":14505:14656   */\n      tag_329\n        /* \"#utility.yul\":14653:14654   */\n      0x00\n        /* \"#utility.yul\":14642:14651   */\n      dup4\n        /* \"#utility.yul\":14638:14655   */\n      add\n        /* \"#utility.yul\":14629:14635   */\n      dup5\n        /* \"#utility.yul\":14505:14656   */\n      tag_157\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":14280:14663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14767:16210   */\n    tag_158:\n        /* \"#utility.yul\":14942:14946   */\n      0xe0\n        /* \"#utility.yul\":14937:14940   */\n      dup3\n        /* \"#utility.yul\":14933:14947   */\n      add\n        /* \"#utility.yul\":15032:15036   */\n      0x00\n        /* \"#utility.yul\":15025:15030   */\n      dup3\n        /* \"#utility.yul\":15021:15037   */\n      add\n        /* \"#utility.yul\":15015:15038   */\n      mload\n        /* \"#utility.yul\":15051:15114   */\n      tag_331\n        /* \"#utility.yul\":15108:15112   */\n      0x00\n        /* \"#utility.yul\":15103:15106   */\n      dup6\n        /* \"#utility.yul\":15099:15113   */\n      add\n        /* \"#utility.yul\":15085:15097   */\n      dup3\n        /* \"#utility.yul\":15051:15114   */\n      tag_153\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14957:15124   */\n      pop\n        /* \"#utility.yul\":15210:15214   */\n      0x20\n        /* \"#utility.yul\":15203:15208   */\n      dup3\n        /* \"#utility.yul\":15199:15215   */\n      add\n        /* \"#utility.yul\":15193:15216   */\n      mload\n        /* \"#utility.yul\":15229:15292   */\n      tag_332\n        /* \"#utility.yul\":15286:15290   */\n      0x20\n        /* \"#utility.yul\":15281:15284   */\n      dup6\n        /* \"#utility.yul\":15277:15291   */\n      add\n        /* \"#utility.yul\":15263:15275   */\n      dup3\n        /* \"#utility.yul\":15229:15292   */\n      tag_153\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":15134:15302   */\n      pop\n        /* \"#utility.yul\":15383:15387   */\n      0x40\n        /* \"#utility.yul\":15376:15381   */\n      dup3\n        /* \"#utility.yul\":15372:15388   */\n      add\n        /* \"#utility.yul\":15366:15389   */\n      mload\n        /* \"#utility.yul\":15402:15463   */\n      tag_333\n        /* \"#utility.yul\":15457:15461   */\n      0x40\n        /* \"#utility.yul\":15452:15455   */\n      dup6\n        /* \"#utility.yul\":15448:15462   */\n      add\n        /* \"#utility.yul\":15434:15446   */\n      dup3\n        /* \"#utility.yul\":15402:15463   */\n      tag_154\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":15312:15473   */\n      pop\n        /* \"#utility.yul\":15560:15564   */\n      0x60\n        /* \"#utility.yul\":15553:15558   */\n      dup3\n        /* \"#utility.yul\":15549:15565   */\n      add\n        /* \"#utility.yul\":15543:15566   */\n      mload\n        /* \"#utility.yul\":15579:15642   */\n      tag_334\n        /* \"#utility.yul\":15636:15640   */\n      0x60\n        /* \"#utility.yul\":15631:15634   */\n      dup6\n        /* \"#utility.yul\":15627:15641   */\n      add\n        /* \"#utility.yul\":15613:15625   */\n      dup3\n        /* \"#utility.yul\":15579:15642   */\n      tag_153\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":15483:15652   */\n      pop\n        /* \"#utility.yul\":15738:15742   */\n      0x80\n        /* \"#utility.yul\":15731:15736   */\n      dup3\n        /* \"#utility.yul\":15727:15743   */\n      add\n        /* \"#utility.yul\":15721:15744   */\n      mload\n        /* \"#utility.yul\":15757:15820   */\n      tag_335\n        /* \"#utility.yul\":15814:15818   */\n      0x80\n        /* \"#utility.yul\":15809:15812   */\n      dup6\n        /* \"#utility.yul\":15805:15819   */\n      add\n        /* \"#utility.yul\":15791:15803   */\n      dup3\n        /* \"#utility.yul\":15757:15820   */\n      tag_155\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":15662:15830   */\n      pop\n        /* \"#utility.yul\":15924:15928   */\n      0xa0\n        /* \"#utility.yul\":15917:15922   */\n      dup3\n        /* \"#utility.yul\":15913:15929   */\n      add\n        /* \"#utility.yul\":15907:15930   */\n      mload\n        /* \"#utility.yul\":15943:16006   */\n      tag_336\n        /* \"#utility.yul\":16000:16004   */\n      0xa0\n        /* \"#utility.yul\":15995:15998   */\n      dup6\n        /* \"#utility.yul\":15991:16005   */\n      add\n        /* \"#utility.yul\":15977:15989   */\n      dup3\n        /* \"#utility.yul\":15943:16006   */\n      tag_155\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15840:16016   */\n      pop\n        /* \"#utility.yul\":16111:16115   */\n      0xc0\n        /* \"#utility.yul\":16104:16109   */\n      dup3\n        /* \"#utility.yul\":16100:16116   */\n      add\n        /* \"#utility.yul\":16094:16117   */\n      mload\n        /* \"#utility.yul\":16130:16193   */\n      tag_337\n        /* \"#utility.yul\":16187:16191   */\n      0xc0\n        /* \"#utility.yul\":16182:16185   */\n      dup6\n        /* \"#utility.yul\":16178:16192   */\n      add\n        /* \"#utility.yul\":16164:16176   */\n      dup3\n        /* \"#utility.yul\":16130:16193   */\n      tag_156\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":16026:16203   */\n      pop\n        /* \"#utility.yul\":14911:16210   */\n      pop\n        /* \"#utility.yul\":14767:16210   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16216:16595   */\n    tag_94:\n        /* \"#utility.yul\":16387:16391   */\n      0x00\n        /* \"#utility.yul\":16425:16428   */\n      0xe0\n        /* \"#utility.yul\":16414:16423   */\n      dup3\n        /* \"#utility.yul\":16410:16429   */\n      add\n        /* \"#utility.yul\":16402:16429   */\n      swap1\n      pop\n        /* \"#utility.yul\":16439:16588   */\n      tag_339\n        /* \"#utility.yul\":16585:16586   */\n      0x00\n        /* \"#utility.yul\":16574:16583   */\n      dup4\n        /* \"#utility.yul\":16570:16587   */\n      add\n        /* \"#utility.yul\":16561:16567   */\n      dup5\n        /* \"#utility.yul\":16439:16588   */\n      tag_158\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":16216:16595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16601:16699   */\n    tag_159:\n        /* \"#utility.yul\":16652:16658   */\n      0x00\n        /* \"#utility.yul\":16686:16691   */\n      dup2\n        /* \"#utility.yul\":16680:16692   */\n      mload\n        /* \"#utility.yul\":16670:16692   */\n      swap1\n      pop\n        /* \"#utility.yul\":16601:16699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16705:16852   */\n    tag_160:\n        /* \"#utility.yul\":16806:16817   */\n      0x00\n        /* \"#utility.yul\":16843:16846   */\n      dup2\n        /* \"#utility.yul\":16828:16846   */\n      swap1\n      pop\n        /* \"#utility.yul\":16705:16852   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16858:16997   */\n    tag_161:\n        /* \"#utility.yul\":16947:16953   */\n      dup3\n        /* \"#utility.yul\":16942:16945   */\n      dup2\n        /* \"#utility.yul\":16937:16940   */\n      dup4\n        /* \"#utility.yul\":16931:16954   */\n      mcopy\n        /* \"#utility.yul\":16988:16989   */\n      0x00\n        /* \"#utility.yul\":16979:16985   */\n      dup4\n        /* \"#utility.yul\":16974:16977   */\n      dup4\n        /* \"#utility.yul\":16970:16986   */\n      add\n        /* \"#utility.yul\":16963:16990   */\n      mstore\n        /* \"#utility.yul\":16858:16997   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17003:17389   */\n    tag_162:\n        /* \"#utility.yul\":17107:17110   */\n      0x00\n        /* \"#utility.yul\":17135:17173   */\n      tag_344\n        /* \"#utility.yul\":17167:17172   */\n      dup3\n        /* \"#utility.yul\":17135:17173   */\n      tag_159\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":17189:17277   */\n      tag_345\n        /* \"#utility.yul\":17270:17276   */\n      dup2\n        /* \"#utility.yul\":17265:17268   */\n      dup6\n        /* \"#utility.yul\":17189:17277   */\n      tag_160\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":17182:17277   */\n      swap4\n      pop\n        /* \"#utility.yul\":17286:17351   */\n      tag_346\n        /* \"#utility.yul\":17344:17350   */\n      dup2\n        /* \"#utility.yul\":17339:17342   */\n      dup6\n        /* \"#utility.yul\":17332:17336   */\n      0x20\n        /* \"#utility.yul\":17325:17330   */\n      dup7\n        /* \"#utility.yul\":17321:17337   */\n      add\n        /* \"#utility.yul\":17286:17351   */\n      tag_161\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":17376:17382   */\n      dup1\n        /* \"#utility.yul\":17371:17374   */\n      dup5\n        /* \"#utility.yul\":17367:17383   */\n      add\n        /* \"#utility.yul\":17360:17383   */\n      swap2\n      pop\n        /* \"#utility.yul\":17111:17389   */\n      pop\n        /* \"#utility.yul\":17003:17389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17395:17666   */\n    tag_101:\n        /* \"#utility.yul\":17525:17528   */\n      0x00\n        /* \"#utility.yul\":17547:17640   */\n      tag_348\n        /* \"#utility.yul\":17636:17639   */\n      dup3\n        /* \"#utility.yul\":17627:17633   */\n      dup5\n        /* \"#utility.yul\":17547:17640   */\n      tag_162\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":17540:17640   */\n      swap2\n      pop\n        /* \"#utility.yul\":17657:17660   */\n      dup2\n        /* \"#utility.yul\":17650:17660   */\n      swap1\n      pop\n        /* \"#utility.yul\":17395:17666   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17672:17841   */\n    tag_163:\n        /* \"#utility.yul\":17756:17767   */\n      0x00\n        /* \"#utility.yul\":17790:17796   */\n      dup3\n        /* \"#utility.yul\":17785:17788   */\n      dup3\n        /* \"#utility.yul\":17778:17797   */\n      mstore\n        /* \"#utility.yul\":17830:17834   */\n      0x20\n        /* \"#utility.yul\":17825:17828   */\n      dup3\n        /* \"#utility.yul\":17821:17835   */\n      add\n        /* \"#utility.yul\":17806:17835   */\n      swap1\n      pop\n        /* \"#utility.yul\":17672:17841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17847:17999   */\n    tag_164:\n        /* \"#utility.yul\":17987:17991   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17983:17984   */\n      0x00\n        /* \"#utility.yul\":17975:17981   */\n      dup3\n        /* \"#utility.yul\":17971:17985   */\n      add\n        /* \"#utility.yul\":17964:17992   */\n      mstore\n        /* \"#utility.yul\":17847:17999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18005:18370   */\n    tag_165:\n        /* \"#utility.yul\":18147:18150   */\n      0x00\n        /* \"#utility.yul\":18168:18234   */\n      tag_352\n        /* \"#utility.yul\":18232:18233   */\n      0x02\n        /* \"#utility.yul\":18227:18230   */\n      dup4\n        /* \"#utility.yul\":18168:18234   */\n      tag_163\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":18161:18234   */\n      swap2\n      pop\n        /* \"#utility.yul\":18243:18336   */\n      tag_353\n        /* \"#utility.yul\":18332:18335   */\n      dup3\n        /* \"#utility.yul\":18243:18336   */\n      tag_164\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":18361:18363   */\n      0x20\n        /* \"#utility.yul\":18356:18359   */\n      dup3\n        /* \"#utility.yul\":18352:18364   */\n      add\n        /* \"#utility.yul\":18345:18364   */\n      swap1\n      pop\n        /* \"#utility.yul\":18005:18370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18376:18795   */\n    tag_110:\n        /* \"#utility.yul\":18542:18546   */\n      0x00\n        /* \"#utility.yul\":18580:18582   */\n      0x20\n        /* \"#utility.yul\":18569:18578   */\n      dup3\n        /* \"#utility.yul\":18565:18583   */\n      add\n        /* \"#utility.yul\":18557:18583   */\n      swap1\n      pop\n        /* \"#utility.yul\":18629:18638   */\n      dup2\n        /* \"#utility.yul\":18623:18627   */\n      dup2\n        /* \"#utility.yul\":18619:18639   */\n      sub\n        /* \"#utility.yul\":18615:18616   */\n      0x00\n        /* \"#utility.yul\":18604:18613   */\n      dup4\n        /* \"#utility.yul\":18600:18617   */\n      add\n        /* \"#utility.yul\":18593:18640   */\n      mstore\n        /* \"#utility.yul\":18657:18788   */\n      tag_355\n        /* \"#utility.yul\":18783:18787   */\n      dup2\n        /* \"#utility.yul\":18657:18788   */\n      tag_165\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":18649:18788   */\n      swap1\n      pop\n        /* \"#utility.yul\":18376:18795   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a969197cb61ba66bcbc1d5bf464e0b065a2b4bfc25fb0cbd535f28148f48563b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_930": {
									"entryPoint": null,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052733bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e5f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550730227628f3f023bb0b980b67d528571c95c6dac1c60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801560b5575f80fd5b506112b6806100c35f395ff3fe608060405260043610610058575f3560e01c80630a4432761461006357806372f5d98a1461008b5780638efc0828146100b5578063a3fa08e4146100f1578063c31c9c071461012d578063c45a0155146101575761005f565b3661005f57005b5f80fd5b34801561006e575f80fd5b5061008960048036038101906100849190610ac9565b610181565b005b348015610096575f80fd5b5061009f610278565b6040516100ac9190610b24565b60405180910390f35b3480156100c0575f80fd5b506100db60048036038101906100d69190610b70565b61027e565b6040516100e89190610be3565b60405180910390f35b3480156100fc575f80fd5b5061011760048036038101906101129190610bfc565b610625565b6040516101249190610be3565b60405180910390f35b348015610138575f80fd5b50610141610899565b60405161014e9190610ca7565b60405180910390f35b348015610162575f80fd5b5061016b6108bc565b6040516101789190610ce0565b60405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3828473ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101d79190610d08565b602060405180830381865afa1580156101f2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102169190610d35565b6040518363ffffffff1660e01b8152600401610233929190610d60565b6020604051808303815f875af115801561024f573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102739190610dbc565b505050565b610bb881565b5f8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b35f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b81526004016102d9929190610d60565b6020604051808303815f875af11580156102f5573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103199190610dbc565b505f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828486610bb86040518463ffffffff1660e01b815260040161037b93929190610de7565b602060405180830381865afa158015610396573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103ba9190610e30565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa158015610406573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042a9190610e85565b90505f805f805f805f808973ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561047d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a19190610f7d565b9650965096509650965096509650869750505050505050505f6040518060e001604052808773ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018462ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018a81526020018981526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635023b4df826040518263ffffffff1660e01b81526004016105a491906110e2565b6020604051808303815f875af11580156105c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e49190610d35565b94508785101561061957610618865f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff165f6108e1565b5b50505050949350505050565b5f610650825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866108e1565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631698ee828486610bb86040518463ffffffff1660e01b81526004016106b193929190610de7565b602060405180830381865afa1580156106cc573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f09190610e30565b90505f8173ffffffffffffffffffffffffffffffffffffffff1663ddca3f436040518163ffffffff1660e01b8152600401602060405180830381865afa15801561073c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107609190610e85565b90505f6040518060e001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018362ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018881526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b815260040161084d9190611187565b6020604051808303815f875af1158015610869573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088d9190610d35565b93505050509392505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401610915929190610d60565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161097f91906111f2565b5f604051808303815f865af19150503d805f81146109b8576040519150601f19603f3d011682016040523d82523d5f602084013e6109bd565b606091505b50915091508180156109ea57505f815114806109e95750808060200190518101906109e89190610dbc565b5b5b610a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2090611262565b60405180910390fd5b5050505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610a5d82610a34565b9050919050565b5f610a6e82610a53565b9050919050565b610a7e81610a64565b8114610a88575f80fd5b50565b5f81359050610a9981610a75565b92915050565b610aa881610a53565b8114610ab2575f80fd5b50565b5f81359050610ac381610a9f565b92915050565b5f8060408385031215610adf57610ade610a30565b5b5f610aec85828601610a8b565b9250506020610afd85828601610ab5565b9150509250929050565b5f62ffffff82169050919050565b610b1e81610b07565b82525050565b5f602082019050610b375f830184610b15565b92915050565b5f819050919050565b610b4f81610b3d565b8114610b59575f80fd5b50565b5f81359050610b6a81610b46565b92915050565b5f805f8060808587031215610b8857610b87610a30565b5b5f610b9587828801610b5c565b9450506020610ba687828801610b5c565b9350506040610bb787828801610a8b565b9250506060610bc887828801610a8b565b91505092959194509250565b610bdd81610b3d565b82525050565b5f602082019050610bf65f830184610bd4565b92915050565b5f805f60608486031215610c1357610c12610a30565b5b5f610c2086828701610b5c565b9350506020610c3186828701610a8b565b9250506040610c4286828701610a8b565b9150509250925092565b5f819050919050565b5f610c6f610c6a610c6584610a34565b610c4c565b610a34565b9050919050565b5f610c8082610c55565b9050919050565b5f610c9182610c76565b9050919050565b610ca181610c87565b82525050565b5f602082019050610cba5f830184610c98565b92915050565b5f610cca82610c76565b9050919050565b610cda81610cc0565b82525050565b5f602082019050610cf35f830184610cd1565b92915050565b610d0281610a53565b82525050565b5f602082019050610d1b5f830184610cf9565b92915050565b5f81519050610d2f81610b46565b92915050565b5f60208284031215610d4a57610d49610a30565b5b5f610d5784828501610d21565b91505092915050565b5f604082019050610d735f830185610cf9565b610d806020830184610bd4565b9392505050565b5f8115159050919050565b610d9b81610d87565b8114610da5575f80fd5b50565b5f81519050610db681610d92565b92915050565b5f60208284031215610dd157610dd0610a30565b5b5f610dde84828501610da8565b91505092915050565b5f606082019050610dfa5f830186610cf9565b610e076020830185610cf9565b610e146040830184610b15565b949350505050565b5f81519050610e2a81610a9f565b92915050565b5f60208284031215610e4557610e44610a30565b5b5f610e5284828501610e1c565b91505092915050565b610e6481610b07565b8114610e6e575f80fd5b50565b5f81519050610e7f81610e5b565b92915050565b5f60208284031215610e9a57610e99610a30565b5b5f610ea784828501610e71565b91505092915050565b610eb981610a34565b8114610ec3575f80fd5b50565b5f81519050610ed481610eb0565b92915050565b5f8160020b9050919050565b610eef81610eda565b8114610ef9575f80fd5b50565b5f81519050610f0a81610ee6565b92915050565b5f61ffff82169050919050565b610f2681610f10565b8114610f30575f80fd5b50565b5f81519050610f4181610f1d565b92915050565b5f60ff82169050919050565b610f5c81610f47565b8114610f66575f80fd5b50565b5f81519050610f7781610f53565b92915050565b5f805f805f805f60e0888a031215610f9857610f97610a30565b5b5f610fa58a828b01610ec6565b9750506020610fb68a828b01610efc565b9650506040610fc78a828b01610f33565b9550506060610fd88a828b01610f33565b9450506080610fe98a828b01610f33565b93505060a0610ffa8a828b01610f69565b92505060c061100b8a828b01610da8565b91505092959891949750929550565b61102381610a53565b82525050565b61103281610b07565b82525050565b61104181610b3d565b82525050565b61105081610a34565b82525050565b60e082015f82015161106a5f85018261101a565b50602082015161107d602085018261101a565b5060408201516110906040850182611029565b5060608201516110a3606085018261101a565b5060808201516110b66080850182611038565b5060a08201516110c960a0850182611038565b5060c08201516110dc60c0850182611047565b50505050565b5f60e0820190506110f55f830184611056565b92915050565b60e082015f82015161110f5f85018261101a565b506020820151611122602085018261101a565b5060408201516111356040850182611029565b506060820151611148606085018261101a565b50608082015161115b6080850182611038565b5060a082015161116e60a0850182611038565b5060c082015161118160c0850182611047565b50505050565b5f60e08201905061119a5f8301846110fb565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6111cc826111a0565b6111d681856111aa565b93506111e68185602086016111b4565b80840191505092915050565b5f6111fd82846111c2565b915081905092915050565b5f82825260208201905092915050565b7f53410000000000000000000000000000000000000000000000000000000000005f82015250565b5f61124c600283611208565b915061125782611218565b602082019050919050565b5f6020820190508181035f83015261127981611240565b905091905056fea2646970667358221220a969197cb61ba66bcbc1d5bf464e0b065a2b4bfc25fb0cbd535f28148f48563b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x227628F3F023BB0B980B67D528571C95C6DAC1C PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0xB5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12B6 DUP1 PUSH2 0xC3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA443276 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x72F5D98A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8EFC0828 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA3FA08E4 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x157 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP5 DUP7 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP DUP7 SWAP8 POP POP POP POP POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5023B4DF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP5 POP DUP8 DUP6 LT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 DUP7 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x650 DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x8E1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP5 DUP7 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x915 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x9EA JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x9E9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA20 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA5D DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6E DUP3 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7E DUP2 PUSH2 0xA64 JUMP JUMPDEST DUP2 EQ PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC3 DUP2 PUSH2 0xA9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAEC DUP6 DUP3 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB37 PUSH0 DUP4 ADD DUP5 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4F DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP2 EQ PUSH2 0xB59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6A DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH2 0xB87 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB95 DUP8 DUP3 DUP9 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xBA6 DUP8 DUP3 DUP9 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xBB7 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xBC8 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xBDD DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC20 DUP7 DUP3 DUP8 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC31 DUP7 DUP3 DUP8 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC42 DUP7 DUP3 DUP8 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH2 0xC6A PUSH2 0xC65 DUP5 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC80 DUP3 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xC76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH0 DUP4 ADD DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA DUP3 PUSH2 0xC76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF3 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD02 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1B PUSH0 DUP4 ADD DUP5 PUSH2 0xCF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD2F DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD57 DUP5 DUP3 DUP6 ADD PUSH2 0xD21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD73 PUSH0 DUP4 ADD DUP6 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xD80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDB6 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP7 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xE07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xA9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE52 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE7F DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA7 DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEB9 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED4 DUP2 PUSH2 0xEB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP2 PUSH2 0xEDA JUMP JUMPDEST DUP2 EQ PUSH2 0xEF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF0A DUP2 PUSH2 0xEE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF26 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF41 DUP2 PUSH2 0xF1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xF47 JUMP JUMPDEST DUP2 EQ PUSH2 0xF66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF77 DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA5 DUP11 DUP3 DUP12 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFB6 DUP11 DUP3 DUP12 ADD PUSH2 0xEFC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFC7 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFD8 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFE9 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xFFA DUP11 DUP3 DUP12 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x100B DUP11 DUP3 DUP12 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1050 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x106A PUSH0 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x107D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1090 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1029 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x10A3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x10B6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x10C9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x10DC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1047 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1056 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x110F PUSH0 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1122 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1135 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1029 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1148 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x115B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x116E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1181 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1047 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x119A PUSH0 DUP4 ADD DUP5 PUSH2 0x10FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x11D6 DUP2 DUP6 PUSH2 0x11AA JUMP JUMPDEST SWAP4 POP PUSH2 0x11E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11FD DUP3 DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x124C PUSH1 0x2 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1257 DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1279 DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH10 0x197CB61BA66BCBC1D5BF CHAINID 0x4E SIGNEXTEND MOD GAS 0x2B 0x4B 0xFC 0x25 0xFB 0xC 0xBD MSTORE8 PUSH0 0x28 EQ DUP16 BASEFEE JUMP EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "393:5266:13:-:0;;;495:42;439:99;;;;;;;;;;;;;;;;;;;;648:42;587:104;;;;;;;;;;;;;;;;;;;;698:16;;;;;;;;;;393:5266;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1164": {
									"entryPoint": null,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approveAll_1160": {
									"entryPoint": 385,
									"id": 1160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@factory_926": {
									"entryPoint": 2236,
									"id": 926,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTier_920": {
									"entryPoint": 632,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_760": {
									"entryPoint": 2273,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapEarnForUSD_1138": {
									"entryPoint": 1573,
									"id": 1138,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@swapRouter_917": {
									"entryPoint": 2201,
									"id": 917,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapTokenForUSD_1057": {
									"entryPoint": 638,
									"id": 1057,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20Standard_$811": {
									"entryPoint": 2699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 3782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint24_fromMemory": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20Standard_$811t_address": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 3965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_uint24_fromMemory": {
									"entryPoint": 3717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 3381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811": {
									"entryPoint": 2928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 4122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IUniswapV3Factory_$160_to_t_address_fromStack": {
									"entryPoint": 3281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IV3SwapRouter_$903_to_t_address_fromStack": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$833_memory_ptr_to_t_struct$_ExactInputSingleParams_$833_memory_ptr_fromStack": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_ExactOutputSingleParams_$875_memory_ptr_to_t_struct$_ExactOutputSingleParams_$875_memory_ptr_fromStack": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 4167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 4137,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24_fromStack": {
									"entryPoint": 2837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 3559,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV3Factory_$160__to_t_address__fromStack_reversed": {
									"entryPoint": 3296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IV3SwapRouter_$903__to_t_address__fromStack_reversed": {
									"entryPoint": 3239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$833_memory_ptr__to_t_struct$_ExactInputSingleParams_$833_memory_ptr__fromStack_reversed": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactOutputSingleParams_$875_memory_ptr__to_t_struct$_ExactOutputSingleParams_$875_memory_ptr__fromStack_reversed": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20Standard_$811": {
									"entryPoint": 2660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 3856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 3911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV3Factory_$160_to_t_address": {
									"entryPoint": 3264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IV3SwapRouter_$903_to_t_address": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 3190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4532,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 3148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20Standard_$811": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 3814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 3869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 3760,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint24": {
									"entryPoint": 3675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18798:14",
										"nodeType": "YulBlock",
										"src": "0:18798:14",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:14",
													"nodeType": "YulBlock",
													"src": "47:35:14",
													"statements": [
														{
															"nativeSrc": "57:19:14",
															"nodeType": "YulAssignment",
															"src": "57:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:14",
																		"nodeType": "YulLiteral",
																		"src": "73:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:14"
																},
																"nativeSrc": "67:9:14",
																"nodeType": "YulFunctionCall",
																"src": "67:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:14",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:14",
														"nodeType": "YulTypedName",
														"src": "40:6:14",
														"type": ""
													}
												],
												"src": "7:75:14"
											},
											{
												"body": {
													"nativeSrc": "177:28:14",
													"nodeType": "YulBlock",
													"src": "177:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:14",
																		"nodeType": "YulLiteral",
																		"src": "194:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:14",
																		"nodeType": "YulLiteral",
																		"src": "197:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:14"
																},
																"nativeSrc": "187:12:14",
																"nodeType": "YulFunctionCall",
																"src": "187:12:14"
															},
															"nativeSrc": "187:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:14"
											},
											{
												"body": {
													"nativeSrc": "300:28:14",
													"nodeType": "YulBlock",
													"src": "300:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:14",
																		"nodeType": "YulLiteral",
																		"src": "317:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:14",
																		"nodeType": "YulLiteral",
																		"src": "320:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:14"
																},
																"nativeSrc": "310:12:14",
																"nodeType": "YulFunctionCall",
																"src": "310:12:14"
															},
															"nativeSrc": "310:12:14",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:14",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:14"
											},
											{
												"body": {
													"nativeSrc": "379:81:14",
													"nodeType": "YulBlock",
													"src": "379:81:14",
													"statements": [
														{
															"nativeSrc": "389:65:14",
															"nodeType": "YulAssignment",
															"src": "389:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:14",
																		"nodeType": "YulLiteral",
																		"src": "411:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:14"
																},
																"nativeSrc": "400:54:14",
																"nodeType": "YulFunctionCall",
																"src": "400:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:14",
														"nodeType": "YulTypedName",
														"src": "361:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:14",
														"nodeType": "YulTypedName",
														"src": "371:7:14",
														"type": ""
													}
												],
												"src": "334:126:14"
											},
											{
												"body": {
													"nativeSrc": "511:51:14",
													"nodeType": "YulBlock",
													"src": "511:51:14",
													"statements": [
														{
															"nativeSrc": "521:35:14",
															"nodeType": "YulAssignment",
															"src": "521:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:14"
																},
																"nativeSrc": "532:24:14",
																"nodeType": "YulFunctionCall",
																"src": "532:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:14",
														"nodeType": "YulTypedName",
														"src": "493:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:14",
														"nodeType": "YulTypedName",
														"src": "503:7:14",
														"type": ""
													}
												],
												"src": "466:96:14"
											},
											{
												"body": {
													"nativeSrc": "635:51:14",
													"nodeType": "YulBlock",
													"src": "635:51:14",
													"statements": [
														{
															"nativeSrc": "645:35:14",
															"nodeType": "YulAssignment",
															"src": "645:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "674:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "674:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "656:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "656:17:14"
																},
																"nativeSrc": "656:24:14",
																"nodeType": "YulFunctionCall",
																"src": "656:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20Standard_$811",
												"nativeSrc": "568:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:14",
														"nodeType": "YulTypedName",
														"src": "617:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:14",
														"nodeType": "YulTypedName",
														"src": "627:7:14",
														"type": ""
													}
												],
												"src": "568:118:14"
											},
											{
												"body": {
													"nativeSrc": "757:101:14",
													"nodeType": "YulBlock",
													"src": "757:101:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:16:14",
																"nodeType": "YulBlock",
																"src": "836:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "845:1:14",
																					"nodeType": "YulLiteral",
																					"src": "845:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "848:1:14",
																					"nodeType": "YulLiteral",
																					"src": "848:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "838:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "838:6:14"
																			},
																			"nativeSrc": "838:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "838:12:14"
																		},
																		"nativeSrc": "838:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "780:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "780:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "827:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "827:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20Standard_$811",
																					"nativeSrc": "787:39:14",
																					"nodeType": "YulIdentifier",
																					"src": "787:39:14"
																				},
																				"nativeSrc": "787:46:14",
																				"nodeType": "YulFunctionCall",
																				"src": "787:46:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "777:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "777:2:14"
																		},
																		"nativeSrc": "777:57:14",
																		"nodeType": "YulFunctionCall",
																		"src": "777:57:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "770:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "770:6:14"
																},
																"nativeSrc": "770:65:14",
																"nodeType": "YulFunctionCall",
																"src": "770:65:14"
															},
															"nativeSrc": "767:85:14",
															"nodeType": "YulIf",
															"src": "767:85:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20Standard_$811",
												"nativeSrc": "692:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "750:5:14",
														"nodeType": "YulTypedName",
														"src": "750:5:14",
														"type": ""
													}
												],
												"src": "692:166:14"
											},
											{
												"body": {
													"nativeSrc": "938:109:14",
													"nodeType": "YulBlock",
													"src": "938:109:14",
													"statements": [
														{
															"nativeSrc": "948:29:14",
															"nodeType": "YulAssignment",
															"src": "948:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "970:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "970:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "957:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "957:12:14"
																},
																"nativeSrc": "957:20:14",
																"nodeType": "YulFunctionCall",
																"src": "957:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "948:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "948:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1035:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1035:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20Standard_$811",
																	"nativeSrc": "986:48:14",
																	"nodeType": "YulIdentifier",
																	"src": "986:48:14"
																},
																"nativeSrc": "986:55:14",
																"nodeType": "YulFunctionCall",
																"src": "986:55:14"
															},
															"nativeSrc": "986:55:14",
															"nodeType": "YulExpressionStatement",
															"src": "986:55:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20Standard_$811",
												"nativeSrc": "864:183:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "916:6:14",
														"nodeType": "YulTypedName",
														"src": "916:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "924:3:14",
														"nodeType": "YulTypedName",
														"src": "924:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "932:5:14",
														"nodeType": "YulTypedName",
														"src": "932:5:14",
														"type": ""
													}
												],
												"src": "864:183:14"
											},
											{
												"body": {
													"nativeSrc": "1096:79:14",
													"nodeType": "YulBlock",
													"src": "1096:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1153:16:14",
																"nodeType": "YulBlock",
																"src": "1153:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1165:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1155:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:14"
																			},
																			"nativeSrc": "1155:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1155:12:14"
																		},
																		"nativeSrc": "1155:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1119:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1119:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1144:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1144:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1126:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "1126:17:14"
																				},
																				"nativeSrc": "1126:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1126:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1116:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "1116:2:14"
																		},
																		"nativeSrc": "1116:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1109:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1109:6:14"
																},
																"nativeSrc": "1109:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1109:43:14"
															},
															"nativeSrc": "1106:63:14",
															"nodeType": "YulIf",
															"src": "1106:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1053:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1089:5:14",
														"nodeType": "YulTypedName",
														"src": "1089:5:14",
														"type": ""
													}
												],
												"src": "1053:122:14"
											},
											{
												"body": {
													"nativeSrc": "1233:87:14",
													"nodeType": "YulBlock",
													"src": "1233:87:14",
													"statements": [
														{
															"nativeSrc": "1243:29:14",
															"nodeType": "YulAssignment",
															"src": "1243:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1265:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1265:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1252:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1252:12:14"
																},
																"nativeSrc": "1252:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1252:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1243:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1243:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1308:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1308:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1281:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "1281:26:14"
																},
																"nativeSrc": "1281:33:14",
																"nodeType": "YulFunctionCall",
																"src": "1281:33:14"
															},
															"nativeSrc": "1281:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "1281:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1181:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1211:6:14",
														"nodeType": "YulTypedName",
														"src": "1211:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1219:3:14",
														"nodeType": "YulTypedName",
														"src": "1219:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1227:5:14",
														"nodeType": "YulTypedName",
														"src": "1227:5:14",
														"type": ""
													}
												],
												"src": "1181:139:14"
											},
											{
												"body": {
													"nativeSrc": "1431:413:14",
													"nodeType": "YulBlock",
													"src": "1431:413:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1477:83:14",
																"nodeType": "YulBlock",
																"src": "1477:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1479:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "1479:77:14"
																			},
																			"nativeSrc": "1479:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1479:79:14"
																		},
																		"nativeSrc": "1479:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1479:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1452:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1452:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1461:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1461:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1448:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1448:3:14"
																		},
																		"nativeSrc": "1448:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1448:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1473:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1473:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1444:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1444:3:14"
																},
																"nativeSrc": "1444:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1444:32:14"
															},
															"nativeSrc": "1441:119:14",
															"nodeType": "YulIf",
															"src": "1441:119:14"
														},
														{
															"nativeSrc": "1570:139:14",
															"nodeType": "YulBlock",
															"src": "1570:139:14",
															"statements": [
																{
																	"nativeSrc": "1585:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1585:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1599:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1599:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1589:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1589:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1614:85:14",
																	"nodeType": "YulAssignment",
																	"src": "1614:85:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1671:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1682:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1667:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:14"
																				},
																				"nativeSrc": "1667:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1691:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Standard_$811",
																			"nativeSrc": "1624:42:14",
																			"nodeType": "YulIdentifier",
																			"src": "1624:42:14"
																		},
																		"nativeSrc": "1624:75:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1624:75:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1614:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1614:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1719:118:14",
															"nodeType": "YulBlock",
															"src": "1719:118:14",
															"statements": [
																{
																	"nativeSrc": "1734:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1748:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1748:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1738:6:14",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1764:63:14",
																	"nodeType": "YulAssignment",
																	"src": "1764:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1799:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "1799:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1810:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1810:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1795:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1795:3:14"
																				},
																				"nativeSrc": "1795:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1795:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1819:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1819:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1774:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "1774:20:14"
																		},
																		"nativeSrc": "1774:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1774:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1764:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "1764:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20Standard_$811t_address",
												"nativeSrc": "1326:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1393:9:14",
														"nodeType": "YulTypedName",
														"src": "1393:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1404:7:14",
														"nodeType": "YulTypedName",
														"src": "1404:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1416:6:14",
														"nodeType": "YulTypedName",
														"src": "1416:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1424:6:14",
														"nodeType": "YulTypedName",
														"src": "1424:6:14",
														"type": ""
													}
												],
												"src": "1326:518:14"
											},
											{
												"body": {
													"nativeSrc": "1894:47:14",
													"nodeType": "YulBlock",
													"src": "1894:47:14",
													"statements": [
														{
															"nativeSrc": "1904:31:14",
															"nodeType": "YulAssignment",
															"src": "1904:31:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1919:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1919:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1926:8:14",
																		"nodeType": "YulLiteral",
																		"src": "1926:8:14",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1915:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1915:3:14"
																},
																"nativeSrc": "1915:20:14",
																"nodeType": "YulFunctionCall",
																"src": "1915:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1904:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "1904:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "1850:91:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1876:5:14",
														"nodeType": "YulTypedName",
														"src": "1876:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1886:7:14",
														"nodeType": "YulTypedName",
														"src": "1886:7:14",
														"type": ""
													}
												],
												"src": "1850:91:14"
											},
											{
												"body": {
													"nativeSrc": "2010:52:14",
													"nodeType": "YulBlock",
													"src": "2010:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2027:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "2027:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2049:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2049:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "2032:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "2032:16:14"
																		},
																		"nativeSrc": "2032:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2020:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2020:6:14"
																},
																"nativeSrc": "2020:36:14",
																"nodeType": "YulFunctionCall",
																"src": "2020:36:14"
															},
															"nativeSrc": "2020:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "2020:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nativeSrc": "1947:115:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1998:5:14",
														"nodeType": "YulTypedName",
														"src": "1998:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2005:3:14",
														"nodeType": "YulTypedName",
														"src": "2005:3:14",
														"type": ""
													}
												],
												"src": "1947:115:14"
											},
											{
												"body": {
													"nativeSrc": "2164:122:14",
													"nodeType": "YulBlock",
													"src": "2164:122:14",
													"statements": [
														{
															"nativeSrc": "2174:26:14",
															"nodeType": "YulAssignment",
															"src": "2174:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2186:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2186:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2197:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2182:3:14"
																},
																"nativeSrc": "2182:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2182:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2174:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2174:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2252:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2252:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2265:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2265:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2276:1:14",
																				"nodeType": "YulLiteral",
																				"src": "2276:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2261:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2261:3:14"
																		},
																		"nativeSrc": "2261:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2261:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "2210:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "2210:41:14"
																},
																"nativeSrc": "2210:69:14",
																"nodeType": "YulFunctionCall",
																"src": "2210:69:14"
															},
															"nativeSrc": "2210:69:14",
															"nodeType": "YulExpressionStatement",
															"src": "2210:69:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
												"nativeSrc": "2068:218:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:14",
														"nodeType": "YulTypedName",
														"src": "2136:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2148:6:14",
														"nodeType": "YulTypedName",
														"src": "2148:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2159:4:14",
														"nodeType": "YulTypedName",
														"src": "2159:4:14",
														"type": ""
													}
												],
												"src": "2068:218:14"
											},
											{
												"body": {
													"nativeSrc": "2337:32:14",
													"nodeType": "YulBlock",
													"src": "2337:32:14",
													"statements": [
														{
															"nativeSrc": "2347:16:14",
															"nodeType": "YulAssignment",
															"src": "2347:16:14",
															"value": {
																"name": "value",
																"nativeSrc": "2358:5:14",
																"nodeType": "YulIdentifier",
																"src": "2358:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2347:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "2347:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2292:77:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2319:5:14",
														"nodeType": "YulTypedName",
														"src": "2319:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2329:7:14",
														"nodeType": "YulTypedName",
														"src": "2329:7:14",
														"type": ""
													}
												],
												"src": "2292:77:14"
											},
											{
												"body": {
													"nativeSrc": "2418:79:14",
													"nodeType": "YulBlock",
													"src": "2418:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2475:16:14",
																"nodeType": "YulBlock",
																"src": "2475:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2484:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2484:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2487:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2477:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2477:6:14"
																			},
																			"nativeSrc": "2477:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2477:12:14"
																		},
																		"nativeSrc": "2477:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2477:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2441:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2441:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2466:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2466:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2448:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "2448:17:14"
																				},
																				"nativeSrc": "2448:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2448:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2438:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2438:2:14"
																		},
																		"nativeSrc": "2438:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2438:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2431:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:14"
																},
																"nativeSrc": "2431:43:14",
																"nodeType": "YulFunctionCall",
																"src": "2431:43:14"
															},
															"nativeSrc": "2428:63:14",
															"nodeType": "YulIf",
															"src": "2428:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2375:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2411:5:14",
														"nodeType": "YulTypedName",
														"src": "2411:5:14",
														"type": ""
													}
												],
												"src": "2375:122:14"
											},
											{
												"body": {
													"nativeSrc": "2555:87:14",
													"nodeType": "YulBlock",
													"src": "2555:87:14",
													"statements": [
														{
															"nativeSrc": "2565:29:14",
															"nodeType": "YulAssignment",
															"src": "2565:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2587:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2574:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2574:12:14"
																},
																"nativeSrc": "2574:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2574:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2565:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2565:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2630:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "2630:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2603:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "2603:26:14"
																},
																"nativeSrc": "2603:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2603:33:14"
															},
															"nativeSrc": "2603:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "2603:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2503:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2533:6:14",
														"nodeType": "YulTypedName",
														"src": "2533:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2541:3:14",
														"nodeType": "YulTypedName",
														"src": "2541:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2549:5:14",
														"nodeType": "YulTypedName",
														"src": "2549:5:14",
														"type": ""
													}
												],
												"src": "2503:139:14"
											},
											{
												"body": {
													"nativeSrc": "2809:692:14",
													"nodeType": "YulBlock",
													"src": "2809:692:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2856:83:14",
																"nodeType": "YulBlock",
																"src": "2856:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2858:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "2858:77:14"
																			},
																			"nativeSrc": "2858:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2858:79:14"
																		},
																		"nativeSrc": "2858:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2858:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2839:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2839:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2826:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2826:3:14"
																		},
																		"nativeSrc": "2826:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2826:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2851:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2851:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2822:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2822:3:14"
																},
																"nativeSrc": "2822:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2822:33:14"
															},
															"nativeSrc": "2819:120:14",
															"nodeType": "YulIf",
															"src": "2819:120:14"
														},
														{
															"nativeSrc": "2949:117:14",
															"nodeType": "YulBlock",
															"src": "2949:117:14",
															"statements": [
																{
																	"nativeSrc": "2964:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2964:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2978:1:14",
																		"nodeType": "YulLiteral",
																		"src": "2978:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2968:6:14",
																			"nodeType": "YulTypedName",
																			"src": "2968:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2993:63:14",
																	"nodeType": "YulAssignment",
																	"src": "2993:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3028:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3028:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3039:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3039:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3024:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3024:3:14"
																				},
																				"nativeSrc": "3024:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3024:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3048:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3048:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3003:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3003:20:14"
																		},
																		"nativeSrc": "3003:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2993:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "2993:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3076:118:14",
															"nodeType": "YulBlock",
															"src": "3076:118:14",
															"statements": [
																{
																	"nativeSrc": "3091:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3091:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3105:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3105:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3095:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3095:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3121:63:14",
																	"nodeType": "YulAssignment",
																	"src": "3121:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3156:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3156:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3167:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3167:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3152:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3152:3:14"
																				},
																				"nativeSrc": "3152:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3152:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3176:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3176:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3131:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "3131:20:14"
																		},
																		"nativeSrc": "3131:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3131:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3121:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3121:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3204:140:14",
															"nodeType": "YulBlock",
															"src": "3204:140:14",
															"statements": [
																{
																	"nativeSrc": "3219:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3219:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3233:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3233:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3223:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3223:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3249:85:14",
																	"nodeType": "YulAssignment",
																	"src": "3249:85:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3306:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3306:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3317:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3317:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3302:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3302:3:14"
																				},
																				"nativeSrc": "3302:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3302:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3326:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3326:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Standard_$811",
																			"nativeSrc": "3259:42:14",
																			"nodeType": "YulIdentifier",
																			"src": "3259:42:14"
																		},
																		"nativeSrc": "3259:75:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3259:75:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3249:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3249:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3354:140:14",
															"nodeType": "YulBlock",
															"src": "3354:140:14",
															"statements": [
																{
																	"nativeSrc": "3369:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3369:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3383:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3373:6:14",
																			"nodeType": "YulTypedName",
																			"src": "3373:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3399:85:14",
																	"nodeType": "YulAssignment",
																	"src": "3399:85:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3456:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "3456:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3467:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "3467:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3452:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "3452:3:14"
																				},
																				"nativeSrc": "3452:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "3452:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3476:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3476:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Standard_$811",
																			"nativeSrc": "3409:42:14",
																			"nodeType": "YulIdentifier",
																			"src": "3409:42:14"
																		},
																		"nativeSrc": "3409:75:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3409:75:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3399:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "3399:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811",
												"nativeSrc": "2648:853:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2755:9:14",
														"nodeType": "YulTypedName",
														"src": "2755:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2766:7:14",
														"nodeType": "YulTypedName",
														"src": "2766:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2778:6:14",
														"nodeType": "YulTypedName",
														"src": "2778:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2786:6:14",
														"nodeType": "YulTypedName",
														"src": "2786:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2794:6:14",
														"nodeType": "YulTypedName",
														"src": "2794:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2802:6:14",
														"nodeType": "YulTypedName",
														"src": "2802:6:14",
														"type": ""
													}
												],
												"src": "2648:853:14"
											},
											{
												"body": {
													"nativeSrc": "3572:53:14",
													"nodeType": "YulBlock",
													"src": "3572:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3589:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "3589:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3612:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "3612:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3594:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "3594:17:14"
																		},
																		"nativeSrc": "3594:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3594:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3582:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3582:6:14"
																},
																"nativeSrc": "3582:37:14",
																"nodeType": "YulFunctionCall",
																"src": "3582:37:14"
															},
															"nativeSrc": "3582:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "3582:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3507:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3560:5:14",
														"nodeType": "YulTypedName",
														"src": "3560:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3567:3:14",
														"nodeType": "YulTypedName",
														"src": "3567:3:14",
														"type": ""
													}
												],
												"src": "3507:118:14"
											},
											{
												"body": {
													"nativeSrc": "3729:124:14",
													"nodeType": "YulBlock",
													"src": "3729:124:14",
													"statements": [
														{
															"nativeSrc": "3739:26:14",
															"nodeType": "YulAssignment",
															"src": "3739:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3751:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3751:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3762:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3762:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3747:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3747:3:14"
																},
																"nativeSrc": "3747:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3747:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3739:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3739:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3819:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3832:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3832:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3843:1:14",
																				"nodeType": "YulLiteral",
																				"src": "3843:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3828:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3828:3:14"
																		},
																		"nativeSrc": "3828:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3828:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3775:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "3775:43:14"
																},
																"nativeSrc": "3775:71:14",
																"nodeType": "YulFunctionCall",
																"src": "3775:71:14"
															},
															"nativeSrc": "3775:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "3775:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3631:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3701:9:14",
														"nodeType": "YulTypedName",
														"src": "3701:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3713:6:14",
														"nodeType": "YulTypedName",
														"src": "3713:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3724:4:14",
														"nodeType": "YulTypedName",
														"src": "3724:4:14",
														"type": ""
													}
												],
												"src": "3631:222:14"
											},
											{
												"body": {
													"nativeSrc": "4003:563:14",
													"nodeType": "YulBlock",
													"src": "4003:563:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4049:83:14",
																"nodeType": "YulBlock",
																"src": "4049:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4051:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "4051:77:14"
																			},
																			"nativeSrc": "4051:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4051:79:14"
																		},
																		"nativeSrc": "4051:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4051:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4024:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4024:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4033:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4033:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4020:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4020:3:14"
																		},
																		"nativeSrc": "4020:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4045:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4016:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4016:3:14"
																},
																"nativeSrc": "4016:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4016:32:14"
															},
															"nativeSrc": "4013:119:14",
															"nodeType": "YulIf",
															"src": "4013:119:14"
														},
														{
															"nativeSrc": "4142:117:14",
															"nodeType": "YulBlock",
															"src": "4142:117:14",
															"statements": [
																{
																	"nativeSrc": "4157:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4157:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4171:1:14",
																		"nodeType": "YulLiteral",
																		"src": "4171:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4161:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4161:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4186:63:14",
																	"nodeType": "YulAssignment",
																	"src": "4186:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4221:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4221:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4232:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4232:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4217:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4217:3:14"
																				},
																				"nativeSrc": "4217:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4217:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4241:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4241:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4196:20:14",
																			"nodeType": "YulIdentifier",
																			"src": "4196:20:14"
																		},
																		"nativeSrc": "4196:53:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4196:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4186:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4186:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4269:140:14",
															"nodeType": "YulBlock",
															"src": "4269:140:14",
															"statements": [
																{
																	"nativeSrc": "4284:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4284:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4298:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4288:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4288:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4314:85:14",
																	"nodeType": "YulAssignment",
																	"src": "4314:85:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4371:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4371:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4382:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4382:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4367:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4367:3:14"
																				},
																				"nativeSrc": "4367:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4367:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4391:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4391:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Standard_$811",
																			"nativeSrc": "4324:42:14",
																			"nodeType": "YulIdentifier",
																			"src": "4324:42:14"
																		},
																		"nativeSrc": "4324:75:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4324:75:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4314:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4314:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4419:140:14",
															"nodeType": "YulBlock",
															"src": "4419:140:14",
															"statements": [
																{
																	"nativeSrc": "4434:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4434:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4448:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4448:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4438:6:14",
																			"nodeType": "YulTypedName",
																			"src": "4438:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4464:85:14",
																	"nodeType": "YulAssignment",
																	"src": "4464:85:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4521:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "4521:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4532:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "4532:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4517:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4517:3:14"
																				},
																				"nativeSrc": "4517:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4517:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4541:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4541:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20Standard_$811",
																			"nativeSrc": "4474:42:14",
																			"nodeType": "YulIdentifier",
																			"src": "4474:42:14"
																		},
																		"nativeSrc": "4474:75:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4474:75:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4464:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4464:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811",
												"nativeSrc": "3859:707:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3957:9:14",
														"nodeType": "YulTypedName",
														"src": "3957:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3968:7:14",
														"nodeType": "YulTypedName",
														"src": "3968:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3980:6:14",
														"nodeType": "YulTypedName",
														"src": "3980:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3988:6:14",
														"nodeType": "YulTypedName",
														"src": "3988:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3996:6:14",
														"nodeType": "YulTypedName",
														"src": "3996:6:14",
														"type": ""
													}
												],
												"src": "3859:707:14"
											},
											{
												"body": {
													"nativeSrc": "4604:28:14",
													"nodeType": "YulBlock",
													"src": "4604:28:14",
													"statements": [
														{
															"nativeSrc": "4614:12:14",
															"nodeType": "YulAssignment",
															"src": "4614:12:14",
															"value": {
																"name": "value",
																"nativeSrc": "4621:5:14",
																"nodeType": "YulIdentifier",
																"src": "4621:5:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4614:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4614:3:14"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4572:60:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4590:5:14",
														"nodeType": "YulTypedName",
														"src": "4590:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4600:3:14",
														"nodeType": "YulTypedName",
														"src": "4600:3:14",
														"type": ""
													}
												],
												"src": "4572:60:14"
											},
											{
												"body": {
													"nativeSrc": "4698:82:14",
													"nodeType": "YulBlock",
													"src": "4698:82:14",
													"statements": [
														{
															"nativeSrc": "4708:66:14",
															"nodeType": "YulAssignment",
															"src": "4708:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4766:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4766:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4748:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "4748:17:14"
																				},
																				"nativeSrc": "4748:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4748:24:14"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4739:8:14",
																			"nodeType": "YulIdentifier",
																			"src": "4739:8:14"
																		},
																		"nativeSrc": "4739:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4739:34:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4721:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4721:17:14"
																},
																"nativeSrc": "4721:53:14",
																"nodeType": "YulFunctionCall",
																"src": "4721:53:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4708:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4708:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4638:142:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4678:5:14",
														"nodeType": "YulTypedName",
														"src": "4678:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4688:9:14",
														"nodeType": "YulTypedName",
														"src": "4688:9:14",
														"type": ""
													}
												],
												"src": "4638:142:14"
											},
											{
												"body": {
													"nativeSrc": "4846:66:14",
													"nodeType": "YulBlock",
													"src": "4846:66:14",
													"statements": [
														{
															"nativeSrc": "4856:50:14",
															"nodeType": "YulAssignment",
															"src": "4856:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4900:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "4900:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4869:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "4869:30:14"
																},
																"nativeSrc": "4869:37:14",
																"nodeType": "YulFunctionCall",
																"src": "4869:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4856:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "4856:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4786:126:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4826:5:14",
														"nodeType": "YulTypedName",
														"src": "4826:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4836:9:14",
														"nodeType": "YulTypedName",
														"src": "4836:9:14",
														"type": ""
													}
												],
												"src": "4786:126:14"
											},
											{
												"body": {
													"nativeSrc": "4999:66:14",
													"nodeType": "YulBlock",
													"src": "4999:66:14",
													"statements": [
														{
															"nativeSrc": "5009:50:14",
															"nodeType": "YulAssignment",
															"src": "5009:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5053:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5053:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5022:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5022:30:14"
																},
																"nativeSrc": "5022:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5022:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5009:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5009:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IV3SwapRouter_$903_to_t_address",
												"nativeSrc": "4918:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4979:5:14",
														"nodeType": "YulTypedName",
														"src": "4979:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4989:9:14",
														"nodeType": "YulTypedName",
														"src": "4989:9:14",
														"type": ""
													}
												],
												"src": "4918:147:14"
											},
											{
												"body": {
													"nativeSrc": "5157:87:14",
													"nodeType": "YulBlock",
													"src": "5157:87:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5174:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5174:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5231:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5231:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IV3SwapRouter_$903_to_t_address",
																			"nativeSrc": "5179:51:14",
																			"nodeType": "YulIdentifier",
																			"src": "5179:51:14"
																		},
																		"nativeSrc": "5179:58:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5179:58:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5167:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:14"
																},
																"nativeSrc": "5167:71:14",
																"nodeType": "YulFunctionCall",
																"src": "5167:71:14"
															},
															"nativeSrc": "5167:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "5167:71:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IV3SwapRouter_$903_to_t_address_fromStack",
												"nativeSrc": "5071:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5145:5:14",
														"nodeType": "YulTypedName",
														"src": "5145:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5152:3:14",
														"nodeType": "YulTypedName",
														"src": "5152:3:14",
														"type": ""
													}
												],
												"src": "5071:173:14"
											},
											{
												"body": {
													"nativeSrc": "5369:145:14",
													"nodeType": "YulBlock",
													"src": "5369:145:14",
													"statements": [
														{
															"nativeSrc": "5379:26:14",
															"nodeType": "YulAssignment",
															"src": "5379:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5391:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5391:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5402:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5387:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5387:3:14"
																},
																"nativeSrc": "5387:18:14",
																"nodeType": "YulFunctionCall",
																"src": "5387:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5379:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5379:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5480:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5480:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5493:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5493:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5504:1:14",
																				"nodeType": "YulLiteral",
																				"src": "5504:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5489:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:14"
																		},
																		"nativeSrc": "5489:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5489:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IV3SwapRouter_$903_to_t_address_fromStack",
																	"nativeSrc": "5415:64:14",
																	"nodeType": "YulIdentifier",
																	"src": "5415:64:14"
																},
																"nativeSrc": "5415:92:14",
																"nodeType": "YulFunctionCall",
																"src": "5415:92:14"
															},
															"nativeSrc": "5415:92:14",
															"nodeType": "YulExpressionStatement",
															"src": "5415:92:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IV3SwapRouter_$903__to_t_address__fromStack_reversed",
												"nativeSrc": "5250:264:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5341:9:14",
														"nodeType": "YulTypedName",
														"src": "5341:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5353:6:14",
														"nodeType": "YulTypedName",
														"src": "5353:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5364:4:14",
														"nodeType": "YulTypedName",
														"src": "5364:4:14",
														"type": ""
													}
												],
												"src": "5250:264:14"
											},
											{
												"body": {
													"nativeSrc": "5605:66:14",
													"nodeType": "YulBlock",
													"src": "5605:66:14",
													"statements": [
														{
															"nativeSrc": "5615:50:14",
															"nodeType": "YulAssignment",
															"src": "5615:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5659:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5659:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5628:30:14",
																	"nodeType": "YulIdentifier",
																	"src": "5628:30:14"
																},
																"nativeSrc": "5628:37:14",
																"nodeType": "YulFunctionCall",
																"src": "5628:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5615:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "5615:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV3Factory_$160_to_t_address",
												"nativeSrc": "5520:151:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5585:5:14",
														"nodeType": "YulTypedName",
														"src": "5585:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5595:9:14",
														"nodeType": "YulTypedName",
														"src": "5595:9:14",
														"type": ""
													}
												],
												"src": "5520:151:14"
											},
											{
												"body": {
													"nativeSrc": "5767:91:14",
													"nodeType": "YulBlock",
													"src": "5767:91:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5784:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5784:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5845:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5845:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV3Factory_$160_to_t_address",
																			"nativeSrc": "5789:55:14",
																			"nodeType": "YulIdentifier",
																			"src": "5789:55:14"
																		},
																		"nativeSrc": "5789:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:62:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5777:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5777:6:14"
																},
																"nativeSrc": "5777:75:14",
																"nodeType": "YulFunctionCall",
																"src": "5777:75:14"
															},
															"nativeSrc": "5777:75:14",
															"nodeType": "YulExpressionStatement",
															"src": "5777:75:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV3Factory_$160_to_t_address_fromStack",
												"nativeSrc": "5677:181:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5755:5:14",
														"nodeType": "YulTypedName",
														"src": "5755:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5762:3:14",
														"nodeType": "YulTypedName",
														"src": "5762:3:14",
														"type": ""
													}
												],
												"src": "5677:181:14"
											},
											{
												"body": {
													"nativeSrc": "5987:149:14",
													"nodeType": "YulBlock",
													"src": "5987:149:14",
													"statements": [
														{
															"nativeSrc": "5997:26:14",
															"nodeType": "YulAssignment",
															"src": "5997:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6009:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6009:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6020:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6020:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6005:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6005:3:14"
																},
																"nativeSrc": "6005:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6005:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5997:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5997:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6102:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6102:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6126:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6126:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6111:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:14"
																		},
																		"nativeSrc": "6111:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6111:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV3Factory_$160_to_t_address_fromStack",
																	"nativeSrc": "6033:68:14",
																	"nodeType": "YulIdentifier",
																	"src": "6033:68:14"
																},
																"nativeSrc": "6033:96:14",
																"nodeType": "YulFunctionCall",
																"src": "6033:96:14"
															},
															"nativeSrc": "6033:96:14",
															"nodeType": "YulExpressionStatement",
															"src": "6033:96:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV3Factory_$160__to_t_address__fromStack_reversed",
												"nativeSrc": "5864:272:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5959:9:14",
														"nodeType": "YulTypedName",
														"src": "5959:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5971:6:14",
														"nodeType": "YulTypedName",
														"src": "5971:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5982:4:14",
														"nodeType": "YulTypedName",
														"src": "5982:4:14",
														"type": ""
													}
												],
												"src": "5864:272:14"
											},
											{
												"body": {
													"nativeSrc": "6207:53:14",
													"nodeType": "YulBlock",
													"src": "6207:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6224:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6224:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6247:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6247:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6229:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "6229:17:14"
																		},
																		"nativeSrc": "6229:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6229:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6217:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6217:6:14"
																},
																"nativeSrc": "6217:37:14",
																"nodeType": "YulFunctionCall",
																"src": "6217:37:14"
															},
															"nativeSrc": "6217:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "6217:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6142:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6195:5:14",
														"nodeType": "YulTypedName",
														"src": "6195:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6202:3:14",
														"nodeType": "YulTypedName",
														"src": "6202:3:14",
														"type": ""
													}
												],
												"src": "6142:118:14"
											},
											{
												"body": {
													"nativeSrc": "6364:124:14",
													"nodeType": "YulBlock",
													"src": "6364:124:14",
													"statements": [
														{
															"nativeSrc": "6374:26:14",
															"nodeType": "YulAssignment",
															"src": "6374:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6386:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6386:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6397:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6397:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6382:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:14"
																},
																"nativeSrc": "6382:18:14",
																"nodeType": "YulFunctionCall",
																"src": "6382:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6374:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "6374:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6454:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6454:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6467:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6467:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6478:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6478:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6463:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6463:3:14"
																		},
																		"nativeSrc": "6463:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6463:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6410:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "6410:43:14"
																},
																"nativeSrc": "6410:71:14",
																"nodeType": "YulFunctionCall",
																"src": "6410:71:14"
															},
															"nativeSrc": "6410:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "6410:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6266:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6336:9:14",
														"nodeType": "YulTypedName",
														"src": "6336:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6348:6:14",
														"nodeType": "YulTypedName",
														"src": "6348:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6359:4:14",
														"nodeType": "YulTypedName",
														"src": "6359:4:14",
														"type": ""
													}
												],
												"src": "6266:222:14"
											},
											{
												"body": {
													"nativeSrc": "6557:80:14",
													"nodeType": "YulBlock",
													"src": "6557:80:14",
													"statements": [
														{
															"nativeSrc": "6567:22:14",
															"nodeType": "YulAssignment",
															"src": "6567:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6582:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6582:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6576:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6576:5:14"
																},
																"nativeSrc": "6576:13:14",
																"nodeType": "YulFunctionCall",
																"src": "6576:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6567:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "6567:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6625:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "6625:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6598:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "6598:26:14"
																},
																"nativeSrc": "6598:33:14",
																"nodeType": "YulFunctionCall",
																"src": "6598:33:14"
															},
															"nativeSrc": "6598:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "6598:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6494:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6535:6:14",
														"nodeType": "YulTypedName",
														"src": "6535:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6543:3:14",
														"nodeType": "YulTypedName",
														"src": "6543:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6551:5:14",
														"nodeType": "YulTypedName",
														"src": "6551:5:14",
														"type": ""
													}
												],
												"src": "6494:143:14"
											},
											{
												"body": {
													"nativeSrc": "6720:274:14",
													"nodeType": "YulBlock",
													"src": "6720:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6766:83:14",
																"nodeType": "YulBlock",
																"src": "6766:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6768:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "6768:77:14"
																			},
																			"nativeSrc": "6768:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6768:79:14"
																		},
																		"nativeSrc": "6768:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6768:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6741:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6741:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6750:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6750:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6737:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6737:3:14"
																		},
																		"nativeSrc": "6737:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6737:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6762:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6762:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6733:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6733:3:14"
																},
																"nativeSrc": "6733:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6733:32:14"
															},
															"nativeSrc": "6730:119:14",
															"nodeType": "YulIf",
															"src": "6730:119:14"
														},
														{
															"nativeSrc": "6859:128:14",
															"nodeType": "YulBlock",
															"src": "6859:128:14",
															"statements": [
																{
																	"nativeSrc": "6874:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6874:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6888:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6888:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6878:6:14",
																			"nodeType": "YulTypedName",
																			"src": "6878:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6903:74:14",
																	"nodeType": "YulAssignment",
																	"src": "6903:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6949:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "6949:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6960:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "6960:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6945:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6945:3:14"
																				},
																				"nativeSrc": "6945:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6945:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6969:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6969:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "6913:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "6913:31:14"
																		},
																		"nativeSrc": "6913:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6913:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6903:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "6903:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "6643:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6690:9:14",
														"nodeType": "YulTypedName",
														"src": "6690:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6701:7:14",
														"nodeType": "YulTypedName",
														"src": "6701:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6713:6:14",
														"nodeType": "YulTypedName",
														"src": "6713:6:14",
														"type": ""
													}
												],
												"src": "6643:351:14"
											},
											{
												"body": {
													"nativeSrc": "7126:206:14",
													"nodeType": "YulBlock",
													"src": "7126:206:14",
													"statements": [
														{
															"nativeSrc": "7136:26:14",
															"nodeType": "YulAssignment",
															"src": "7136:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7148:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7148:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7159:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7159:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7144:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7144:3:14"
																},
																"nativeSrc": "7144:18:14",
																"nodeType": "YulFunctionCall",
																"src": "7144:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7136:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7216:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7216:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7240:1:14",
																				"nodeType": "YulLiteral",
																				"src": "7240:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7225:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7225:3:14"
																		},
																		"nativeSrc": "7225:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7225:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7172:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7172:43:14"
																},
																"nativeSrc": "7172:71:14",
																"nodeType": "YulFunctionCall",
																"src": "7172:71:14"
															},
															"nativeSrc": "7172:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "7172:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7297:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7297:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7310:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7310:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7321:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7321:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7306:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7306:3:14"
																		},
																		"nativeSrc": "7306:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7306:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7253:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "7253:43:14"
																},
																"nativeSrc": "7253:72:14",
																"nodeType": "YulFunctionCall",
																"src": "7253:72:14"
															},
															"nativeSrc": "7253:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "7253:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7000:332:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7090:9:14",
														"nodeType": "YulTypedName",
														"src": "7090:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7102:6:14",
														"nodeType": "YulTypedName",
														"src": "7102:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7110:6:14",
														"nodeType": "YulTypedName",
														"src": "7110:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7121:4:14",
														"nodeType": "YulTypedName",
														"src": "7121:4:14",
														"type": ""
													}
												],
												"src": "7000:332:14"
											},
											{
												"body": {
													"nativeSrc": "7380:48:14",
													"nodeType": "YulBlock",
													"src": "7380:48:14",
													"statements": [
														{
															"nativeSrc": "7390:32:14",
															"nodeType": "YulAssignment",
															"src": "7390:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7415:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7415:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7408:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7408:6:14"
																		},
																		"nativeSrc": "7408:13:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7408:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7401:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7401:6:14"
																},
																"nativeSrc": "7401:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7401:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7390:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "7390:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7338:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7362:5:14",
														"nodeType": "YulTypedName",
														"src": "7362:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7372:7:14",
														"nodeType": "YulTypedName",
														"src": "7372:7:14",
														"type": ""
													}
												],
												"src": "7338:90:14"
											},
											{
												"body": {
													"nativeSrc": "7474:76:14",
													"nodeType": "YulBlock",
													"src": "7474:76:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7528:16:14",
																"nodeType": "YulBlock",
																"src": "7528:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7537:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7537:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7540:1:14",
																					"nodeType": "YulLiteral",
																					"src": "7540:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7530:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "7530:6:14"
																			},
																			"nativeSrc": "7530:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7530:12:14"
																		},
																		"nativeSrc": "7530:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7530:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7497:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "7497:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7519:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "7519:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7504:14:14",
																					"nodeType": "YulIdentifier",
																					"src": "7504:14:14"
																				},
																				"nativeSrc": "7504:21:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7504:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7494:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "7494:2:14"
																		},
																		"nativeSrc": "7494:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7487:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:14"
																},
																"nativeSrc": "7487:40:14",
																"nodeType": "YulFunctionCall",
																"src": "7487:40:14"
															},
															"nativeSrc": "7484:60:14",
															"nodeType": "YulIf",
															"src": "7484:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7434:116:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7467:5:14",
														"nodeType": "YulTypedName",
														"src": "7467:5:14",
														"type": ""
													}
												],
												"src": "7434:116:14"
											},
											{
												"body": {
													"nativeSrc": "7616:77:14",
													"nodeType": "YulBlock",
													"src": "7616:77:14",
													"statements": [
														{
															"nativeSrc": "7626:22:14",
															"nodeType": "YulAssignment",
															"src": "7626:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7641:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7641:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7635:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7635:5:14"
																},
																"nativeSrc": "7635:13:14",
																"nodeType": "YulFunctionCall",
																"src": "7635:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7626:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "7626:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7681:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "7681:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7657:23:14",
																	"nodeType": "YulIdentifier",
																	"src": "7657:23:14"
																},
																"nativeSrc": "7657:30:14",
																"nodeType": "YulFunctionCall",
																"src": "7657:30:14"
															},
															"nativeSrc": "7657:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "7657:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7556:137:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7594:6:14",
														"nodeType": "YulTypedName",
														"src": "7594:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7602:3:14",
														"nodeType": "YulTypedName",
														"src": "7602:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7610:5:14",
														"nodeType": "YulTypedName",
														"src": "7610:5:14",
														"type": ""
													}
												],
												"src": "7556:137:14"
											},
											{
												"body": {
													"nativeSrc": "7773:271:14",
													"nodeType": "YulBlock",
													"src": "7773:271:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "7819:83:14",
																"nodeType": "YulBlock",
																"src": "7819:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7821:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "7821:77:14"
																			},
																			"nativeSrc": "7821:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "7821:79:14"
																		},
																		"nativeSrc": "7821:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "7821:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7794:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7794:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7803:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7803:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7790:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7790:3:14"
																		},
																		"nativeSrc": "7790:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7790:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7815:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7815:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7786:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7786:3:14"
																},
																"nativeSrc": "7786:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7786:32:14"
															},
															"nativeSrc": "7783:119:14",
															"nodeType": "YulIf",
															"src": "7783:119:14"
														},
														{
															"nativeSrc": "7912:125:14",
															"nodeType": "YulBlock",
															"src": "7912:125:14",
															"statements": [
																{
																	"nativeSrc": "7927:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7927:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7941:1:14",
																		"nodeType": "YulLiteral",
																		"src": "7941:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7931:6:14",
																			"nodeType": "YulTypedName",
																			"src": "7931:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7956:71:14",
																	"nodeType": "YulAssignment",
																	"src": "7956:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7999:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "7999:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8010:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8010:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7995:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "7995:3:14"
																				},
																				"nativeSrc": "7995:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "7995:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8019:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8019:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7966:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "7966:28:14"
																		},
																		"nativeSrc": "7966:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7966:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7956:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "7956:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7699:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7743:9:14",
														"nodeType": "YulTypedName",
														"src": "7743:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7754:7:14",
														"nodeType": "YulTypedName",
														"src": "7754:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7766:6:14",
														"nodeType": "YulTypedName",
														"src": "7766:6:14",
														"type": ""
													}
												],
												"src": "7699:345:14"
											},
											{
												"body": {
													"nativeSrc": "8202:286:14",
													"nodeType": "YulBlock",
													"src": "8202:286:14",
													"statements": [
														{
															"nativeSrc": "8212:26:14",
															"nodeType": "YulAssignment",
															"src": "8212:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8224:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8224:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8235:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8235:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8220:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8220:3:14"
																},
																"nativeSrc": "8220:18:14",
																"nodeType": "YulFunctionCall",
																"src": "8220:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8212:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8212:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8292:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8292:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8305:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8305:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8316:1:14",
																				"nodeType": "YulLiteral",
																				"src": "8316:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8301:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8301:3:14"
																		},
																		"nativeSrc": "8301:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8301:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8248:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8248:43:14"
																},
																"nativeSrc": "8248:71:14",
																"nodeType": "YulFunctionCall",
																"src": "8248:71:14"
															},
															"nativeSrc": "8248:71:14",
															"nodeType": "YulExpressionStatement",
															"src": "8248:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8373:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8373:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8386:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8386:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8397:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8397:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8382:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8382:3:14"
																		},
																		"nativeSrc": "8382:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8382:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8329:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "8329:43:14"
																},
																"nativeSrc": "8329:72:14",
																"nodeType": "YulFunctionCall",
																"src": "8329:72:14"
															},
															"nativeSrc": "8329:72:14",
															"nodeType": "YulExpressionStatement",
															"src": "8329:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8453:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8453:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8466:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8466:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8477:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8477:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8462:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8462:3:14"
																		},
																		"nativeSrc": "8462:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8462:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nativeSrc": "8411:41:14",
																	"nodeType": "YulIdentifier",
																	"src": "8411:41:14"
																},
																"nativeSrc": "8411:70:14",
																"nodeType": "YulFunctionCall",
																"src": "8411:70:14"
															},
															"nativeSrc": "8411:70:14",
															"nodeType": "YulExpressionStatement",
															"src": "8411:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nativeSrc": "8050:438:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8158:9:14",
														"nodeType": "YulTypedName",
														"src": "8158:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8170:6:14",
														"nodeType": "YulTypedName",
														"src": "8170:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8178:6:14",
														"nodeType": "YulTypedName",
														"src": "8178:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8186:6:14",
														"nodeType": "YulTypedName",
														"src": "8186:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8197:4:14",
														"nodeType": "YulTypedName",
														"src": "8197:4:14",
														"type": ""
													}
												],
												"src": "8050:438:14"
											},
											{
												"body": {
													"nativeSrc": "8557:80:14",
													"nodeType": "YulBlock",
													"src": "8557:80:14",
													"statements": [
														{
															"nativeSrc": "8567:22:14",
															"nodeType": "YulAssignment",
															"src": "8567:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8582:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8582:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8576:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8576:5:14"
																},
																"nativeSrc": "8576:13:14",
																"nodeType": "YulFunctionCall",
																"src": "8576:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8567:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "8567:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8625:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "8625:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "8598:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "8598:26:14"
																},
																"nativeSrc": "8598:33:14",
																"nodeType": "YulFunctionCall",
																"src": "8598:33:14"
															},
															"nativeSrc": "8598:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "8598:33:14"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "8494:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8535:6:14",
														"nodeType": "YulTypedName",
														"src": "8535:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8543:3:14",
														"nodeType": "YulTypedName",
														"src": "8543:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8551:5:14",
														"nodeType": "YulTypedName",
														"src": "8551:5:14",
														"type": ""
													}
												],
												"src": "8494:143:14"
											},
											{
												"body": {
													"nativeSrc": "8720:274:14",
													"nodeType": "YulBlock",
													"src": "8720:274:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8766:83:14",
																"nodeType": "YulBlock",
																"src": "8766:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8768:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "8768:77:14"
																			},
																			"nativeSrc": "8768:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8768:79:14"
																		},
																		"nativeSrc": "8768:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8768:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8741:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8741:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8750:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8750:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8737:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8737:3:14"
																		},
																		"nativeSrc": "8737:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8737:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8762:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8762:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8733:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8733:3:14"
																},
																"nativeSrc": "8733:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8733:32:14"
															},
															"nativeSrc": "8730:119:14",
															"nodeType": "YulIf",
															"src": "8730:119:14"
														},
														{
															"nativeSrc": "8859:128:14",
															"nodeType": "YulBlock",
															"src": "8859:128:14",
															"statements": [
																{
																	"nativeSrc": "8874:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8874:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8888:1:14",
																		"nodeType": "YulLiteral",
																		"src": "8888:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8878:6:14",
																			"nodeType": "YulTypedName",
																			"src": "8878:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8903:74:14",
																	"nodeType": "YulAssignment",
																	"src": "8903:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8949:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "8949:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8960:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "8960:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8945:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "8945:3:14"
																				},
																				"nativeSrc": "8945:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "8945:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8969:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8969:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "8913:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "8913:31:14"
																		},
																		"nativeSrc": "8913:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8913:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8903:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "8903:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8643:351:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8690:9:14",
														"nodeType": "YulTypedName",
														"src": "8690:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8701:7:14",
														"nodeType": "YulTypedName",
														"src": "8701:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8713:6:14",
														"nodeType": "YulTypedName",
														"src": "8713:6:14",
														"type": ""
													}
												],
												"src": "8643:351:14"
											},
											{
												"body": {
													"nativeSrc": "9042:78:14",
													"nodeType": "YulBlock",
													"src": "9042:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9098:16:14",
																"nodeType": "YulBlock",
																"src": "9098:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9107:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9107:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9110:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9110:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9100:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9100:6:14"
																			},
																			"nativeSrc": "9100:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9100:12:14"
																		},
																		"nativeSrc": "9100:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9100:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9065:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9065:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9089:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "9089:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nativeSrc": "9072:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "9072:16:14"
																				},
																				"nativeSrc": "9072:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9072:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9062:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9062:2:14"
																		},
																		"nativeSrc": "9062:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9062:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9055:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9055:6:14"
																},
																"nativeSrc": "9055:42:14",
																"nodeType": "YulFunctionCall",
																"src": "9055:42:14"
															},
															"nativeSrc": "9052:62:14",
															"nodeType": "YulIf",
															"src": "9052:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nativeSrc": "9000:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9035:5:14",
														"nodeType": "YulTypedName",
														"src": "9035:5:14",
														"type": ""
													}
												],
												"src": "9000:120:14"
											},
											{
												"body": {
													"nativeSrc": "9188:79:14",
													"nodeType": "YulBlock",
													"src": "9188:79:14",
													"statements": [
														{
															"nativeSrc": "9198:22:14",
															"nodeType": "YulAssignment",
															"src": "9198:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9213:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9213:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9207:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9207:5:14"
																},
																"nativeSrc": "9207:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9207:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9198:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9198:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9255:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9255:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nativeSrc": "9229:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "9229:25:14"
																},
																"nativeSrc": "9229:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9229:32:14"
															},
															"nativeSrc": "9229:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "9229:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nativeSrc": "9126:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9166:6:14",
														"nodeType": "YulTypedName",
														"src": "9166:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9174:3:14",
														"nodeType": "YulTypedName",
														"src": "9174:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9182:5:14",
														"nodeType": "YulTypedName",
														"src": "9182:5:14",
														"type": ""
													}
												],
												"src": "9126:141:14"
											},
											{
												"body": {
													"nativeSrc": "9349:273:14",
													"nodeType": "YulBlock",
													"src": "9349:273:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9395:83:14",
																"nodeType": "YulBlock",
																"src": "9395:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9397:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "9397:77:14"
																			},
																			"nativeSrc": "9397:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9397:79:14"
																		},
																		"nativeSrc": "9397:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9397:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9370:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9370:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9379:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9379:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9366:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9366:3:14"
																		},
																		"nativeSrc": "9366:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9366:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9391:2:14",
																		"nodeType": "YulLiteral",
																		"src": "9391:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9362:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9362:3:14"
																},
																"nativeSrc": "9362:32:14",
																"nodeType": "YulFunctionCall",
																"src": "9362:32:14"
															},
															"nativeSrc": "9359:119:14",
															"nodeType": "YulIf",
															"src": "9359:119:14"
														},
														{
															"nativeSrc": "9488:127:14",
															"nodeType": "YulBlock",
															"src": "9488:127:14",
															"statements": [
																{
																	"nativeSrc": "9503:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9503:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9517:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9517:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9507:6:14",
																			"nodeType": "YulTypedName",
																			"src": "9507:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9532:73:14",
																	"nodeType": "YulAssignment",
																	"src": "9532:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9577:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "9577:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9588:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9588:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9573:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "9573:3:14"
																				},
																				"nativeSrc": "9573:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9573:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9597:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "9597:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nativeSrc": "9542:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "9542:30:14"
																		},
																		"nativeSrc": "9542:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9542:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9532:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9532:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24_fromMemory",
												"nativeSrc": "9273:349:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9319:9:14",
														"nodeType": "YulTypedName",
														"src": "9319:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9330:7:14",
														"nodeType": "YulTypedName",
														"src": "9330:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9342:6:14",
														"nodeType": "YulTypedName",
														"src": "9342:6:14",
														"type": ""
													}
												],
												"src": "9273:349:14"
											},
											{
												"body": {
													"nativeSrc": "9671:79:14",
													"nodeType": "YulBlock",
													"src": "9671:79:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "9728:16:14",
																"nodeType": "YulBlock",
																"src": "9728:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9737:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9737:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9740:1:14",
																					"nodeType": "YulLiteral",
																					"src": "9740:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9730:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "9730:6:14"
																			},
																			"nativeSrc": "9730:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "9730:12:14"
																		},
																		"nativeSrc": "9730:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "9730:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9694:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9694:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9719:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "9719:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "9701:17:14",
																					"nodeType": "YulIdentifier",
																					"src": "9701:17:14"
																				},
																				"nativeSrc": "9701:24:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9701:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9691:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "9691:2:14"
																		},
																		"nativeSrc": "9691:35:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9691:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9684:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9684:6:14"
																},
																"nativeSrc": "9684:43:14",
																"nodeType": "YulFunctionCall",
																"src": "9684:43:14"
															},
															"nativeSrc": "9681:63:14",
															"nodeType": "YulIf",
															"src": "9681:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nativeSrc": "9628:122:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9664:5:14",
														"nodeType": "YulTypedName",
														"src": "9664:5:14",
														"type": ""
													}
												],
												"src": "9628:122:14"
											},
											{
												"body": {
													"nativeSrc": "9819:80:14",
													"nodeType": "YulBlock",
													"src": "9819:80:14",
													"statements": [
														{
															"nativeSrc": "9829:22:14",
															"nodeType": "YulAssignment",
															"src": "9829:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9844:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9844:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9838:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9838:5:14"
																},
																"nativeSrc": "9838:13:14",
																"nodeType": "YulFunctionCall",
																"src": "9838:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9829:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9829:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9887:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9887:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nativeSrc": "9860:26:14",
																	"nodeType": "YulIdentifier",
																	"src": "9860:26:14"
																},
																"nativeSrc": "9860:33:14",
																"nodeType": "YulFunctionCall",
																"src": "9860:33:14"
															},
															"nativeSrc": "9860:33:14",
															"nodeType": "YulExpressionStatement",
															"src": "9860:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nativeSrc": "9756:143:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9797:6:14",
														"nodeType": "YulTypedName",
														"src": "9797:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9805:3:14",
														"nodeType": "YulTypedName",
														"src": "9805:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9813:5:14",
														"nodeType": "YulTypedName",
														"src": "9813:5:14",
														"type": ""
													}
												],
												"src": "9756:143:14"
											},
											{
												"body": {
													"nativeSrc": "9948:47:14",
													"nodeType": "YulBlock",
													"src": "9948:47:14",
													"statements": [
														{
															"nativeSrc": "9958:31:14",
															"nodeType": "YulAssignment",
															"src": "9958:31:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9980:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9980:1:14",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9983:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9983:5:14"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nativeSrc": "9969:10:14",
																	"nodeType": "YulIdentifier",
																	"src": "9969:10:14"
																},
																"nativeSrc": "9969:20:14",
																"nodeType": "YulFunctionCall",
																"src": "9969:20:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9958:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "9958:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nativeSrc": "9905:90:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9930:5:14",
														"nodeType": "YulTypedName",
														"src": "9930:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9940:7:14",
														"nodeType": "YulTypedName",
														"src": "9940:7:14",
														"type": ""
													}
												],
												"src": "9905:90:14"
											},
											{
												"body": {
													"nativeSrc": "10042:77:14",
													"nodeType": "YulBlock",
													"src": "10042:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10097:16:14",
																"nodeType": "YulBlock",
																"src": "10097:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10106:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10106:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10109:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10109:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10099:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10099:6:14"
																			},
																			"nativeSrc": "10099:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10099:12:14"
																		},
																		"nativeSrc": "10099:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10099:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10065:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "10065:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10088:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "10088:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nativeSrc": "10072:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "10072:15:14"
																				},
																				"nativeSrc": "10072:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10072:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10062:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10062:2:14"
																		},
																		"nativeSrc": "10062:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10062:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10055:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10055:6:14"
																},
																"nativeSrc": "10055:41:14",
																"nodeType": "YulFunctionCall",
																"src": "10055:41:14"
															},
															"nativeSrc": "10052:61:14",
															"nodeType": "YulIf",
															"src": "10052:61:14"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nativeSrc": "10001:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10035:5:14",
														"nodeType": "YulTypedName",
														"src": "10035:5:14",
														"type": ""
													}
												],
												"src": "10001:118:14"
											},
											{
												"body": {
													"nativeSrc": "10186:78:14",
													"nodeType": "YulBlock",
													"src": "10186:78:14",
													"statements": [
														{
															"nativeSrc": "10196:22:14",
															"nodeType": "YulAssignment",
															"src": "10196:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10211:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10211:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10205:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10205:5:14"
																},
																"nativeSrc": "10205:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10205:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10196:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10196:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10252:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10252:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nativeSrc": "10227:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "10227:24:14"
																},
																"nativeSrc": "10227:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10227:31:14"
															},
															"nativeSrc": "10227:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10227:31:14"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nativeSrc": "10125:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10164:6:14",
														"nodeType": "YulTypedName",
														"src": "10164:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10172:3:14",
														"nodeType": "YulTypedName",
														"src": "10172:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10180:5:14",
														"nodeType": "YulTypedName",
														"src": "10180:5:14",
														"type": ""
													}
												],
												"src": "10125:139:14"
											},
											{
												"body": {
													"nativeSrc": "10314:45:14",
													"nodeType": "YulBlock",
													"src": "10314:45:14",
													"statements": [
														{
															"nativeSrc": "10324:29:14",
															"nodeType": "YulAssignment",
															"src": "10324:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10339:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10339:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10346:6:14",
																		"nodeType": "YulLiteral",
																		"src": "10346:6:14",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10335:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10335:3:14"
																},
																"nativeSrc": "10335:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10335:18:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10324:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "10324:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "10270:89:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10296:5:14",
														"nodeType": "YulTypedName",
														"src": "10296:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10306:7:14",
														"nodeType": "YulTypedName",
														"src": "10306:7:14",
														"type": ""
													}
												],
												"src": "10270:89:14"
											},
											{
												"body": {
													"nativeSrc": "10407:78:14",
													"nodeType": "YulBlock",
													"src": "10407:78:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10463:16:14",
																"nodeType": "YulBlock",
																"src": "10463:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10472:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10472:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10475:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10475:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10465:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10465:6:14"
																			},
																			"nativeSrc": "10465:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10465:12:14"
																		},
																		"nativeSrc": "10465:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10465:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10430:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "10430:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10454:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "10454:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "10437:16:14",
																					"nodeType": "YulIdentifier",
																					"src": "10437:16:14"
																				},
																				"nativeSrc": "10437:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10437:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10427:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10427:2:14"
																		},
																		"nativeSrc": "10427:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10427:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10420:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10420:6:14"
																},
																"nativeSrc": "10420:42:14",
																"nodeType": "YulFunctionCall",
																"src": "10420:42:14"
															},
															"nativeSrc": "10417:62:14",
															"nodeType": "YulIf",
															"src": "10417:62:14"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "10365:120:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10400:5:14",
														"nodeType": "YulTypedName",
														"src": "10400:5:14",
														"type": ""
													}
												],
												"src": "10365:120:14"
											},
											{
												"body": {
													"nativeSrc": "10553:79:14",
													"nodeType": "YulBlock",
													"src": "10553:79:14",
													"statements": [
														{
															"nativeSrc": "10563:22:14",
															"nodeType": "YulAssignment",
															"src": "10563:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10578:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10578:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10572:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10572:5:14"
																},
																"nativeSrc": "10572:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10572:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10563:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10563:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10620:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10620:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "10594:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "10594:25:14"
																},
																"nativeSrc": "10594:32:14",
																"nodeType": "YulFunctionCall",
																"src": "10594:32:14"
															},
															"nativeSrc": "10594:32:14",
															"nodeType": "YulExpressionStatement",
															"src": "10594:32:14"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "10491:141:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10531:6:14",
														"nodeType": "YulTypedName",
														"src": "10531:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10539:3:14",
														"nodeType": "YulTypedName",
														"src": "10539:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10547:5:14",
														"nodeType": "YulTypedName",
														"src": "10547:5:14",
														"type": ""
													}
												],
												"src": "10491:141:14"
											},
											{
												"body": {
													"nativeSrc": "10681:43:14",
													"nodeType": "YulBlock",
													"src": "10681:43:14",
													"statements": [
														{
															"nativeSrc": "10691:27:14",
															"nodeType": "YulAssignment",
															"src": "10691:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10706:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10706:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10713:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10713:4:14",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10702:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10702:3:14"
																},
																"nativeSrc": "10702:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10702:16:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10691:7:14",
																	"nodeType": "YulIdentifier",
																	"src": "10691:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "10638:86:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10663:5:14",
														"nodeType": "YulTypedName",
														"src": "10663:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10673:7:14",
														"nodeType": "YulTypedName",
														"src": "10673:7:14",
														"type": ""
													}
												],
												"src": "10638:86:14"
											},
											{
												"body": {
													"nativeSrc": "10771:77:14",
													"nodeType": "YulBlock",
													"src": "10771:77:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "10826:16:14",
																"nodeType": "YulBlock",
																"src": "10826:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10835:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10835:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10838:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10838:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10828:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10828:6:14"
																			},
																			"nativeSrc": "10828:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10828:12:14"
																		},
																		"nativeSrc": "10828:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10828:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10794:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "10794:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10817:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "10817:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "10801:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "10801:15:14"
																				},
																				"nativeSrc": "10801:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "10801:22:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10791:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10791:2:14"
																		},
																		"nativeSrc": "10791:33:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10791:33:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10784:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10784:6:14"
																},
																"nativeSrc": "10784:41:14",
																"nodeType": "YulFunctionCall",
																"src": "10784:41:14"
															},
															"nativeSrc": "10781:61:14",
															"nodeType": "YulIf",
															"src": "10781:61:14"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "10730:118:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10764:5:14",
														"nodeType": "YulTypedName",
														"src": "10764:5:14",
														"type": ""
													}
												],
												"src": "10730:118:14"
											},
											{
												"body": {
													"nativeSrc": "10915:78:14",
													"nodeType": "YulBlock",
													"src": "10915:78:14",
													"statements": [
														{
															"nativeSrc": "10925:22:14",
															"nodeType": "YulAssignment",
															"src": "10925:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10940:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10940:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10934:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10934:5:14"
																},
																"nativeSrc": "10934:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10934:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10925:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10925:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10981:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "10981:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "10956:24:14",
																	"nodeType": "YulIdentifier",
																	"src": "10956:24:14"
																},
																"nativeSrc": "10956:31:14",
																"nodeType": "YulFunctionCall",
																"src": "10956:31:14"
															},
															"nativeSrc": "10956:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "10956:31:14"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "10854:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10893:6:14",
														"nodeType": "YulTypedName",
														"src": "10893:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10901:3:14",
														"nodeType": "YulTypedName",
														"src": "10901:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10909:5:14",
														"nodeType": "YulTypedName",
														"src": "10909:5:14",
														"type": ""
													}
												],
												"src": "10854:139:14"
											},
											{
												"body": {
													"nativeSrc": "11168:1102:14",
													"nodeType": "YulBlock",
													"src": "11168:1102:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "11215:83:14",
																"nodeType": "YulBlock",
																"src": "11215:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11217:77:14",
																				"nodeType": "YulIdentifier",
																				"src": "11217:77:14"
																			},
																			"nativeSrc": "11217:79:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11217:79:14"
																		},
																		"nativeSrc": "11217:79:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11217:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11189:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11189:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11198:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "11198:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11185:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11185:3:14"
																		},
																		"nativeSrc": "11185:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11185:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11210:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11210:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11181:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11181:3:14"
																},
																"nativeSrc": "11181:33:14",
																"nodeType": "YulFunctionCall",
																"src": "11181:33:14"
															},
															"nativeSrc": "11178:120:14",
															"nodeType": "YulIf",
															"src": "11178:120:14"
														},
														{
															"nativeSrc": "11308:128:14",
															"nodeType": "YulBlock",
															"src": "11308:128:14",
															"statements": [
																{
																	"nativeSrc": "11323:15:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11323:15:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11337:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11337:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11327:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11327:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11352:74:14",
																	"nodeType": "YulAssignment",
																	"src": "11352:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11398:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11398:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11409:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11409:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11394:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11394:3:14"
																				},
																				"nativeSrc": "11394:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11394:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11418:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11418:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nativeSrc": "11362:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "11362:31:14"
																		},
																		"nativeSrc": "11362:64:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11362:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11352:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11352:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11446:127:14",
															"nodeType": "YulBlock",
															"src": "11446:127:14",
															"statements": [
																{
																	"nativeSrc": "11461:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11461:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11475:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11475:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11465:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11465:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11491:72:14",
																	"nodeType": "YulAssignment",
																	"src": "11491:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11535:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11535:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11546:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11546:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11531:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11531:3:14"
																				},
																				"nativeSrc": "11531:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11531:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11555:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11555:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nativeSrc": "11501:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "11501:29:14"
																		},
																		"nativeSrc": "11501:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11501:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11491:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11491:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11583:128:14",
															"nodeType": "YulBlock",
															"src": "11583:128:14",
															"statements": [
																{
																	"nativeSrc": "11598:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11598:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11612:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11612:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11602:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11602:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11628:73:14",
																	"nodeType": "YulAssignment",
																	"src": "11628:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11673:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11673:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11684:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11684:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11669:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11669:3:14"
																				},
																				"nativeSrc": "11669:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11669:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11693:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11693:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "11638:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "11638:30:14"
																		},
																		"nativeSrc": "11638:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11638:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11628:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11628:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11721:128:14",
															"nodeType": "YulBlock",
															"src": "11721:128:14",
															"statements": [
																{
																	"nativeSrc": "11736:16:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11736:16:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11750:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11750:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11740:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11740:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11766:73:14",
																	"nodeType": "YulAssignment",
																	"src": "11766:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11811:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11811:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11822:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11822:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11807:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11807:3:14"
																				},
																				"nativeSrc": "11807:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11807:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11831:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11831:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "11776:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "11776:30:14"
																		},
																		"nativeSrc": "11776:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11776:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11766:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11766:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11859:129:14",
															"nodeType": "YulBlock",
															"src": "11859:129:14",
															"statements": [
																{
																	"nativeSrc": "11874:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11874:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11888:3:14",
																		"nodeType": "YulLiteral",
																		"src": "11888:3:14",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11878:6:14",
																			"nodeType": "YulTypedName",
																			"src": "11878:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11905:73:14",
																	"nodeType": "YulAssignment",
																	"src": "11905:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11950:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11950:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11961:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11961:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11946:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "11946:3:14"
																				},
																				"nativeSrc": "11946:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "11946:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11970:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "11970:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "11915:30:14",
																			"nodeType": "YulIdentifier",
																			"src": "11915:30:14"
																		},
																		"nativeSrc": "11915:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11915:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11905:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "11905:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11998:128:14",
															"nodeType": "YulBlock",
															"src": "11998:128:14",
															"statements": [
																{
																	"nativeSrc": "12013:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12013:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12027:3:14",
																		"nodeType": "YulLiteral",
																		"src": "12027:3:14",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12017:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12017:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12044:72:14",
																	"nodeType": "YulAssignment",
																	"src": "12044:72:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12088:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12088:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12099:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12099:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12084:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12084:3:14"
																				},
																				"nativeSrc": "12084:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12084:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12108:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12108:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "12054:29:14",
																			"nodeType": "YulIdentifier",
																			"src": "12054:29:14"
																		},
																		"nativeSrc": "12054:62:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12054:62:14"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "12044:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12044:6:14"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12136:127:14",
															"nodeType": "YulBlock",
															"src": "12136:127:14",
															"statements": [
																{
																	"nativeSrc": "12151:17:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12151:17:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12165:3:14",
																		"nodeType": "YulLiteral",
																		"src": "12165:3:14",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12155:6:14",
																			"nodeType": "YulTypedName",
																			"src": "12155:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12182:71:14",
																	"nodeType": "YulAssignment",
																	"src": "12182:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12225:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "12225:9:14"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12236:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "12236:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12221:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12221:3:14"
																				},
																				"nativeSrc": "12221:22:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12221:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12245:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "12245:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12192:28:14",
																			"nodeType": "YulIdentifier",
																			"src": "12192:28:14"
																		},
																		"nativeSrc": "12192:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12192:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "12182:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "12182:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nativeSrc": "10999:1271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11090:9:14",
														"nodeType": "YulTypedName",
														"src": "11090:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11101:7:14",
														"nodeType": "YulTypedName",
														"src": "11101:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11113:6:14",
														"nodeType": "YulTypedName",
														"src": "11113:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11121:6:14",
														"nodeType": "YulTypedName",
														"src": "11121:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11129:6:14",
														"nodeType": "YulTypedName",
														"src": "11129:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11137:6:14",
														"nodeType": "YulTypedName",
														"src": "11137:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "11145:6:14",
														"nodeType": "YulTypedName",
														"src": "11145:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "11153:6:14",
														"nodeType": "YulTypedName",
														"src": "11153:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "11161:6:14",
														"nodeType": "YulTypedName",
														"src": "11161:6:14",
														"type": ""
													}
												],
												"src": "10999:1271:14"
											},
											{
												"body": {
													"nativeSrc": "12331:53:14",
													"nodeType": "YulBlock",
													"src": "12331:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12348:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12348:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12371:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12371:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12353:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "12353:17:14"
																		},
																		"nativeSrc": "12353:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12353:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12341:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12341:6:14"
																},
																"nativeSrc": "12341:37:14",
																"nodeType": "YulFunctionCall",
																"src": "12341:37:14"
															},
															"nativeSrc": "12341:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "12341:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "12276:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12319:5:14",
														"nodeType": "YulTypedName",
														"src": "12319:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12326:3:14",
														"nodeType": "YulTypedName",
														"src": "12326:3:14",
														"type": ""
													}
												],
												"src": "12276:108:14"
											},
											{
												"body": {
													"nativeSrc": "12443:52:14",
													"nodeType": "YulBlock",
													"src": "12443:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12460:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12460:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12482:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12482:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "12465:16:14",
																			"nodeType": "YulIdentifier",
																			"src": "12465:16:14"
																		},
																		"nativeSrc": "12465:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12465:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12453:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12453:6:14"
																},
																"nativeSrc": "12453:36:14",
																"nodeType": "YulFunctionCall",
																"src": "12453:36:14"
															},
															"nativeSrc": "12453:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "12453:36:14"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "12390:105:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12431:5:14",
														"nodeType": "YulTypedName",
														"src": "12431:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12438:3:14",
														"nodeType": "YulTypedName",
														"src": "12438:3:14",
														"type": ""
													}
												],
												"src": "12390:105:14"
											},
											{
												"body": {
													"nativeSrc": "12556:53:14",
													"nodeType": "YulBlock",
													"src": "12556:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12573:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12573:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12596:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12596:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12578:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "12578:17:14"
																		},
																		"nativeSrc": "12578:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12578:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12566:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12566:6:14"
																},
																"nativeSrc": "12566:37:14",
																"nodeType": "YulFunctionCall",
																"src": "12566:37:14"
															},
															"nativeSrc": "12566:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "12566:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "12501:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12544:5:14",
														"nodeType": "YulTypedName",
														"src": "12544:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12551:3:14",
														"nodeType": "YulTypedName",
														"src": "12551:3:14",
														"type": ""
													}
												],
												"src": "12501:108:14"
											},
											{
												"body": {
													"nativeSrc": "12670:53:14",
													"nodeType": "YulBlock",
													"src": "12670:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12687:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12687:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12710:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "12710:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "12692:17:14",
																			"nodeType": "YulIdentifier",
																			"src": "12692:17:14"
																		},
																		"nativeSrc": "12692:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12692:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12680:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "12680:6:14"
																},
																"nativeSrc": "12680:37:14",
																"nodeType": "YulFunctionCall",
																"src": "12680:37:14"
															},
															"nativeSrc": "12680:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "12680:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "12615:108:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12658:5:14",
														"nodeType": "YulTypedName",
														"src": "12658:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12665:3:14",
														"nodeType": "YulTypedName",
														"src": "12665:3:14",
														"type": ""
													}
												],
												"src": "12615:108:14"
											},
											{
												"body": {
													"nativeSrc": "12975:1299:14",
													"nodeType": "YulBlock",
													"src": "12975:1299:14",
													"statements": [
														{
															"nativeSrc": "12985:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12985:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13001:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "13001:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13006:4:14",
																		"nodeType": "YulLiteral",
																		"src": "13006:4:14",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12997:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "12997:3:14"
																},
																"nativeSrc": "12997:14:14",
																"nodeType": "YulFunctionCall",
																"src": "12997:14:14"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "12989:4:14",
																	"nodeType": "YulTypedName",
																	"src": "12989:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13021:167:14",
															"nodeType": "YulBlock",
															"src": "13021:167:14",
															"statements": [
																{
																	"nativeSrc": "13059:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13059:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13089:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13089:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13096:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13096:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13085:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13085:3:14"
																				},
																				"nativeSrc": "13085:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13085:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13079:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13079:5:14"
																		},
																		"nativeSrc": "13079:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13079:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13063:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13063:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13149:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "13149:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13167:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13167:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13172:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13172:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13163:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13163:3:14"
																				},
																				"nativeSrc": "13163:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13163:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "13115:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "13115:33:14"
																		},
																		"nativeSrc": "13115:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13115:63:14"
																	},
																	"nativeSrc": "13115:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "13115:63:14"
																}
															]
														},
														{
															"nativeSrc": "13198:168:14",
															"nodeType": "YulBlock",
															"src": "13198:168:14",
															"statements": [
																{
																	"nativeSrc": "13237:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13237:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13267:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13267:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13274:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13274:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13263:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13263:3:14"
																				},
																				"nativeSrc": "13263:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13263:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13257:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13257:5:14"
																		},
																		"nativeSrc": "13257:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13257:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13241:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13241:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13327:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "13327:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13345:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13345:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13350:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13350:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13341:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13341:3:14"
																				},
																				"nativeSrc": "13341:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13341:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "13293:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "13293:33:14"
																		},
																		"nativeSrc": "13293:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13293:63:14"
																	},
																	"nativeSrc": "13293:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "13293:63:14"
																}
															]
														},
														{
															"nativeSrc": "13376:161:14",
															"nodeType": "YulBlock",
															"src": "13376:161:14",
															"statements": [
																{
																	"nativeSrc": "13410:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13410:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13440:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13440:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13447:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13447:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13436:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13436:3:14"
																				},
																				"nativeSrc": "13436:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13436:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13430:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13430:5:14"
																		},
																		"nativeSrc": "13430:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13430:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13414:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13414:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13498:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "13498:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13516:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13516:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13521:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13521:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13512:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13512:3:14"
																				},
																				"nativeSrc": "13512:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13512:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "13466:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "13466:31:14"
																		},
																		"nativeSrc": "13466:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13466:61:14"
																	},
																	"nativeSrc": "13466:61:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "13466:61:14"
																}
															]
														},
														{
															"nativeSrc": "13547:169:14",
															"nodeType": "YulBlock",
															"src": "13547:169:14",
															"statements": [
																{
																	"nativeSrc": "13587:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13587:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13617:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13617:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13624:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13624:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13613:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13613:3:14"
																				},
																				"nativeSrc": "13613:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13613:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13607:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13607:5:14"
																		},
																		"nativeSrc": "13607:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13607:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13591:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13591:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13677:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "13677:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13695:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13695:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13700:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13700:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13691:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13691:3:14"
																				},
																				"nativeSrc": "13691:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13691:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "13643:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "13643:33:14"
																		},
																		"nativeSrc": "13643:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13643:63:14"
																	},
																	"nativeSrc": "13643:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "13643:63:14"
																}
															]
														},
														{
															"nativeSrc": "13726:169:14",
															"nodeType": "YulBlock",
															"src": "13726:169:14",
															"statements": [
																{
																	"nativeSrc": "13766:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13766:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13796:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13796:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13803:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13803:4:14",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13792:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13792:3:14"
																				},
																				"nativeSrc": "13792:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13792:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13786:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13786:5:14"
																		},
																		"nativeSrc": "13786:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13786:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13770:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13770:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "13856:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "13856:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "13874:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13874:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13879:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13879:4:14",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13870:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13870:3:14"
																				},
																				"nativeSrc": "13870:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13870:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "13822:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "13822:33:14"
																		},
																		"nativeSrc": "13822:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13822:63:14"
																	},
																	"nativeSrc": "13822:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "13822:63:14"
																}
															]
														},
														{
															"nativeSrc": "13905:175:14",
															"nodeType": "YulBlock",
															"src": "13905:175:14",
															"statements": [
																{
																	"nativeSrc": "13951:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13951:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13981:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "13981:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13988:4:14",
																						"nodeType": "YulLiteral",
																						"src": "13988:4:14",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13977:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "13977:3:14"
																				},
																				"nativeSrc": "13977:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "13977:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "13971:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "13971:5:14"
																		},
																		"nativeSrc": "13971:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "13971:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "13955:12:14",
																			"nodeType": "YulTypedName",
																			"src": "13955:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14041:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "14041:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14059:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "14059:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14064:4:14",
																						"nodeType": "YulLiteral",
																						"src": "14064:4:14",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14055:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14055:3:14"
																				},
																				"nativeSrc": "14055:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14055:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "14007:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "14007:33:14"
																		},
																		"nativeSrc": "14007:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14007:63:14"
																	},
																	"nativeSrc": "14007:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "14007:63:14"
																}
															]
														},
														{
															"nativeSrc": "14090:177:14",
															"nodeType": "YulBlock",
															"src": "14090:177:14",
															"statements": [
																{
																	"nativeSrc": "14138:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14138:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14168:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "14168:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14175:4:14",
																						"nodeType": "YulLiteral",
																						"src": "14175:4:14",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14164:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14164:3:14"
																				},
																				"nativeSrc": "14164:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14164:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "14158:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "14158:5:14"
																		},
																		"nativeSrc": "14158:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14158:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14142:12:14",
																			"nodeType": "YulTypedName",
																			"src": "14142:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "14228:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "14228:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "14246:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "14246:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14251:4:14",
																						"nodeType": "YulLiteral",
																						"src": "14251:4:14",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14242:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "14242:3:14"
																				},
																				"nativeSrc": "14242:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "14242:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "14194:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "14194:33:14"
																		},
																		"nativeSrc": "14194:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14194:63:14"
																	},
																	"nativeSrc": "14194:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "14194:63:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactOutputSingleParams_$875_memory_ptr_to_t_struct$_ExactOutputSingleParams_$875_memory_ptr_fromStack",
												"nativeSrc": "12829:1445:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12962:5:14",
														"nodeType": "YulTypedName",
														"src": "12962:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12969:3:14",
														"nodeType": "YulTypedName",
														"src": "12969:3:14",
														"type": ""
													}
												],
												"src": "12829:1445:14"
											},
											{
												"body": {
													"nativeSrc": "14458:205:14",
													"nodeType": "YulBlock",
													"src": "14458:205:14",
													"statements": [
														{
															"nativeSrc": "14468:27:14",
															"nodeType": "YulAssignment",
															"src": "14468:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14480:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14480:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14491:3:14",
																		"nodeType": "YulLiteral",
																		"src": "14491:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14476:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14476:3:14"
																},
																"nativeSrc": "14476:19:14",
																"nodeType": "YulFunctionCall",
																"src": "14476:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14468:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14468:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14629:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14629:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14642:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14653:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14653:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14638:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:14"
																		},
																		"nativeSrc": "14638:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14638:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactOutputSingleParams_$875_memory_ptr_to_t_struct$_ExactOutputSingleParams_$875_memory_ptr_fromStack",
																	"nativeSrc": "14505:123:14",
																	"nodeType": "YulIdentifier",
																	"src": "14505:123:14"
																},
																"nativeSrc": "14505:151:14",
																"nodeType": "YulFunctionCall",
																"src": "14505:151:14"
															},
															"nativeSrc": "14505:151:14",
															"nodeType": "YulExpressionStatement",
															"src": "14505:151:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$875_memory_ptr__to_t_struct$_ExactOutputSingleParams_$875_memory_ptr__fromStack_reversed",
												"nativeSrc": "14280:383:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14430:9:14",
														"nodeType": "YulTypedName",
														"src": "14430:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14442:6:14",
														"nodeType": "YulTypedName",
														"src": "14442:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14453:4:14",
														"nodeType": "YulTypedName",
														"src": "14453:4:14",
														"type": ""
													}
												],
												"src": "14280:383:14"
											},
											{
												"body": {
													"nativeSrc": "14911:1299:14",
													"nodeType": "YulBlock",
													"src": "14911:1299:14",
													"statements": [
														{
															"nativeSrc": "14921:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "14921:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14937:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "14937:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14942:4:14",
																		"nodeType": "YulLiteral",
																		"src": "14942:4:14",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14933:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14933:3:14"
																},
																"nativeSrc": "14933:14:14",
																"nodeType": "YulFunctionCall",
																"src": "14933:14:14"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "14925:4:14",
																	"nodeType": "YulTypedName",
																	"src": "14925:4:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14957:167:14",
															"nodeType": "YulBlock",
															"src": "14957:167:14",
															"statements": [
																{
																	"nativeSrc": "14995:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14995:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15025:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15025:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15032:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15032:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15021:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15021:3:14"
																				},
																				"nativeSrc": "15021:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15021:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15015:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15015:5:14"
																		},
																		"nativeSrc": "15015:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15015:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "14999:12:14",
																			"nodeType": "YulTypedName",
																			"src": "14999:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15085:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15085:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15103:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15103:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15108:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15108:4:14",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15099:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15099:3:14"
																				},
																				"nativeSrc": "15099:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15099:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "15051:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "15051:33:14"
																		},
																		"nativeSrc": "15051:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15051:63:14"
																	},
																	"nativeSrc": "15051:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15051:63:14"
																}
															]
														},
														{
															"nativeSrc": "15134:168:14",
															"nodeType": "YulBlock",
															"src": "15134:168:14",
															"statements": [
																{
																	"nativeSrc": "15173:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15173:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15203:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15203:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15210:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15210:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15199:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15199:3:14"
																				},
																				"nativeSrc": "15199:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15199:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15193:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15193:5:14"
																		},
																		"nativeSrc": "15193:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15193:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15177:12:14",
																			"nodeType": "YulTypedName",
																			"src": "15177:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15263:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15263:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15281:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15281:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15286:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15286:4:14",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15277:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15277:3:14"
																				},
																				"nativeSrc": "15277:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15277:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "15229:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "15229:33:14"
																		},
																		"nativeSrc": "15229:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15229:63:14"
																	},
																	"nativeSrc": "15229:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15229:63:14"
																}
															]
														},
														{
															"nativeSrc": "15312:161:14",
															"nodeType": "YulBlock",
															"src": "15312:161:14",
															"statements": [
																{
																	"nativeSrc": "15346:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15346:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15376:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15376:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15383:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15383:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15372:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15372:3:14"
																				},
																				"nativeSrc": "15372:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15372:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15366:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15366:5:14"
																		},
																		"nativeSrc": "15366:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15366:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15350:12:14",
																			"nodeType": "YulTypedName",
																			"src": "15350:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15434:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15434:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15452:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15452:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15457:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15457:4:14",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15448:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15448:3:14"
																				},
																				"nativeSrc": "15448:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15448:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "15402:31:14",
																			"nodeType": "YulIdentifier",
																			"src": "15402:31:14"
																		},
																		"nativeSrc": "15402:61:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15402:61:14"
																	},
																	"nativeSrc": "15402:61:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15402:61:14"
																}
															]
														},
														{
															"nativeSrc": "15483:169:14",
															"nodeType": "YulBlock",
															"src": "15483:169:14",
															"statements": [
																{
																	"nativeSrc": "15523:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15523:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15553:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15553:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15560:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15560:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15549:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15549:3:14"
																				},
																				"nativeSrc": "15549:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15549:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15543:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15543:5:14"
																		},
																		"nativeSrc": "15543:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15543:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15527:12:14",
																			"nodeType": "YulTypedName",
																			"src": "15527:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15613:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15613:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15631:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15631:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15636:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15636:4:14",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15627:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15627:3:14"
																				},
																				"nativeSrc": "15627:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15627:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "15579:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "15579:33:14"
																		},
																		"nativeSrc": "15579:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15579:63:14"
																	},
																	"nativeSrc": "15579:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15579:63:14"
																}
															]
														},
														{
															"nativeSrc": "15662:168:14",
															"nodeType": "YulBlock",
															"src": "15662:168:14",
															"statements": [
																{
																	"nativeSrc": "15701:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15701:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15731:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15731:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15738:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15738:4:14",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15727:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15727:3:14"
																				},
																				"nativeSrc": "15727:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15727:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15721:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15721:5:14"
																		},
																		"nativeSrc": "15721:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15721:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15705:12:14",
																			"nodeType": "YulTypedName",
																			"src": "15705:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15791:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15791:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15809:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15809:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15814:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15814:4:14",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15805:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15805:3:14"
																				},
																				"nativeSrc": "15805:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15805:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "15757:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "15757:33:14"
																		},
																		"nativeSrc": "15757:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15757:63:14"
																	},
																	"nativeSrc": "15757:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15757:63:14"
																}
															]
														},
														{
															"nativeSrc": "15840:176:14",
															"nodeType": "YulBlock",
															"src": "15840:176:14",
															"statements": [
																{
																	"nativeSrc": "15887:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15887:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15917:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "15917:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15924:4:14",
																						"nodeType": "YulLiteral",
																						"src": "15924:4:14",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15913:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15913:3:14"
																				},
																				"nativeSrc": "15913:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15913:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "15907:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "15907:5:14"
																		},
																		"nativeSrc": "15907:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15907:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "15891:12:14",
																			"nodeType": "YulTypedName",
																			"src": "15891:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "15977:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "15977:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "15995:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "15995:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16000:4:14",
																						"nodeType": "YulLiteral",
																						"src": "16000:4:14",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15991:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "15991:3:14"
																				},
																				"nativeSrc": "15991:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "15991:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "15943:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "15943:33:14"
																		},
																		"nativeSrc": "15943:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15943:63:14"
																	},
																	"nativeSrc": "15943:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "15943:63:14"
																}
															]
														},
														{
															"nativeSrc": "16026:177:14",
															"nodeType": "YulBlock",
															"src": "16026:177:14",
															"statements": [
																{
																	"nativeSrc": "16074:43:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16074:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16104:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "16104:5:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16111:4:14",
																						"nodeType": "YulLiteral",
																						"src": "16111:4:14",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16100:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16100:3:14"
																				},
																				"nativeSrc": "16100:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16100:16:14"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "16094:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "16094:5:14"
																		},
																		"nativeSrc": "16094:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16094:23:14"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "16078:12:14",
																			"nodeType": "YulTypedName",
																			"src": "16078:12:14",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "16164:12:14",
																				"nodeType": "YulIdentifier",
																				"src": "16164:12:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "16182:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "16182:3:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16187:4:14",
																						"nodeType": "YulLiteral",
																						"src": "16187:4:14",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16178:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "16178:3:14"
																				},
																				"nativeSrc": "16178:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "16178:14:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "16130:33:14",
																			"nodeType": "YulIdentifier",
																			"src": "16130:33:14"
																		},
																		"nativeSrc": "16130:63:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16130:63:14"
																	},
																	"nativeSrc": "16130:63:14",
																	"nodeType": "YulExpressionStatement",
																	"src": "16130:63:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$833_memory_ptr_to_t_struct$_ExactInputSingleParams_$833_memory_ptr_fromStack",
												"nativeSrc": "14767:1443:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14898:5:14",
														"nodeType": "YulTypedName",
														"src": "14898:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14905:3:14",
														"nodeType": "YulTypedName",
														"src": "14905:3:14",
														"type": ""
													}
												],
												"src": "14767:1443:14"
											},
											{
												"body": {
													"nativeSrc": "16392:203:14",
													"nodeType": "YulBlock",
													"src": "16392:203:14",
													"statements": [
														{
															"nativeSrc": "16402:27:14",
															"nodeType": "YulAssignment",
															"src": "16402:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16414:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16414:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16425:3:14",
																		"nodeType": "YulLiteral",
																		"src": "16425:3:14",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16410:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16410:3:14"
																},
																"nativeSrc": "16410:19:14",
																"nodeType": "YulFunctionCall",
																"src": "16410:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16402:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16402:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16561:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16561:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16574:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16574:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16585:1:14",
																				"nodeType": "YulLiteral",
																				"src": "16585:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16570:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16570:3:14"
																		},
																		"nativeSrc": "16570:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16570:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$833_memory_ptr_to_t_struct$_ExactInputSingleParams_$833_memory_ptr_fromStack",
																	"nativeSrc": "16439:121:14",
																	"nodeType": "YulIdentifier",
																	"src": "16439:121:14"
																},
																"nativeSrc": "16439:149:14",
																"nodeType": "YulFunctionCall",
																"src": "16439:149:14"
															},
															"nativeSrc": "16439:149:14",
															"nodeType": "YulExpressionStatement",
															"src": "16439:149:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$833_memory_ptr__to_t_struct$_ExactInputSingleParams_$833_memory_ptr__fromStack_reversed",
												"nativeSrc": "16216:379:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16364:9:14",
														"nodeType": "YulTypedName",
														"src": "16364:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16376:6:14",
														"nodeType": "YulTypedName",
														"src": "16376:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16387:4:14",
														"nodeType": "YulTypedName",
														"src": "16387:4:14",
														"type": ""
													}
												],
												"src": "16216:379:14"
											},
											{
												"body": {
													"nativeSrc": "16659:40:14",
													"nodeType": "YulBlock",
													"src": "16659:40:14",
													"statements": [
														{
															"nativeSrc": "16670:22:14",
															"nodeType": "YulAssignment",
															"src": "16670:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16686:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "16686:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16680:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16680:5:14"
																},
																"nativeSrc": "16680:12:14",
																"nodeType": "YulFunctionCall",
																"src": "16680:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16670:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16670:6:14"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "16601:98:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16642:5:14",
														"nodeType": "YulTypedName",
														"src": "16642:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16652:6:14",
														"nodeType": "YulTypedName",
														"src": "16652:6:14",
														"type": ""
													}
												],
												"src": "16601:98:14"
											},
											{
												"body": {
													"nativeSrc": "16818:34:14",
													"nodeType": "YulBlock",
													"src": "16818:34:14",
													"statements": [
														{
															"nativeSrc": "16828:18:14",
															"nodeType": "YulAssignment",
															"src": "16828:18:14",
															"value": {
																"name": "pos",
																"nativeSrc": "16843:3:14",
																"nodeType": "YulIdentifier",
																"src": "16843:3:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16828:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "16828:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16705:147:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16790:3:14",
														"nodeType": "YulTypedName",
														"src": "16790:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16795:6:14",
														"nodeType": "YulTypedName",
														"src": "16795:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16806:11:14",
														"nodeType": "YulTypedName",
														"src": "16806:11:14",
														"type": ""
													}
												],
												"src": "16705:147:14"
											},
											{
												"body": {
													"nativeSrc": "16920:77:14",
													"nodeType": "YulBlock",
													"src": "16920:77:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "16937:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16937:3:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "16942:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "16942:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16947:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16947:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "16931:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "16931:5:14"
																},
																"nativeSrc": "16931:23:14",
																"nodeType": "YulFunctionCall",
																"src": "16931:23:14"
															},
															"nativeSrc": "16931:23:14",
															"nodeType": "YulExpressionStatement",
															"src": "16931:23:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "16974:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "16974:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "16979:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16979:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16970:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16970:3:14"
																		},
																		"nativeSrc": "16970:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16970:16:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16988:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16988:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16963:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16963:6:14"
																},
																"nativeSrc": "16963:27:14",
																"nodeType": "YulFunctionCall",
																"src": "16963:27:14"
															},
															"nativeSrc": "16963:27:14",
															"nodeType": "YulExpressionStatement",
															"src": "16963:27:14"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "16858:139:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "16902:3:14",
														"nodeType": "YulTypedName",
														"src": "16902:3:14",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "16907:3:14",
														"nodeType": "YulTypedName",
														"src": "16907:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16912:6:14",
														"nodeType": "YulTypedName",
														"src": "16912:6:14",
														"type": ""
													}
												],
												"src": "16858:139:14"
											},
											{
												"body": {
													"nativeSrc": "17111:278:14",
													"nodeType": "YulBlock",
													"src": "17111:278:14",
													"statements": [
														{
															"nativeSrc": "17121:52:14",
															"nodeType": "YulVariableDeclaration",
															"src": "17121:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17167:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "17167:5:14"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "17135:31:14",
																	"nodeType": "YulIdentifier",
																	"src": "17135:31:14"
																},
																"nativeSrc": "17135:38:14",
																"nodeType": "YulFunctionCall",
																"src": "17135:38:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "17125:6:14",
																	"nodeType": "YulTypedName",
																	"src": "17125:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17182:95:14",
															"nodeType": "YulAssignment",
															"src": "17182:95:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17265:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17265:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17270:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17270:6:14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17189:75:14",
																	"nodeType": "YulIdentifier",
																	"src": "17189:75:14"
																},
																"nativeSrc": "17189:88:14",
																"nodeType": "YulFunctionCall",
																"src": "17189:88:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17182:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17182:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17325:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "17325:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17332:4:14",
																				"nodeType": "YulLiteral",
																				"src": "17332:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17321:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17321:3:14"
																		},
																		"nativeSrc": "17321:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17321:16:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17339:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17339:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17344:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17344:6:14"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "17286:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "17286:34:14"
																},
																"nativeSrc": "17286:65:14",
																"nodeType": "YulFunctionCall",
																"src": "17286:65:14"
															},
															"nativeSrc": "17286:65:14",
															"nodeType": "YulExpressionStatement",
															"src": "17286:65:14"
														},
														{
															"nativeSrc": "17360:23:14",
															"nodeType": "YulAssignment",
															"src": "17360:23:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17371:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17371:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17376:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17376:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17367:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17367:3:14"
																},
																"nativeSrc": "17367:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17367:16:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17360:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17360:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "17003:386:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17092:5:14",
														"nodeType": "YulTypedName",
														"src": "17092:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "17099:3:14",
														"nodeType": "YulTypedName",
														"src": "17099:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17107:3:14",
														"nodeType": "YulTypedName",
														"src": "17107:3:14",
														"type": ""
													}
												],
												"src": "17003:386:14"
											},
											{
												"body": {
													"nativeSrc": "17529:137:14",
													"nodeType": "YulBlock",
													"src": "17529:137:14",
													"statements": [
														{
															"nativeSrc": "17540:100:14",
															"nodeType": "YulAssignment",
															"src": "17540:100:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17627:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17627:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17636:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17636:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "17547:79:14",
																	"nodeType": "YulIdentifier",
																	"src": "17547:79:14"
																},
																"nativeSrc": "17547:93:14",
																"nodeType": "YulFunctionCall",
																"src": "17547:93:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17540:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17540:3:14"
																}
															]
														},
														{
															"nativeSrc": "17650:10:14",
															"nodeType": "YulAssignment",
															"src": "17650:10:14",
															"value": {
																"name": "pos",
																"nativeSrc": "17657:3:14",
																"nodeType": "YulIdentifier",
																"src": "17657:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17650:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17650:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17395:271:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17508:3:14",
														"nodeType": "YulTypedName",
														"src": "17508:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17514:6:14",
														"nodeType": "YulTypedName",
														"src": "17514:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17525:3:14",
														"nodeType": "YulTypedName",
														"src": "17525:3:14",
														"type": ""
													}
												],
												"src": "17395:271:14"
											},
											{
												"body": {
													"nativeSrc": "17768:73:14",
													"nodeType": "YulBlock",
													"src": "17768:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17785:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17785:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "17790:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17790:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17778:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17778:6:14"
																},
																"nativeSrc": "17778:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17778:19:14"
															},
															"nativeSrc": "17778:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "17778:19:14"
														},
														{
															"nativeSrc": "17806:29:14",
															"nodeType": "YulAssignment",
															"src": "17806:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17825:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "17825:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17830:4:14",
																		"nodeType": "YulLiteral",
																		"src": "17830:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17821:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17821:3:14"
																},
																"nativeSrc": "17821:14:14",
																"nodeType": "YulFunctionCall",
																"src": "17821:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "17806:11:14",
																	"nodeType": "YulIdentifier",
																	"src": "17806:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "17672:169:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17740:3:14",
														"nodeType": "YulTypedName",
														"src": "17740:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "17745:6:14",
														"nodeType": "YulTypedName",
														"src": "17745:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "17756:11:14",
														"nodeType": "YulTypedName",
														"src": "17756:11:14",
														"type": ""
													}
												],
												"src": "17672:169:14"
											},
											{
												"body": {
													"nativeSrc": "17953:46:14",
													"nodeType": "YulBlock",
													"src": "17953:46:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17975:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17975:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17983:1:14",
																				"nodeType": "YulLiteral",
																				"src": "17983:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17971:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17971:3:14"
																		},
																		"nativeSrc": "17971:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17971:14:14"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nativeSrc": "17987:4:14",
																		"nodeType": "YulLiteral",
																		"src": "17987:4:14",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17964:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17964:6:14"
																},
																"nativeSrc": "17964:28:14",
																"nodeType": "YulFunctionCall",
																"src": "17964:28:14"
															},
															"nativeSrc": "17964:28:14",
															"nodeType": "YulExpressionStatement",
															"src": "17964:28:14"
														}
													]
												},
												"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
												"nativeSrc": "17847:152:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17945:6:14",
														"nodeType": "YulTypedName",
														"src": "17945:6:14",
														"type": ""
													}
												],
												"src": "17847:152:14"
											},
											{
												"body": {
													"nativeSrc": "18151:219:14",
													"nodeType": "YulBlock",
													"src": "18151:219:14",
													"statements": [
														{
															"nativeSrc": "18161:73:14",
															"nodeType": "YulAssignment",
															"src": "18161:73:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18227:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18227:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18232:1:14",
																		"nodeType": "YulLiteral",
																		"src": "18232:1:14",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18168:58:14",
																	"nodeType": "YulIdentifier",
																	"src": "18168:58:14"
																},
																"nativeSrc": "18168:66:14",
																"nodeType": "YulFunctionCall",
																"src": "18168:66:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18161:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18161:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18332:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18332:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																	"nativeSrc": "18243:88:14",
																	"nodeType": "YulIdentifier",
																	"src": "18243:88:14"
																},
																"nativeSrc": "18243:93:14",
																"nodeType": "YulFunctionCall",
																"src": "18243:93:14"
															},
															"nativeSrc": "18243:93:14",
															"nodeType": "YulExpressionStatement",
															"src": "18243:93:14"
														},
														{
															"nativeSrc": "18345:19:14",
															"nodeType": "YulAssignment",
															"src": "18345:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18356:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18356:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18361:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18361:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18352:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18352:3:14"
																},
																"nativeSrc": "18352:12:14",
																"nodeType": "YulFunctionCall",
																"src": "18352:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18345:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18345:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18005:365:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18139:3:14",
														"nodeType": "YulTypedName",
														"src": "18139:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18147:3:14",
														"nodeType": "YulTypedName",
														"src": "18147:3:14",
														"type": ""
													}
												],
												"src": "18005:365:14"
											},
											{
												"body": {
													"nativeSrc": "18547:248:14",
													"nodeType": "YulBlock",
													"src": "18547:248:14",
													"statements": [
														{
															"nativeSrc": "18557:26:14",
															"nodeType": "YulAssignment",
															"src": "18557:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18569:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "18569:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18580:2:14",
																		"nodeType": "YulLiteral",
																		"src": "18580:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18565:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18565:3:14"
																},
																"nativeSrc": "18565:18:14",
																"nodeType": "YulFunctionCall",
																"src": "18565:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18557:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18557:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18604:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18604:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18615:1:14",
																				"nodeType": "YulLiteral",
																				"src": "18615:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18600:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18600:3:14"
																		},
																		"nativeSrc": "18600:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18600:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18623:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "18623:4:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18629:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "18629:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18619:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "18619:3:14"
																		},
																		"nativeSrc": "18619:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "18619:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18593:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "18593:6:14"
																},
																"nativeSrc": "18593:47:14",
																"nodeType": "YulFunctionCall",
																"src": "18593:47:14"
															},
															"nativeSrc": "18593:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "18593:47:14"
														},
														{
															"nativeSrc": "18649:139:14",
															"nodeType": "YulAssignment",
															"src": "18649:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18783:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "18783:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18657:124:14",
																	"nodeType": "YulIdentifier",
																	"src": "18657:124:14"
																},
																"nativeSrc": "18657:131:14",
																"nodeType": "YulFunctionCall",
																"src": "18657:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18649:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "18649:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18376:419:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18527:9:14",
														"nodeType": "YulTypedName",
														"src": "18527:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18542:4:14",
														"nodeType": "YulTypedName",
														"src": "18542:4:14",
														"type": ""
													}
												],
												"src": "18376:419:14"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20Standard_$811(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20Standard_$811(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20Standard_$811(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20Standard_$811(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20Standard_$811(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20Standard_$811t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20Standard_$811(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20Standard_$811(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_contract$_IERC20Standard_$811(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20Standard_$811t_contract$_IERC20Standard_$811(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20Standard_$811(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20Standard_$811(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IV3SwapRouter_$903_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IV3SwapRouter_$903_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IV3SwapRouter_$903_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IV3SwapRouter_$903__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IV3SwapRouter_$903_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IUniswapV3Factory_$160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV3Factory_$160_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV3Factory_$160_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV3Factory_$160__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV3Factory_$160_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_tuple_t_uint24_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IV3SwapRouter.ExactOutputSingleParams -> struct IV3SwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$875_memory_ptr_to_t_struct$_ExactOutputSingleParams_$875_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$875_memory_ptr__to_t_struct$_ExactOutputSingleParams_$875_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$875_memory_ptr_to_t_struct$_ExactOutputSingleParams_$875_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    // struct IV3SwapRouter.ExactInputSingleParams -> struct IV3SwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$833_memory_ptr_to_t_struct$_ExactInputSingleParams_$833_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$833_memory_ptr__to_t_struct$_ExactInputSingleParams_$833_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$833_memory_ptr_to_t_struct$_ExactInputSingleParams_$833_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(memPtr) {\n\n        mstore(add(memPtr, 0), \"SA\")\n\n    }\n\n    function abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 2)\n        store_literal_in_memory_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA443276 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x72F5D98A EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8EFC0828 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA3FA08E4 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x12D JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x157 JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x89 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x84 SWAP2 SWAP1 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x181 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x278 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0xB24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD6 SWAP2 SWAP1 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x27E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x117 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0xBFC JUMP JUMPDEST PUSH2 0x625 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x124 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x138 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x141 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14E SWAP2 SWAP1 PUSH2 0xCA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16B PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0xCE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1F2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x233 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBB8 DUP2 JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D9 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x319 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST POP PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP5 DUP7 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x406 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x47D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0xF7D JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP DUP7 SWAP8 POP POP POP POP POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5023B4DF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP5 POP DUP8 DUP6 LT ISZERO PUSH2 0x619 JUMPI PUSH2 0x618 DUP7 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x650 DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH2 0x8E1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP5 DUP7 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xDE7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6CC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0xE30 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x73C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x760 SWAP2 SWAP1 PUSH2 0xE85 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x869 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88D SWAP2 SWAP1 PUSH2 0xD35 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x915 SWAP3 SWAP2 SWAP1 PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x97F SWAP2 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x9EA JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x9E9 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0xDBC JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA20 SWAP1 PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA5D DUP3 PUSH2 0xA34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA6E DUP3 PUSH2 0xA53 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7E DUP2 PUSH2 0xA64 JUMP JUMPDEST DUP2 EQ PUSH2 0xA88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA99 DUP2 PUSH2 0xA75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA8 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP2 EQ PUSH2 0xAB2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xAC3 DUP2 PUSH2 0xA9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xADF JUMPI PUSH2 0xADE PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xAEC DUP6 DUP3 DUP7 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xAFD DUP6 DUP3 DUP7 ADD PUSH2 0xAB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB1E DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB37 PUSH0 DUP4 ADD DUP5 PUSH2 0xB15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB4F DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP2 EQ PUSH2 0xB59 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB6A DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xB88 JUMPI PUSH2 0xB87 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB95 DUP8 DUP3 DUP9 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xBA6 DUP8 DUP3 DUP9 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xBB7 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xBC8 DUP8 DUP3 DUP9 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0xBDD DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBF6 PUSH0 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC13 JUMPI PUSH2 0xC12 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC20 DUP7 DUP3 DUP8 ADD PUSH2 0xB5C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC31 DUP7 DUP3 DUP8 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC42 DUP7 DUP3 DUP8 ADD PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC6F PUSH2 0xC6A PUSH2 0xC65 DUP5 PUSH2 0xA34 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xA34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC80 DUP3 PUSH2 0xC55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC91 DUP3 PUSH2 0xC76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCA1 DUP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCBA PUSH0 DUP4 ADD DUP5 PUSH2 0xC98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCCA DUP3 PUSH2 0xC76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDA DUP2 PUSH2 0xCC0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF3 PUSH0 DUP4 ADD DUP5 PUSH2 0xCD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD02 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD1B PUSH0 DUP4 ADD DUP5 PUSH2 0xCF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD2F DUP2 PUSH2 0xB46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD4A JUMPI PUSH2 0xD49 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xD57 DUP5 DUP3 DUP6 ADD PUSH2 0xD21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD73 PUSH0 DUP4 ADD DUP6 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xD80 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBD4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD9B DUP2 PUSH2 0xD87 JUMP JUMPDEST DUP2 EQ PUSH2 0xDA5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xDB6 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDD1 JUMPI PUSH2 0xDD0 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDDE DUP5 DUP3 DUP6 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xDFA PUSH0 DUP4 ADD DUP7 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xE07 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xE14 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB15 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE2A DUP2 PUSH2 0xA9F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE45 JUMPI PUSH2 0xE44 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE52 DUP5 DUP3 DUP6 ADD PUSH2 0xE1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE64 DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP2 EQ PUSH2 0xE6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xE7F DUP2 PUSH2 0xE5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9A JUMPI PUSH2 0xE99 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEA7 DUP5 DUP3 DUP6 ADD PUSH2 0xE71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEB9 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xED4 DUP2 PUSH2 0xEB0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEEF DUP2 PUSH2 0xEDA JUMP JUMPDEST DUP2 EQ PUSH2 0xEF9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF0A DUP2 PUSH2 0xEE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF26 DUP2 PUSH2 0xF10 JUMP JUMPDEST DUP2 EQ PUSH2 0xF30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF41 DUP2 PUSH2 0xF1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF5C DUP2 PUSH2 0xF47 JUMP JUMPDEST DUP2 EQ PUSH2 0xF66 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xF77 DUP2 PUSH2 0xF53 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0xA30 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA5 DUP11 DUP3 DUP12 ADD PUSH2 0xEC6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xFB6 DUP11 DUP3 DUP12 ADD PUSH2 0xEFC JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xFC7 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xFD8 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xFE9 DUP11 DUP3 DUP12 ADD PUSH2 0xF33 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xFFA DUP11 DUP3 DUP12 ADD PUSH2 0xF69 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x100B DUP11 DUP3 DUP12 ADD PUSH2 0xDA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH2 0x1023 DUP2 PUSH2 0xA53 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1032 DUP2 PUSH2 0xB07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1041 DUP2 PUSH2 0xB3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1050 DUP2 PUSH2 0xA34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x106A PUSH0 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x107D PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1090 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1029 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x10A3 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x10B6 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x10C9 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x10DC PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1047 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1056 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x110F PUSH0 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1122 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1135 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1029 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1148 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x101A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x115B PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x116E PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1038 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1181 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1047 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x119A PUSH0 DUP4 ADD DUP5 PUSH2 0x10FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11CC DUP3 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x11D6 DUP2 DUP6 PUSH2 0x11AA JUMP JUMPDEST SWAP4 POP PUSH2 0x11E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B4 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x11FD DUP3 DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x124C PUSH1 0x2 DUP4 PUSH2 0x1208 JUMP JUMPDEST SWAP2 POP PUSH2 0x1257 DUP3 PUSH2 0x1218 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1279 DUP2 PUSH2 0x1240 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 PUSH10 0x197CB61BA66BCBC1D5BF CHAINID 0x4E SIGNEXTEND MOD GAS 0x2B 0x4B 0xFC 0x25 0xFB 0xC 0xBD MSTORE8 PUSH0 0x28 EQ DUP16 BASEFEE JUMP EXTCODESIZE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "393:5266:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5463:159;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;544:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1342:2134;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3482:1975;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;439:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;587:104;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5463:159;5546:12;:20;;;5567:8;5577:12;:22;;;5608:4;5577:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5546:69;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5463:159;;:::o;544:37::-;577:4;544:37;:::o;1342:2134::-;1521:16;1765:12;:20;;;1794:10;;;;;;;;;;1807:15;1765:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1834:12;1849:7;;;;;;;;;;;:15;;;1886:12;1921:10;577:4;1849:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1834:129;;1974:10;2002:4;1987:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1974:39;;2024:25;2091:20;2129:10;2157:23;2198:29;2245:33;2296:17;2331:13;2376:4;2361:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2073:316;;;;;;;;;;;;;;2423:12;2403:32;;2059:387;;;;;;;2456:51;2510:352;;;;;;;;2596:12;2510:352;;;;;;2645:10;2510:352;;;;;;2679:3;2510:352;;;;;;2711:10;2510:352;;;;;;2750:9;2510:352;;;;2794:15;2510:352;;;;2846:1;2510:352;;;;;2456:406;;2986:10;;;;;;;;;;:28;;;3015:6;2986:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2975:47;;3293:15;3282:8;:26;3278:192;;;3324:135;3376:12;3415:10;;;;;;;;;;3444:1;3324:26;:135::i;:::-;3278:192;1539:1937;;;;1342:2134;;;;;;:::o;3482:1975::-;3626:17;4114:126;4162:12;4197:10;;;;;;;;;;4222:8;4114:26;:126::i;:::-;4251:12;4266:7;;;;;;;;;;;:15;;;4303:12;4338:10;577:4;4266:114;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4251:129;;4391:10;4419:4;4404:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4391:39;;4901:50;4954:336;;;;;;;;5039:12;4954:336;;;;;;5088:10;4954:336;;;;;;5122:3;4954:336;;;;;;5154:10;4954:336;;;;;;5192:8;4954:336;;;;5236:1;4954:336;;;;5274:1;4954:336;;;;;4901:389;;5415:10;;;;;;;;;;:27;;;5443:6;5415:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5403:47;;3645:1812;;;3482:1975;;;;;:::o;439:99::-;;;;;;;;;;;;:::o;587:104::-;;;;;;;;;;;;;:::o;1873:307:10:-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2121:44;2109:57;2101:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1975:205;;1873:307;;;:::o;88:117:14:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:118::-;627:7;656:24;674:5;656:24;:::i;:::-;645:35;;568:118;;;:::o;692:166::-;787:46;827:5;787:46;:::i;:::-;780:5;777:57;767:85;;848:1;845;838:12;767:85;692:166;:::o;864:183::-;932:5;970:6;957:20;948:29;;986:55;1035:5;986:55;:::i;:::-;864:183;;;;:::o;1053:122::-;1126:24;1144:5;1126:24;:::i;:::-;1119:5;1116:35;1106:63;;1165:1;1162;1155:12;1106:63;1053:122;:::o;1181:139::-;1227:5;1265:6;1252:20;1243:29;;1281:33;1308:5;1281:33;:::i;:::-;1181:139;;;;:::o;1326:518::-;1416:6;1424;1473:2;1461:9;1452:7;1448:23;1444:32;1441:119;;;1479:79;;:::i;:::-;1441:119;1599:1;1624:75;1691:7;1682:6;1671:9;1667:22;1624:75;:::i;:::-;1614:85;;1570:139;1748:2;1774:53;1819:7;1810:6;1799:9;1795:22;1774:53;:::i;:::-;1764:63;;1719:118;1326:518;;;;;:::o;1850:91::-;1886:7;1926:8;1919:5;1915:20;1904:31;;1850:91;;;:::o;1947:115::-;2032:23;2049:5;2032:23;:::i;:::-;2027:3;2020:36;1947:115;;:::o;2068:218::-;2159:4;2197:2;2186:9;2182:18;2174:26;;2210:69;2276:1;2265:9;2261:17;2252:6;2210:69;:::i;:::-;2068:218;;;;:::o;2292:77::-;2329:7;2358:5;2347:16;;2292:77;;;:::o;2375:122::-;2448:24;2466:5;2448:24;:::i;:::-;2441:5;2438:35;2428:63;;2487:1;2484;2477:12;2428:63;2375:122;:::o;2503:139::-;2549:5;2587:6;2574:20;2565:29;;2603:33;2630:5;2603:33;:::i;:::-;2503:139;;;;:::o;2648:853::-;2778:6;2786;2794;2802;2851:3;2839:9;2830:7;2826:23;2822:33;2819:120;;;2858:79;;:::i;:::-;2819:120;2978:1;3003:53;3048:7;3039:6;3028:9;3024:22;3003:53;:::i;:::-;2993:63;;2949:117;3105:2;3131:53;3176:7;3167:6;3156:9;3152:22;3131:53;:::i;:::-;3121:63;;3076:118;3233:2;3259:75;3326:7;3317:6;3306:9;3302:22;3259:75;:::i;:::-;3249:85;;3204:140;3383:2;3409:75;3476:7;3467:6;3456:9;3452:22;3409:75;:::i;:::-;3399:85;;3354:140;2648:853;;;;;;;:::o;3507:118::-;3594:24;3612:5;3594:24;:::i;:::-;3589:3;3582:37;3507:118;;:::o;3631:222::-;3724:4;3762:2;3751:9;3747:18;3739:26;;3775:71;3843:1;3832:9;3828:17;3819:6;3775:71;:::i;:::-;3631:222;;;;:::o;3859:707::-;3980:6;3988;3996;4045:2;4033:9;4024:7;4020:23;4016:32;4013:119;;;4051:79;;:::i;:::-;4013:119;4171:1;4196:53;4241:7;4232:6;4221:9;4217:22;4196:53;:::i;:::-;4186:63;;4142:117;4298:2;4324:75;4391:7;4382:6;4371:9;4367:22;4324:75;:::i;:::-;4314:85;;4269:140;4448:2;4474:75;4541:7;4532:6;4521:9;4517:22;4474:75;:::i;:::-;4464:85;;4419:140;3859:707;;;;;:::o;4572:60::-;4600:3;4621:5;4614:12;;4572:60;;;:::o;4638:142::-;4688:9;4721:53;4739:34;4748:24;4766:5;4748:24;:::i;:::-;4739:34;:::i;:::-;4721:53;:::i;:::-;4708:66;;4638:142;;;:::o;4786:126::-;4836:9;4869:37;4900:5;4869:37;:::i;:::-;4856:50;;4786:126;;;:::o;4918:147::-;4989:9;5022:37;5053:5;5022:37;:::i;:::-;5009:50;;4918:147;;;:::o;5071:173::-;5179:58;5231:5;5179:58;:::i;:::-;5174:3;5167:71;5071:173;;:::o;5250:264::-;5364:4;5402:2;5391:9;5387:18;5379:26;;5415:92;5504:1;5493:9;5489:17;5480:6;5415:92;:::i;:::-;5250:264;;;;:::o;5520:151::-;5595:9;5628:37;5659:5;5628:37;:::i;:::-;5615:50;;5520:151;;;:::o;5677:181::-;5789:62;5845:5;5789:62;:::i;:::-;5784:3;5777:75;5677:181;;:::o;5864:272::-;5982:4;6020:2;6009:9;6005:18;5997:26;;6033:96;6126:1;6115:9;6111:17;6102:6;6033:96;:::i;:::-;5864:272;;;;:::o;6142:118::-;6229:24;6247:5;6229:24;:::i;:::-;6224:3;6217:37;6142:118;;:::o;6266:222::-;6359:4;6397:2;6386:9;6382:18;6374:26;;6410:71;6478:1;6467:9;6463:17;6454:6;6410:71;:::i;:::-;6266:222;;;;:::o;6494:143::-;6551:5;6582:6;6576:13;6567:22;;6598:33;6625:5;6598:33;:::i;:::-;6494:143;;;;:::o;6643:351::-;6713:6;6762:2;6750:9;6741:7;6737:23;6733:32;6730:119;;;6768:79;;:::i;:::-;6730:119;6888:1;6913:64;6969:7;6960:6;6949:9;6945:22;6913:64;:::i;:::-;6903:74;;6859:128;6643:351;;;;:::o;7000:332::-;7121:4;7159:2;7148:9;7144:18;7136:26;;7172:71;7240:1;7229:9;7225:17;7216:6;7172:71;:::i;:::-;7253:72;7321:2;7310:9;7306:18;7297:6;7253:72;:::i;:::-;7000:332;;;;;:::o;7338:90::-;7372:7;7415:5;7408:13;7401:21;7390:32;;7338:90;;;:::o;7434:116::-;7504:21;7519:5;7504:21;:::i;:::-;7497:5;7494:32;7484:60;;7540:1;7537;7530:12;7484:60;7434:116;:::o;7556:137::-;7610:5;7641:6;7635:13;7626:22;;7657:30;7681:5;7657:30;:::i;:::-;7556:137;;;;:::o;7699:345::-;7766:6;7815:2;7803:9;7794:7;7790:23;7786:32;7783:119;;;7821:79;;:::i;:::-;7783:119;7941:1;7966:61;8019:7;8010:6;7999:9;7995:22;7966:61;:::i;:::-;7956:71;;7912:125;7699:345;;;;:::o;8050:438::-;8197:4;8235:2;8224:9;8220:18;8212:26;;8248:71;8316:1;8305:9;8301:17;8292:6;8248:71;:::i;:::-;8329:72;8397:2;8386:9;8382:18;8373:6;8329:72;:::i;:::-;8411:70;8477:2;8466:9;8462:18;8453:6;8411:70;:::i;:::-;8050:438;;;;;;:::o;8494:143::-;8551:5;8582:6;8576:13;8567:22;;8598:33;8625:5;8598:33;:::i;:::-;8494:143;;;;:::o;8643:351::-;8713:6;8762:2;8750:9;8741:7;8737:23;8733:32;8730:119;;;8768:79;;:::i;:::-;8730:119;8888:1;8913:64;8969:7;8960:6;8949:9;8945:22;8913:64;:::i;:::-;8903:74;;8859:128;8643:351;;;;:::o;9000:120::-;9072:23;9089:5;9072:23;:::i;:::-;9065:5;9062:34;9052:62;;9110:1;9107;9100:12;9052:62;9000:120;:::o;9126:141::-;9182:5;9213:6;9207:13;9198:22;;9229:32;9255:5;9229:32;:::i;:::-;9126:141;;;;:::o;9273:349::-;9342:6;9391:2;9379:9;9370:7;9366:23;9362:32;9359:119;;;9397:79;;:::i;:::-;9359:119;9517:1;9542:63;9597:7;9588:6;9577:9;9573:22;9542:63;:::i;:::-;9532:73;;9488:127;9273:349;;;;:::o;9628:122::-;9701:24;9719:5;9701:24;:::i;:::-;9694:5;9691:35;9681:63;;9740:1;9737;9730:12;9681:63;9628:122;:::o;9756:143::-;9813:5;9844:6;9838:13;9829:22;;9860:33;9887:5;9860:33;:::i;:::-;9756:143;;;;:::o;9905:90::-;9940:7;9983:5;9980:1;9969:20;9958:31;;9905:90;;;:::o;10001:118::-;10072:22;10088:5;10072:22;:::i;:::-;10065:5;10062:33;10052:61;;10109:1;10106;10099:12;10052:61;10001:118;:::o;10125:139::-;10180:5;10211:6;10205:13;10196:22;;10227:31;10252:5;10227:31;:::i;:::-;10125:139;;;;:::o;10270:89::-;10306:7;10346:6;10339:5;10335:18;10324:29;;10270:89;;;:::o;10365:120::-;10437:23;10454:5;10437:23;:::i;:::-;10430:5;10427:34;10417:62;;10475:1;10472;10465:12;10417:62;10365:120;:::o;10491:141::-;10547:5;10578:6;10572:13;10563:22;;10594:32;10620:5;10594:32;:::i;:::-;10491:141;;;;:::o;10638:86::-;10673:7;10713:4;10706:5;10702:16;10691:27;;10638:86;;;:::o;10730:118::-;10801:22;10817:5;10801:22;:::i;:::-;10794:5;10791:33;10781:61;;10838:1;10835;10828:12;10781:61;10730:118;:::o;10854:139::-;10909:5;10940:6;10934:13;10925:22;;10956:31;10981:5;10956:31;:::i;:::-;10854:139;;;;:::o;10999:1271::-;11113:6;11121;11129;11137;11145;11153;11161;11210:3;11198:9;11189:7;11185:23;11181:33;11178:120;;;11217:79;;:::i;:::-;11178:120;11337:1;11362:64;11418:7;11409:6;11398:9;11394:22;11362:64;:::i;:::-;11352:74;;11308:128;11475:2;11501:62;11555:7;11546:6;11535:9;11531:22;11501:62;:::i;:::-;11491:72;;11446:127;11612:2;11638:63;11693:7;11684:6;11673:9;11669:22;11638:63;:::i;:::-;11628:73;;11583:128;11750:2;11776:63;11831:7;11822:6;11811:9;11807:22;11776:63;:::i;:::-;11766:73;;11721:128;11888:3;11915:63;11970:7;11961:6;11950:9;11946:22;11915:63;:::i;:::-;11905:73;;11859:129;12027:3;12054:62;12108:7;12099:6;12088:9;12084:22;12054:62;:::i;:::-;12044:72;;11998:128;12165:3;12192:61;12245:7;12236:6;12225:9;12221:22;12192:61;:::i;:::-;12182:71;;12136:127;10999:1271;;;;;;;;;;:::o;12276:108::-;12353:24;12371:5;12353:24;:::i;:::-;12348:3;12341:37;12276:108;;:::o;12390:105::-;12465:23;12482:5;12465:23;:::i;:::-;12460:3;12453:36;12390:105;;:::o;12501:108::-;12578:24;12596:5;12578:24;:::i;:::-;12573:3;12566:37;12501:108;;:::o;12615:::-;12692:24;12710:5;12692:24;:::i;:::-;12687:3;12680:37;12615:108;;:::o;12829:1445::-;13006:4;13001:3;12997:14;13096:4;13089:5;13085:16;13079:23;13115:63;13172:4;13167:3;13163:14;13149:12;13115:63;:::i;:::-;13021:167;13274:4;13267:5;13263:16;13257:23;13293:63;13350:4;13345:3;13341:14;13327:12;13293:63;:::i;:::-;13198:168;13447:4;13440:5;13436:16;13430:23;13466:61;13521:4;13516:3;13512:14;13498:12;13466:61;:::i;:::-;13376:161;13624:4;13617:5;13613:16;13607:23;13643:63;13700:4;13695:3;13691:14;13677:12;13643:63;:::i;:::-;13547:169;13803:4;13796:5;13792:16;13786:23;13822:63;13879:4;13874:3;13870:14;13856:12;13822:63;:::i;:::-;13726:169;13988:4;13981:5;13977:16;13971:23;14007:63;14064:4;14059:3;14055:14;14041:12;14007:63;:::i;:::-;13905:175;14175:4;14168:5;14164:16;14158:23;14194:63;14251:4;14246:3;14242:14;14228:12;14194:63;:::i;:::-;14090:177;12975:1299;12829:1445;;:::o;14280:383::-;14453:4;14491:3;14480:9;14476:19;14468:27;;14505:151;14653:1;14642:9;14638:17;14629:6;14505:151;:::i;:::-;14280:383;;;;:::o;14767:1443::-;14942:4;14937:3;14933:14;15032:4;15025:5;15021:16;15015:23;15051:63;15108:4;15103:3;15099:14;15085:12;15051:63;:::i;:::-;14957:167;15210:4;15203:5;15199:16;15193:23;15229:63;15286:4;15281:3;15277:14;15263:12;15229:63;:::i;:::-;15134:168;15383:4;15376:5;15372:16;15366:23;15402:61;15457:4;15452:3;15448:14;15434:12;15402:61;:::i;:::-;15312:161;15560:4;15553:5;15549:16;15543:23;15579:63;15636:4;15631:3;15627:14;15613:12;15579:63;:::i;:::-;15483:169;15738:4;15731:5;15727:16;15721:23;15757:63;15814:4;15809:3;15805:14;15791:12;15757:63;:::i;:::-;15662:168;15924:4;15917:5;15913:16;15907:23;15943:63;16000:4;15995:3;15991:14;15977:12;15943:63;:::i;:::-;15840:176;16111:4;16104:5;16100:16;16094:23;16130:63;16187:4;16182:3;16178:14;16164:12;16130:63;:::i;:::-;16026:177;14911:1299;14767:1443;;:::o;16216:379::-;16387:4;16425:3;16414:9;16410:19;16402:27;;16439:149;16585:1;16574:9;16570:17;16561:6;16439:149;:::i;:::-;16216:379;;;;:::o;16601:98::-;16652:6;16686:5;16680:12;16670:22;;16601:98;;;:::o;16705:147::-;16806:11;16843:3;16828:18;;16705:147;;;;:::o;16858:139::-;16947:6;16942:3;16937;16931:23;16988:1;16979:6;16974:3;16970:16;16963:27;16858:139;;;:::o;17003:386::-;17107:3;17135:38;17167:5;17135:38;:::i;:::-;17189:88;17270:6;17265:3;17189:88;:::i;:::-;17182:95;;17286:65;17344:6;17339:3;17332:4;17325:5;17321:16;17286:65;:::i;:::-;17376:6;17371:3;17367:16;17360:23;;17111:278;17003:386;;;;:::o;17395:271::-;17525:3;17547:93;17636:3;17627:6;17547:93;:::i;:::-;17540:100;;17657:3;17650:10;;17395:271;;;;:::o;17672:169::-;17756:11;17790:6;17785:3;17778:19;17830:4;17825:3;17821:14;17806:29;;17672:169;;;;:::o;17847:152::-;17987:4;17983:1;17975:6;17971:14;17964:28;17847:152;:::o;18005:365::-;18147:3;18168:66;18232:1;18227:3;18168:66;:::i;:::-;18161:73;;18243:93;18332:3;18243:93;:::i;:::-;18361:2;18356:3;18352:12;18345:19;;18005:365;;;:::o;18376:419::-;18542:4;18580:2;18569:9;18565:18;18557:26;;18629:9;18623:4;18619:20;18615:1;18604:9;18600:17;18593:47;18657:131;18783:4;18657:131;:::i;:::-;18649:139;;18376:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "958000",
								"executionCost": "49524",
								"totalCost": "1007524"
							},
							"external": {
								"approveAll(address,address)": "infinite",
								"factory()": "infinite",
								"feeTier()": "331",
								"swapEarnForUSD(uint256,address,address)": "infinite",
								"swapRouter()": "infinite",
								"swapTokenForUSD(uint256,uint256,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 495,
									"end": 537,
									"name": "PUSH",
									"source": 13,
									"value": "3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E"
								},
								{
									"begin": 439,
									"end": 538,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 538,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 439,
									"end": 538,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 439,
									"end": 538,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 439,
									"end": 538,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 439,
									"end": 538,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 648,
									"end": 690,
									"name": "PUSH",
									"source": 13,
									"value": "227628F3F023BB0B980B67D528571C95C6DAC1C"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 587,
									"end": 691,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 587,
									"end": 691,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 714,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 714,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 714,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 698,
									"end": 714,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 393,
									"end": 5659,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a969197cb61ba66bcbc1d5bf464e0b065a2b4bfc25fb0cbd535f28148f48563b64736f6c634300081a0033",
									".code": [
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "A443276"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "72F5D98A"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "8EFC0828"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "A3FA08E4"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "C31C9C07"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "C45A0155"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 393,
											"end": 5659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 5463,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 5463,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 544,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 544,
											"end": 581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1342,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1342,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1342,
											"end": 3476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 3482,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3482,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 3482,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 439,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 439,
											"end": 538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 587,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 587,
											"end": 691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5566,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 5567,
											"end": 5575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5589,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5599,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5599,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5599,
											"name": "PUSH",
											"source": 13,
											"value": "70A08231"
										},
										{
											"begin": 5608,
											"end": 5612,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 5577,
											"end": 5614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5577,
											"end": 5614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5577,
											"end": 5614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 5546,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5546,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5546,
											"end": 5615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5463,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 577,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "BB8"
										},
										{
											"begin": 544,
											"end": 581,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 544,
											"end": 581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1537,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "95EA7B3"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1804,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1807,
											"end": 1822,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1765,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1765,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1765,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1864,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1864,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1864,
											"name": "PUSH",
											"source": 13,
											"value": "1698EE82"
										},
										{
											"begin": 1886,
											"end": 1898,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1931,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 577,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "BB8"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1849,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1849,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1849,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1834,
											"end": 1963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1974,
											"end": 1984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2006,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2011,
											"name": "PUSH",
											"source": 13,
											"value": "DDCA3F43"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1987,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1987,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1974,
											"end": 2013,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1974,
											"end": 2013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2129,
											"end": 2139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2227,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2278,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2296,
											"end": 2313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2331,
											"end": 2344,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2387,
											"name": "PUSH",
											"source": 13,
											"value": "3850C7BD"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2361,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2361,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2403,
											"end": 2435,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 2403,
											"end": 2435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2059,
											"end": 2446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2507,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2596,
											"end": 2608,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2645,
											"end": 2655,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2682,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2711,
											"end": 2721,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2759,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2510,
											"end": 2862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 2996,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3014,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3014,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3014,
											"name": "PUSH",
											"source": 13,
											"value": "5023B4DF"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2986,
											"end": 3022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 2986,
											"end": 3022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2986,
											"end": 3022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 3022,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 3022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3308,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3290,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3308,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3470,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3278,
											"end": 3470,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3425,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 3324,
											"end": 3459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3324,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3324,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3470,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3278,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1539,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1342,
											"end": 3476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4162,
											"end": 4174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4197,
											"end": 4207,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4222,
											"end": 4230,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4114,
											"end": 4240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4114,
											"end": 4240,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4114,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4263,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "PUSH",
											"source": 13,
											"value": "1698EE82"
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4338,
											"end": 4348,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 577,
											"end": 581,
											"name": "PUSH",
											"source": 13,
											"value": "BB8"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 4266,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 4266,
											"end": 4380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4266,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4380,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4419,
											"end": 4423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4428,
											"name": "PUSH",
											"source": 13,
											"value": "DDCA3F43"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "STATICCALL",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 4404,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4404,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4391,
											"end": 4430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 4951,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5051,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5088,
											"end": 5098,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5164,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5192,
											"end": 5200,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5236,
											"end": 5237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4954,
											"end": 5290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 5290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 5290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5415,
											"end": 5425,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5415,
											"end": 5442,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "4E45AAF"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 5415,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5415,
											"end": 5450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 5415,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5450,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5403,
											"end": 5450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3645,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3482,
											"end": 5457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 439,
											"end": 538,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 439,
											"end": 538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 587,
											"end": 691,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 587,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1986,
											"end": 1998,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2017,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2026,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2055,
											"end": 2078,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2080,
											"end": 2082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2032,
											"end": 2090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2136,
											"end": 2137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2125,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2101,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 14,
											"value": "172"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 686,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 568,
											"end": 686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 674,
											"end": 679,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 656,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 656,
											"end": 680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 656,
											"end": 680,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 656,
											"end": 680,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 645,
											"end": 680,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 645,
											"end": 680,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 686,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 568,
											"end": 686,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 568,
											"end": 686,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 568,
											"end": 686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 692,
											"end": 858,
											"name": "tag",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 692,
											"end": 858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 787,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 827,
											"end": 832,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 787,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 787,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 787,
											"end": 833,
											"name": "tag",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 787,
											"end": 833,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 780,
											"end": 785,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 777,
											"end": 834,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 767,
											"end": 852,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 767,
											"end": 852,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 848,
											"end": 849,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 846,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 838,
											"end": 850,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 767,
											"end": 852,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 767,
											"end": 852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 692,
											"end": 858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 692,
											"end": 858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 932,
											"end": 937,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 976,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 957,
											"end": 977,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 948,
											"end": 977,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 948,
											"end": 977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "117"
										},
										{
											"begin": 986,
											"end": 1041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 986,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 864,
											"end": 1047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1053,
											"end": 1175,
											"name": "tag",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 1053,
											"end": 1175,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1126,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1144,
											"end": 1149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1126,
											"end": 1150,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 1126,
											"end": 1150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1126,
											"end": 1150,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 1126,
											"end": 1150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1119,
											"end": 1124,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1116,
											"end": 1151,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1106,
											"end": 1169,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1165,
											"end": 1166,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1163,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1155,
											"end": 1167,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1106,
											"end": 1169,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1106,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1053,
											"end": 1175,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1053,
											"end": 1175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1232,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1252,
											"end": 1272,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1243,
											"end": 1272,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1243,
											"end": 1272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 1308,
											"end": 1313,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 1281,
											"end": 1314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 1281,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1181,
											"end": 1320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "tag",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1416,
											"end": 1422,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1473,
											"end": 1475,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1470,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1448,
											"end": 1471,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1444,
											"end": 1476,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 1479,
											"end": 1558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1479,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "tag",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 1441,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1599,
											"end": 1600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 1624,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1624,
											"end": 1699,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1624,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1614,
											"end": 1699,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1614,
											"end": 1699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1570,
											"end": 1709,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1774,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1795,
											"end": 1817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 1774,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1774,
											"end": 1827,
											"name": "tag",
											"source": 14,
											"value": "189"
										},
										{
											"begin": 1774,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1827,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1764,
											"end": 1827,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1719,
											"end": 1837,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1326,
											"end": 1844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1941,
											"name": "tag",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 1850,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1886,
											"end": 1893,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1934,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFF"
										},
										{
											"begin": 1919,
											"end": 1924,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1915,
											"end": 1935,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1935,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1904,
											"end": 1935,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1941,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1941,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1941,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1850,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 2062,
											"name": "tag",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 1947,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 2049,
											"end": 2054,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 2032,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 2032,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2027,
											"end": 2030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2020,
											"end": 2056,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 2062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 2062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1947,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "tag",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2182,
											"end": 2200,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2174,
											"end": 2200,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2174,
											"end": 2200,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2210,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2274,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2261,
											"end": 2278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2210,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 2210,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2210,
											"end": 2279,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 2210,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2068,
											"end": 2286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2369,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 2292,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2363,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2347,
											"end": 2363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2369,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2369,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2369,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2292,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2497,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 2375,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 2466,
											"end": 2471,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 2448,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2472,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 2448,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2441,
											"end": 2446,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2438,
											"end": 2473,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2428,
											"end": 2491,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2477,
											"end": 2489,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2428,
											"end": 2491,
											"name": "tag",
											"source": 14,
											"value": "198"
										},
										{
											"begin": 2428,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2497,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2375,
											"end": 2497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "tag",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2549,
											"end": 2554,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2587,
											"end": 2593,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2574,
											"end": 2594,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2630,
											"end": 2635,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 2603,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2603,
											"end": 2636,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 2603,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2503,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "tag",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2778,
											"end": 2784,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2851,
											"end": 2854,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2826,
											"end": 2849,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2822,
											"end": 2855,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2858,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2858,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 2858,
											"end": 2937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2858,
											"end": 2937,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 2858,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "tag",
											"source": 14,
											"value": "202"
										},
										{
											"begin": 2819,
											"end": 2939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 2979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3028,
											"end": 3037,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3024,
											"end": 3046,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3003,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3056,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 3003,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2993,
											"end": 3056,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2949,
											"end": 3066,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 3176,
											"end": 3183,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3167,
											"end": 3173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3156,
											"end": 3165,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3152,
											"end": 3174,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 3131,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "tag",
											"source": 14,
											"value": "205"
										},
										{
											"begin": 3131,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3184,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3076,
											"end": 3194,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3233,
											"end": 3235,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 3326,
											"end": 3333,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3306,
											"end": 3315,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3302,
											"end": 3324,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3259,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3259,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3259,
											"end": 3334,
											"name": "tag",
											"source": 14,
											"value": "206"
										},
										{
											"begin": 3259,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3334,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3249,
											"end": 3334,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3204,
											"end": 3344,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3409,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 3476,
											"end": 3483,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3467,
											"end": 3473,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3452,
											"end": 3474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3409,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 3409,
											"end": 3484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3409,
											"end": 3484,
											"name": "tag",
											"source": 14,
											"value": "207"
										},
										{
											"begin": 3409,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3484,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3399,
											"end": 3484,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3354,
											"end": 3494,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2648,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3625,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3507,
											"end": 3625,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3594,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 3612,
											"end": 3617,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3594,
											"end": 3618,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 3594,
											"end": 3618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3594,
											"end": 3618,
											"name": "tag",
											"source": 14,
											"value": "209"
										},
										{
											"begin": 3594,
											"end": 3618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3592,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3582,
											"end": 3619,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3625,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3507,
											"end": 3625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3728,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3751,
											"end": 3760,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3747,
											"end": 3765,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3739,
											"end": 3765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3828,
											"end": 3845,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 3775,
											"end": 3846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "tag",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 3775,
											"end": 3846,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3631,
											"end": 3853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3980,
											"end": 3986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4033,
											"end": 4042,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4024,
											"end": 4031,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4020,
											"end": 4043,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4016,
											"end": 4048,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 4051,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "tag",
											"source": 14,
											"value": "214"
										},
										{
											"begin": 4051,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "tag",
											"source": 14,
											"value": "213"
										},
										{
											"begin": 4013,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 4241,
											"end": 4248,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4232,
											"end": 4238,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4239,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "125"
										},
										{
											"begin": 4196,
											"end": 4249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 4196,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4186,
											"end": 4249,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4324,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 4391,
											"end": 4398,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4367,
											"end": 4389,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4324,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4324,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4324,
											"end": 4399,
											"name": "tag",
											"source": 14,
											"value": "216"
										},
										{
											"begin": 4324,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4314,
											"end": 4399,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4314,
											"end": 4399,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4269,
											"end": 4409,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4474,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 4541,
											"end": 4548,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4521,
											"end": 4530,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4517,
											"end": 4539,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4474,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 4474,
											"end": 4549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4474,
											"end": 4549,
											"name": "tag",
											"source": 14,
											"value": "217"
										},
										{
											"begin": 4474,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4549,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4464,
											"end": 4549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4419,
											"end": 4559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3859,
											"end": 4566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4632,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4572,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4600,
											"end": 4603,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4621,
											"end": 4626,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4626,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4614,
											"end": 4626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4632,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4632,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4572,
											"end": 4632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4780,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4638,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4688,
											"end": 4697,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 4739,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 4766,
											"end": 4771,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 4748,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 4748,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 4739,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4739,
											"end": 4773,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 4739,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 4721,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "tag",
											"source": 14,
											"value": "220"
										},
										{
											"begin": 4721,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4708,
											"end": 4774,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4708,
											"end": 4774,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4780,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4638,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4912,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 4786,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4869,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 4900,
											"end": 4905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4869,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 4869,
											"end": 4906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4869,
											"end": 4906,
											"name": "tag",
											"source": 14,
											"value": "224"
										},
										{
											"begin": 4869,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4856,
											"end": 4906,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4856,
											"end": 4906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4912,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4912,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4912,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 5065,
											"name": "tag",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 4918,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4989,
											"end": 4998,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5022,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 5053,
											"end": 5058,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5022,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 5022,
											"end": 5059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5022,
											"end": 5059,
											"name": "tag",
											"source": 14,
											"value": "226"
										},
										{
											"begin": 5022,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5009,
											"end": 5059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5009,
											"end": 5059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 5065,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 5065,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 5065,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4918,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5244,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 5071,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 5231,
											"end": 5236,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "130"
										},
										{
											"begin": 5179,
											"end": 5237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5179,
											"end": 5237,
											"name": "tag",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 5179,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5174,
											"end": 5177,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5167,
											"end": 5238,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "tag",
											"source": 14,
											"value": "38"
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5364,
											"end": 5368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5404,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5391,
											"end": 5400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5387,
											"end": 5405,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5379,
											"end": 5405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5379,
											"end": 5405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 5504,
											"end": 5505,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5502,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5506,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5480,
											"end": 5486,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 5415,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5415,
											"end": 5507,
											"name": "tag",
											"source": 14,
											"value": "230"
										},
										{
											"begin": 5415,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5250,
											"end": 5514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5671,
											"name": "tag",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 5520,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5628,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 5659,
											"end": 5664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5628,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 5628,
											"end": 5665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5628,
											"end": 5665,
											"name": "tag",
											"source": 14,
											"value": "232"
										},
										{
											"begin": 5628,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5615,
											"end": 5665,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5615,
											"end": 5665,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5671,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5671,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5671,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5520,
											"end": 5671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5858,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 5677,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5789,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5789,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "132"
										},
										{
											"begin": 5789,
											"end": 5851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5789,
											"end": 5851,
											"name": "tag",
											"source": 14,
											"value": "234"
										},
										{
											"begin": 5789,
											"end": 5851,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5784,
											"end": 5787,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5777,
											"end": 5852,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5858,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5677,
											"end": 5858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 5986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6020,
											"end": 6022,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6009,
											"end": 6018,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6005,
											"end": 6023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5997,
											"end": 6023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5997,
											"end": 6023,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6033,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6111,
											"end": 6128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6033,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 6033,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6033,
											"end": 6129,
											"name": "tag",
											"source": 14,
											"value": "236"
										},
										{
											"begin": 6033,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5864,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6260,
											"name": "tag",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 6142,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 6247,
											"end": 6252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 6229,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6229,
											"end": 6253,
											"name": "tag",
											"source": 14,
											"value": "238"
										},
										{
											"begin": 6229,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6224,
											"end": 6227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6217,
											"end": 6254,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6260,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6142,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6359,
											"end": 6363,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6397,
											"end": 6399,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6386,
											"end": 6395,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6374,
											"end": 6400,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6410,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6463,
											"end": 6480,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6454,
											"end": 6460,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6410,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 6410,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6410,
											"end": 6481,
											"name": "tag",
											"source": 14,
											"value": "240"
										},
										{
											"begin": 6410,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6266,
											"end": 6488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "tag",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6551,
											"end": 6556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6588,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6576,
											"end": 6589,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6567,
											"end": 6589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 6598,
											"end": 6631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6631,
											"name": "tag",
											"source": 14,
											"value": "242"
										},
										{
											"begin": 6598,
											"end": 6631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6713,
											"end": 6719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 6764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6750,
											"end": 6759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6741,
											"end": 6748,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6737,
											"end": 6760,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6849,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 6730,
											"end": 6849,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6730,
											"end": 6849,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 6730,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6888,
											"end": 6889,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6969,
											"end": 6976,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6960,
											"end": 6966,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6949,
											"end": 6958,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6945,
											"end": 6967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "135"
										},
										{
											"begin": 6913,
											"end": 6977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 6913,
											"end": 6977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6903,
											"end": 6977,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6903,
											"end": 6977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6859,
											"end": 6987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6643,
											"end": 6994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7121,
											"end": 7125,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7159,
											"end": 7161,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7148,
											"end": 7157,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7136,
											"end": 7162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7225,
											"end": 7242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 7172,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7172,
											"end": 7243,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7172,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 7321,
											"end": 7323,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7306,
											"end": 7324,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7297,
											"end": 7303,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 7253,
											"end": 7325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 7253,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7428,
											"name": "tag",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 7338,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7372,
											"end": 7379,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7415,
											"end": 7420,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7408,
											"end": 7421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7401,
											"end": 7422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7422,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7390,
											"end": 7422,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7428,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7428,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7428,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7338,
											"end": 7428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7550,
											"name": "tag",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 7434,
											"end": 7550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 7519,
											"end": 7524,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "136"
										},
										{
											"begin": 7504,
											"end": 7525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 7504,
											"end": 7525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7494,
											"end": 7526,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 7484,
											"end": 7544,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 7484,
											"end": 7544,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7540,
											"end": 7541,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7537,
											"end": 7538,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7530,
											"end": 7542,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7484,
											"end": 7544,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 7484,
											"end": 7544,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7550,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7434,
											"end": 7550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "tag",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7615,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7647,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7648,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7626,
											"end": 7648,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7681,
											"end": 7686,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "137"
										},
										{
											"begin": 7657,
											"end": 7687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 7657,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7556,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7815,
											"end": 7817,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7803,
											"end": 7812,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7794,
											"end": 7801,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7790,
											"end": 7813,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7786,
											"end": 7818,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7783,
											"end": 7902,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7783,
											"end": 7902,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 7783,
											"end": 7902,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7821,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 7821,
											"end": 7900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7821,
											"end": 7900,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 7821,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7783,
											"end": 7902,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 7783,
											"end": 7902,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 8019,
											"end": 8026,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8010,
											"end": 8016,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7999,
											"end": 8008,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7995,
											"end": 8017,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 7966,
											"end": 8027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 7966,
											"end": 8027,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7956,
											"end": 8027,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7956,
											"end": 8027,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7912,
											"end": 8037,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7699,
											"end": 8044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8197,
											"end": 8201,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8235,
											"end": 8237,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8224,
											"end": 8233,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8220,
											"end": 8238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8212,
											"end": 8238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8248,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8314,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8301,
											"end": 8318,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8292,
											"end": 8298,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 8248,
											"end": 8319,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 8248,
											"end": 8319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8248,
											"end": 8319,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 8248,
											"end": 8319,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8386,
											"end": 8395,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8382,
											"end": 8400,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8373,
											"end": 8379,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "134"
										},
										{
											"begin": 8329,
											"end": 8401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8329,
											"end": 8401,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 8329,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8411,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 8477,
											"end": 8479,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8480,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8453,
											"end": 8459,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8411,
											"end": 8481,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "122"
										},
										{
											"begin": 8411,
											"end": 8481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8411,
											"end": 8481,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 8411,
											"end": 8481,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8050,
											"end": 8488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8551,
											"end": 8556,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8588,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8576,
											"end": 8589,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 8567,
											"end": 8589,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8567,
											"end": 8589,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 8625,
											"end": 8630,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "119"
										},
										{
											"begin": 8598,
											"end": 8631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8598,
											"end": 8631,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 8598,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8494,
											"end": 8637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8741,
											"end": 8748,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8737,
											"end": 8760,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8733,
											"end": 8765,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 8849,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 8730,
											"end": 8849,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8768,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 8768,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 8768,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8768,
											"end": 8847,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 8768,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8730,
											"end": 8849,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 8730,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8888,
											"end": 8889,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 8969,
											"end": 8976,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8960,
											"end": 8966,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8949,
											"end": 8958,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8945,
											"end": 8967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 8913,
											"end": 8977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8913,
											"end": 8977,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 8913,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8903,
											"end": 8977,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8903,
											"end": 8977,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8859,
											"end": 8987,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9120,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 9000,
											"end": 9120,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9072,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 9089,
											"end": 9094,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9072,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 9072,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9072,
											"end": 9095,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 9072,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9065,
											"end": 9070,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9062,
											"end": 9096,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 9052,
											"end": 9114,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9110,
											"end": 9111,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9107,
											"end": 9108,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9100,
											"end": 9112,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9052,
											"end": 9114,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 9052,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9120,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9000,
											"end": 9120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "tag",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9182,
											"end": 9187,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9219,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9207,
											"end": 9220,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9220,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9198,
											"end": 9220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9229,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 9255,
											"end": 9260,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9229,
											"end": 9261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 9229,
											"end": 9261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9229,
											"end": 9261,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 9229,
											"end": 9261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9342,
											"end": 9348,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9393,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9379,
											"end": 9388,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9370,
											"end": 9377,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9366,
											"end": 9389,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9362,
											"end": 9394,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9478,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9478,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 9359,
											"end": 9478,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9397,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 9397,
											"end": 9476,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 9397,
											"end": 9476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9397,
											"end": 9476,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 9397,
											"end": 9476,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9359,
											"end": 9478,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 9359,
											"end": 9478,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9542,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 9597,
											"end": 9604,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9588,
											"end": 9594,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9577,
											"end": 9586,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9573,
											"end": 9595,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9542,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "141"
										},
										{
											"begin": 9542,
											"end": 9605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9542,
											"end": 9605,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 9542,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9605,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9532,
											"end": 9605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9488,
											"end": 9615,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9273,
											"end": 9622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9750,
											"name": "tag",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 9628,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9701,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 9719,
											"end": 9724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9701,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 9701,
											"end": 9725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9701,
											"end": 9725,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 9701,
											"end": 9725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9694,
											"end": 9699,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9691,
											"end": 9726,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 9681,
											"end": 9744,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9730,
											"end": 9742,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9744,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 9681,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9750,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9628,
											"end": 9750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "tag",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9850,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9838,
											"end": 9851,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9829,
											"end": 9851,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9829,
											"end": 9851,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9860,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9887,
											"end": 9892,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9860,
											"end": 9893,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "142"
										},
										{
											"begin": 9860,
											"end": 9893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9860,
											"end": 9893,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 9860,
											"end": 9893,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9756,
											"end": 9899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "tag",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9940,
											"end": 9947,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9988,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9980,
											"end": 9981,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 9969,
											"end": 9989,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 9958,
											"end": 9989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9958,
											"end": 9989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9905,
											"end": 9995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9905,
											"end": 9995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "tag",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10072,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 10088,
											"end": 10093,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10072,
											"end": 10094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "144"
										},
										{
											"begin": 10072,
											"end": 10094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10072,
											"end": 10094,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 10072,
											"end": 10094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10065,
											"end": 10070,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10062,
											"end": 10095,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 10052,
											"end": 10113,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10109,
											"end": 10110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10099,
											"end": 10111,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10052,
											"end": 10113,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 10052,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10001,
											"end": 10119,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10001,
											"end": 10119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "tag",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10180,
											"end": 10185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10217,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10205,
											"end": 10218,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10218,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10196,
											"end": 10218,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10227,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 10252,
											"end": 10257,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10227,
											"end": 10258,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "145"
										},
										{
											"begin": 10227,
											"end": 10258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10227,
											"end": 10258,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 10227,
											"end": 10258,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10125,
											"end": 10264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10359,
											"name": "tag",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 10270,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10306,
											"end": 10313,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "PUSH",
											"source": 14,
											"value": "FFFF"
										},
										{
											"begin": 10339,
											"end": 10344,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10335,
											"end": 10353,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10324,
											"end": 10353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10324,
											"end": 10353,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10359,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10359,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10359,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10270,
											"end": 10359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10485,
											"name": "tag",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 10365,
											"end": 10485,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 10454,
											"end": 10459,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "147"
										},
										{
											"begin": 10437,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10437,
											"end": 10460,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 10437,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10430,
											"end": 10435,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10427,
											"end": 10461,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10417,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 10417,
											"end": 10479,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10465,
											"end": 10477,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10417,
											"end": 10479,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 10417,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10485,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10365,
											"end": 10485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10547,
											"end": 10552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10578,
											"end": 10584,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10572,
											"end": 10585,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10585,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10563,
											"end": 10585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 10620,
											"end": 10625,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "148"
										},
										{
											"begin": 10594,
											"end": 10626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10594,
											"end": 10626,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 10594,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10491,
											"end": 10632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "tag",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10673,
											"end": 10680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10713,
											"end": 10717,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 10706,
											"end": 10711,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10702,
											"end": 10718,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10691,
											"end": 10718,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10691,
											"end": 10718,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10638,
											"end": 10724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 10848,
											"name": "tag",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 10730,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 10817,
											"end": 10822,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "150"
										},
										{
											"begin": 10801,
											"end": 10823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10801,
											"end": 10823,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 10801,
											"end": 10823,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10794,
											"end": 10799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10791,
											"end": 10824,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 10781,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 10781,
											"end": 10842,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10828,
											"end": 10840,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10781,
											"end": 10842,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 10781,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10730,
											"end": 10848,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "tag",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10909,
											"end": 10914,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10946,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10934,
											"end": 10947,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 10981,
											"end": 10986,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "151"
										},
										{
											"begin": 10956,
											"end": 10987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 10956,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 10993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11113,
											"end": 11119,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11127,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11129,
											"end": 11135,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11137,
											"end": 11143,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11145,
											"end": 11151,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11159,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11161,
											"end": 11167,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11213,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11198,
											"end": 11207,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 11189,
											"end": 11196,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11185,
											"end": 11208,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11181,
											"end": 11214,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11298,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 11178,
											"end": 11298,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 11217,
											"end": 11296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 11217,
											"end": 11296,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11178,
											"end": 11298,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 11178,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11337,
											"end": 11338,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 11418,
											"end": 11425,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11409,
											"end": 11415,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11398,
											"end": 11407,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11394,
											"end": 11416,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "143"
										},
										{
											"begin": 11362,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 11362,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 11352,
											"end": 11426,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11308,
											"end": 11436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11475,
											"end": 11477,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11501,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 11555,
											"end": 11562,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11546,
											"end": 11552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11535,
											"end": 11544,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11531,
											"end": 11553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11501,
											"end": 11563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "146"
										},
										{
											"begin": 11501,
											"end": 11563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11501,
											"end": 11563,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 11501,
											"end": 11563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11491,
											"end": 11563,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 11491,
											"end": 11563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11446,
											"end": 11573,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11612,
											"end": 11614,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11638,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 11693,
											"end": 11700,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11684,
											"end": 11690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11673,
											"end": 11682,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11669,
											"end": 11691,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 11638,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11638,
											"end": 11701,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 11638,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11628,
											"end": 11701,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 11628,
											"end": 11701,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11583,
											"end": 11711,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11750,
											"end": 11752,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 11831,
											"end": 11838,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11822,
											"end": 11828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11811,
											"end": 11820,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11807,
											"end": 11829,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 11776,
											"end": 11839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 11776,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11766,
											"end": 11839,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11766,
											"end": 11839,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11721,
											"end": 11849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11888,
											"end": 11891,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 11915,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 11970,
											"end": 11977,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11961,
											"end": 11967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11950,
											"end": 11959,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 11946,
											"end": 11968,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 11915,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11915,
											"end": 11978,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 11915,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11905,
											"end": 11978,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11905,
											"end": 11978,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11859,
											"end": 11988,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12027,
											"end": 12030,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 12054,
											"end": 12116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12108,
											"end": 12115,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 12099,
											"end": 12105,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12088,
											"end": 12097,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 12084,
											"end": 12106,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12054,
											"end": 12116,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "152"
										},
										{
											"begin": 12054,
											"end": 12116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12054,
											"end": 12116,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 12054,
											"end": 12116,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12044,
											"end": 12116,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12044,
											"end": 12116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11998,
											"end": 12126,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12165,
											"end": 12168,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 12192,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12225,
											"end": 12234,
											"name": "DUP12",
											"source": 14
										},
										{
											"begin": 12221,
											"end": 12243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12192,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "138"
										},
										{
											"begin": 12192,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12192,
											"end": 12253,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 12192,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12182,
											"end": 12253,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12182,
											"end": 12253,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12136,
											"end": 12263,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10999,
											"end": 12270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12276,
											"end": 12384,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 12276,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12353,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12371,
											"end": 12376,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12353,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "115"
										},
										{
											"begin": 12353,
											"end": 12377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12353,
											"end": 12377,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 12353,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12348,
											"end": 12351,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12378,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12276,
											"end": 12384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12276,
											"end": 12384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12276,
											"end": 12384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12495,
											"name": "tag",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 12390,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12465,
											"end": 12488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12482,
											"end": 12487,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12465,
											"end": 12488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "121"
										},
										{
											"begin": 12465,
											"end": 12488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12465,
											"end": 12488,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 12465,
											"end": 12488,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12460,
											"end": 12463,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12453,
											"end": 12489,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12390,
											"end": 12495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12501,
											"end": 12609,
											"name": "tag",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 12501,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12578,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 12596,
											"end": 12601,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12578,
											"end": 12602,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 12578,
											"end": 12602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12578,
											"end": 12602,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 12578,
											"end": 12602,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12566,
											"end": 12603,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12501,
											"end": 12609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12501,
											"end": 12609,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12501,
											"end": 12609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12723,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 12615,
											"end": 12723,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12692,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12710,
											"end": 12715,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12692,
											"end": 12716,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 12692,
											"end": 12716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12692,
											"end": 12716,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 12692,
											"end": 12716,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12687,
											"end": 12690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12680,
											"end": 12717,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12723,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12615,
											"end": 12723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 14274,
											"name": "tag",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 12829,
											"end": 14274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13010,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 13001,
											"end": 13004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12997,
											"end": 13011,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13096,
											"end": 13100,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13089,
											"end": 13094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13085,
											"end": 13101,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13079,
											"end": 13102,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 13172,
											"end": 13176,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13170,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13163,
											"end": 13177,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13149,
											"end": 13161,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 13115,
											"end": 13178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13115,
											"end": 13178,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 13115,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13274,
											"end": 13278,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13267,
											"end": 13272,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13279,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 13350,
											"end": 13354,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 13345,
											"end": 13348,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13341,
											"end": 13355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13327,
											"end": 13339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 13293,
											"end": 13356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13293,
											"end": 13356,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 13293,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13198,
											"end": 13366,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13447,
											"end": 13451,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13440,
											"end": 13445,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13436,
											"end": 13452,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13430,
											"end": 13453,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 13521,
											"end": 13525,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 13516,
											"end": 13519,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13512,
											"end": 13526,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13498,
											"end": 13510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13527,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 13466,
											"end": 13527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13466,
											"end": 13527,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 13466,
											"end": 13527,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13376,
											"end": 13537,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13624,
											"end": 13628,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13617,
											"end": 13622,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13613,
											"end": 13629,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13607,
											"end": 13630,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13643,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 13700,
											"end": 13704,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 13695,
											"end": 13698,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13691,
											"end": 13705,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13677,
											"end": 13689,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13643,
											"end": 13706,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 13643,
											"end": 13706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13643,
											"end": 13706,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 13643,
											"end": 13706,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13547,
											"end": 13716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13803,
											"end": 13807,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13796,
											"end": 13801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13792,
											"end": 13808,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13786,
											"end": 13809,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13822,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 13879,
											"end": 13883,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 13874,
											"end": 13877,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13870,
											"end": 13884,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13856,
											"end": 13868,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13822,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 13822,
											"end": 13885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13822,
											"end": 13885,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 13822,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13726,
											"end": 13895,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13988,
											"end": 13992,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 13981,
											"end": 13986,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13977,
											"end": 13993,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13971,
											"end": 13994,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 14064,
											"end": 14068,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 14059,
											"end": 14062,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14055,
											"end": 14069,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14041,
											"end": 14053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 14007,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14007,
											"end": 14070,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 14007,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13905,
											"end": 14080,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 14168,
											"end": 14173,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14164,
											"end": 14180,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14158,
											"end": 14181,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 14194,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 14251,
											"end": 14255,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 14246,
											"end": 14249,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 14242,
											"end": 14256,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14228,
											"end": 14240,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14194,
											"end": 14257,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 14194,
											"end": 14257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14194,
											"end": 14257,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 14194,
											"end": 14257,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14090,
											"end": 14267,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12975,
											"end": 14274,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 14274,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 14274,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 14274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "tag",
											"source": 14,
											"value": "77"
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14453,
											"end": 14457,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14491,
											"end": 14494,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 14480,
											"end": 14489,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14476,
											"end": 14495,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14468,
											"end": 14495,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14468,
											"end": 14495,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14505,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 14653,
											"end": 14654,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14642,
											"end": 14651,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14638,
											"end": 14655,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14629,
											"end": 14635,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14505,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "157"
										},
										{
											"begin": 14505,
											"end": 14656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14505,
											"end": 14656,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 14505,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14767,
											"end": 16210,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 14767,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14942,
											"end": 14946,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 14937,
											"end": 14940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14933,
											"end": 14947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15032,
											"end": 15036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15025,
											"end": 15030,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15021,
											"end": 15037,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15015,
											"end": 15038,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15051,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 15108,
											"end": 15112,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15103,
											"end": 15106,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15099,
											"end": 15113,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15085,
											"end": 15097,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15051,
											"end": 15114,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 15051,
											"end": 15114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15051,
											"end": 15114,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 15051,
											"end": 15114,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14957,
											"end": 15124,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15210,
											"end": 15214,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15203,
											"end": 15208,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15199,
											"end": 15215,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15193,
											"end": 15216,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15229,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 15286,
											"end": 15290,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 15281,
											"end": 15284,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15277,
											"end": 15291,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15275,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15229,
											"end": 15292,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 15229,
											"end": 15292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15229,
											"end": 15292,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 15229,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15134,
											"end": 15302,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15383,
											"end": 15387,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15376,
											"end": 15381,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15372,
											"end": 15388,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15366,
											"end": 15389,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15402,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 15457,
											"end": 15461,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 15452,
											"end": 15455,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15448,
											"end": 15462,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15434,
											"end": 15446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15402,
											"end": 15463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "154"
										},
										{
											"begin": 15402,
											"end": 15463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15402,
											"end": 15463,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 15402,
											"end": 15463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15312,
											"end": 15473,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15560,
											"end": 15564,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15553,
											"end": 15558,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15549,
											"end": 15565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15543,
											"end": 15566,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15579,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 15636,
											"end": 15640,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15627,
											"end": 15641,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15613,
											"end": 15625,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15579,
											"end": 15642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 15579,
											"end": 15642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15579,
											"end": 15642,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 15579,
											"end": 15642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15483,
											"end": 15652,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15738,
											"end": 15742,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15731,
											"end": 15736,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15727,
											"end": 15743,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15721,
											"end": 15744,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 15814,
											"end": 15818,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 15809,
											"end": 15812,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15805,
											"end": 15819,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15791,
											"end": 15803,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 15757,
											"end": 15820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15757,
											"end": 15820,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 15757,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15662,
											"end": 15830,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15924,
											"end": 15928,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 15917,
											"end": 15922,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15913,
											"end": 15929,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15907,
											"end": 15930,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 15943,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 16000,
											"end": 16004,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 15995,
											"end": 15998,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 15991,
											"end": 16005,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15977,
											"end": 15989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15943,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "155"
										},
										{
											"begin": 15943,
											"end": 16006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15943,
											"end": 16006,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 15943,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15840,
											"end": 16016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16111,
											"end": 16115,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 16104,
											"end": 16109,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16100,
											"end": 16116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16094,
											"end": 16117,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16130,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 16187,
											"end": 16191,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 16182,
											"end": 16185,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 16178,
											"end": 16192,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16164,
											"end": 16176,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16130,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 16130,
											"end": 16193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16130,
											"end": 16193,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 16130,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16026,
											"end": 16203,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14911,
											"end": 16210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14767,
											"end": 16210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14767,
											"end": 16210,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14767,
											"end": 16210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "tag",
											"source": 14,
											"value": "94"
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16387,
											"end": 16391,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16425,
											"end": 16428,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 16414,
											"end": 16423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16410,
											"end": 16429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16402,
											"end": 16429,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16402,
											"end": 16429,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16439,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 16585,
											"end": 16586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16574,
											"end": 16583,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16570,
											"end": 16587,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16561,
											"end": 16567,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16439,
											"end": 16588,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 16439,
											"end": 16588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16439,
											"end": 16588,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 16439,
											"end": 16588,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16216,
											"end": 16595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16699,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 16601,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16652,
											"end": 16658,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16686,
											"end": 16691,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16680,
											"end": 16692,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16670,
											"end": 16692,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16699,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16699,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16699,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16601,
											"end": 16699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "tag",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16806,
											"end": 16817,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16843,
											"end": 16846,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16828,
											"end": 16846,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16705,
											"end": 16852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16997,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 16858,
											"end": 16997,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16947,
											"end": 16953,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16942,
											"end": 16945,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16937,
											"end": 16940,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16931,
											"end": 16954,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 16988,
											"end": 16989,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16979,
											"end": 16985,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16974,
											"end": 16977,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 16986,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16963,
											"end": 16990,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16997,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16858,
											"end": 16997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "tag",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17107,
											"end": 17110,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17135,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 17167,
											"end": 17172,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17135,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 17135,
											"end": 17173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17135,
											"end": 17173,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 17135,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17189,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 17270,
											"end": 17276,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17265,
											"end": 17268,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17189,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "160"
										},
										{
											"begin": 17189,
											"end": 17277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17189,
											"end": 17277,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 17189,
											"end": 17277,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17182,
											"end": 17277,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 17182,
											"end": 17277,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17286,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 17344,
											"end": 17350,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17339,
											"end": 17342,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17332,
											"end": 17336,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17325,
											"end": 17330,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 17321,
											"end": 17337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17286,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 17286,
											"end": 17351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17286,
											"end": 17351,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 17286,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17376,
											"end": 17382,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17371,
											"end": 17374,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17367,
											"end": 17383,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17360,
											"end": 17383,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17360,
											"end": 17383,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17111,
											"end": 17389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17003,
											"end": 17389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17525,
											"end": 17528,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 17636,
											"end": 17639,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17633,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17547,
											"end": 17640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "162"
										},
										{
											"begin": 17547,
											"end": 17640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17547,
											"end": 17640,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 17547,
											"end": 17640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17540,
											"end": 17640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17540,
											"end": 17640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17657,
											"end": 17660,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17650,
											"end": 17660,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17650,
											"end": 17660,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17395,
											"end": 17666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "tag",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17756,
											"end": 17767,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17790,
											"end": 17796,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17785,
											"end": 17788,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17778,
											"end": 17797,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17830,
											"end": 17834,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17825,
											"end": 17828,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17821,
											"end": 17835,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17806,
											"end": 17835,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17806,
											"end": 17835,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17672,
											"end": 17841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 17847,
											"end": 17999,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 17847,
											"end": 17999,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17987,
											"end": 17991,
											"name": "PUSH",
											"source": 14,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17983,
											"end": 17984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17975,
											"end": 17981,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17971,
											"end": 17985,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17964,
											"end": 17992,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17847,
											"end": 17999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17847,
											"end": 17999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18005,
											"end": 18370,
											"name": "tag",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 18005,
											"end": 18370,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18147,
											"end": 18150,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18168,
											"end": 18234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 18232,
											"end": 18233,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 18227,
											"end": 18230,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18168,
											"end": 18234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "163"
										},
										{
											"begin": 18168,
											"end": 18234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18168,
											"end": 18234,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 18168,
											"end": 18234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18161,
											"end": 18234,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18161,
											"end": 18234,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18243,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 18332,
											"end": 18335,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18243,
											"end": 18336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 18243,
											"end": 18336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18243,
											"end": 18336,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 18243,
											"end": 18336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18361,
											"end": 18363,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18356,
											"end": 18359,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18352,
											"end": 18364,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18345,
											"end": 18364,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18345,
											"end": 18364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18005,
											"end": 18370,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18005,
											"end": 18370,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18005,
											"end": 18370,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18005,
											"end": 18370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18795,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 18376,
											"end": 18795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18542,
											"end": 18546,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18580,
											"end": 18582,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18569,
											"end": 18578,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18565,
											"end": 18583,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18557,
											"end": 18583,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18557,
											"end": 18583,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18629,
											"end": 18638,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18623,
											"end": 18627,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18619,
											"end": 18639,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 18615,
											"end": 18616,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18604,
											"end": 18613,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 18600,
											"end": 18617,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18593,
											"end": 18640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18657,
											"end": 18788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 18783,
											"end": 18787,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18657,
											"end": 18788,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "165"
										},
										{
											"begin": 18657,
											"end": 18788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 18657,
											"end": 18788,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 18657,
											"end": 18788,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18649,
											"end": 18788,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18649,
											"end": 18788,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18795,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18795,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18795,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18376,
											"end": 18795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"IERC20Standard.sol",
								"IV3SwapRouter.sol",
								"TestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveAll(address,address)": "0a443276",
							"factory()": "c45a0155",
							"feeTier()": "72f5d98a",
							"swapEarnForUSD(uint256,address,address)": "a3fa08e4",
							"swapRouter()": "c31c9c07",
							"swapTokenForUSD(uint256,uint256,address,address)": "8efc0828"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"contract IERC20Standard\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"approveAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Standard\",\"name\":\"stableCoin\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Standard\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"swapEarnForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IV3SwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Standard\",\"name\":\"stableCoin\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Standard\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"swapTokenForUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"@notice Link/usd\",\"kind\":\"dev\",\"methods\":{\"swapTokenForUSD(uint256,uint256,address,address)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"title\":\"CCFL contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapTokenForUSD(uint256,uint256,address,address)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TestSwap.sol\":\"TestSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"IERC20Standard.sol\":{\"keccak256\":\"0x6de74494535348a285871959d6141adadcb56060fead04ad7baaf21fa5e748dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce6237b20eeb6103c81e205dac93ba9bf3d057279f6f4c787c0cdde7f84ea9a\",\"dweb:/ipfs/QmSexRYC5VkuFYHQ9DP5KVwHkPBeMwQBwEjpL1nLsrRLDa\"]},\"IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"TestSwap.sol\":{\"keccak256\":\"0xe1d95b5097480d44695dc80adc920b39a41ed068088f665e6a97f15a77b4078a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc3023855a9c0732e63dc5928a96003508f17c1caf509cc902d6d1946e55368d\",\"dweb:/ipfs/QmetmAjcqKNmc5Q3FQMh7RTogp9YVBqmUwiH2VGMCZM2y6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 917,
								"contract": "TestSwap.sol:TestSwap",
								"label": "swapRouter",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IV3SwapRouter)903"
							},
							{
								"astId": 926,
								"contract": "TestSwap.sol:TestSwap",
								"label": "factory",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IUniswapV3Factory)160"
							}
						],
						"types": {
							"t_contract(IUniswapV3Factory)160": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Factory",
								"numberOfBytes": "20"
							},
							"t_contract(IV3SwapRouter)903": {
								"encoding": "inplace",
								"label": "contract IV3SwapRouter",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"swapTokenForUSD(uint256,uint256,address,address)": {
								"notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:52:17:\n   |\n52 |                 int24 tick,\n   |                 ^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2139,
					"file": "TestSwap.sol",
					"start": 2129
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:53:17:\n   |\n53 |                 uint16 observationIndex,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2180,
					"file": "TestSwap.sol",
					"start": 2157
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:54:17:\n   |\n54 |                 uint16 observationCardinality,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2227,
					"file": "TestSwap.sol",
					"start": 2198
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:55:17:\n   |\n55 |                 uint16 observationCardinalityNext,\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2278,
					"file": "TestSwap.sol",
					"start": 2245
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:56:17:\n   |\n56 |                 uint8 feeProtocol,\n   |                 ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2313,
					"file": "TestSwap.sol",
					"start": 2296
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> TestSwap.sol:57:17:\n   |\n57 |                 bool unlocked\n   |                 ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2344,
					"file": "TestSwap.sol",
					"start": 2331
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "213:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "404:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "426:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "446:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:0"
									},
									"src": "389:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "626:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "635:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "658:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:0"
									},
									"src": "620:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:0"
									},
									"scope": 77,
									"src": "911:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1221:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1266:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:0"
									},
									"scope": 77,
									"src": "1203:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1566:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1581:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1621:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:0"
									},
									"scope": 77,
									"src": "1547:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2375:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:0"
									},
									"scope": 77,
									"src": "2308:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:0"
									},
									"scope": 77,
									"src": "2689:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "203:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2673:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							160
						]
					},
					"id": 161,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:1",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 160,
							"linearizedBaseContracts": [
								160
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "244:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:1",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 87,
									"name": "OwnerChanged",
									"nameLocation": "464:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "493:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "477:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "519:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "503:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:52:1"
									},
									"src": "458:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:1",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 100,
									"name": "PoolCreated",
									"nameLocation": "967:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1036:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1020:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1067:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1052:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 93,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1086:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 95,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1115:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1107:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:147:1"
									},
									"src": "961:165:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:1",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 107,
									"name": "FeeAmountEnabled",
									"nameLocation": "1418:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1450:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 102,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1469:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "1455:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 104,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:47:1"
									},
									"src": "1412:70:1"
								},
								{
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:1",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1665:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:1"
									},
									"scope": 160,
									"src": "1656:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:1",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2073:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2101:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 115,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:12:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2129:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 118,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:7:1"
									},
									"scope": 160,
									"src": "2064:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:1",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2627:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2652:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2676:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2699:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 127,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:74:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2740:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "2732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:14:1"
									},
									"scope": 160,
									"src": "2618:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:1",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3320:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3348:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3372:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3395:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 139,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:74:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3431:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "3423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:14:1"
									},
									"scope": 160,
									"src": "3311:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:1",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3601:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3618:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:16:1"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:1"
									},
									"scope": 160,
									"src": "3592:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:1",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "3981:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4004:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "3997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 153,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4015:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "4009:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 155,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:31:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:1"
									},
									"scope": 160,
									"src": "3972:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 161,
							"src": "234:3805:1",
							"usedErrors": [],
							"usedEvents": [
								87,
								100,
								107
							]
						}
					],
					"src": "45:3995:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							182
						],
						"IUniswapV3PoolActions": [
							292
						],
						"IUniswapV3PoolDerivedState": [
							323
						],
						"IUniswapV3PoolEvents": [
							442
						],
						"IUniswapV3PoolImmutables": [
							482
						],
						"IUniswapV3PoolOwnerActions": [
							508
						],
						"IUniswapV3PoolState": [
							616
						]
					},
					"id": 183,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 162,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 483,
							"src": "71:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 164,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 617,
							"src": "117:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 165,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 324,
							"src": "158:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 293,
							"src": "206:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 509,
							"src": "249:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 183,
							"sourceUnit": 443,
							"src": "297:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 170,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 482,
										"src": "637:24:2"
									},
									"id": 171,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:2"
								},
								{
									"baseName": {
										"id": 172,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "667:19:2"
									},
									"id": 173,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:2"
								},
								{
									"baseName": {
										"id": 174,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 323,
										"src": "692:26:2"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:2"
								},
								{
									"baseName": {
										"id": 176,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 292,
										"src": "724:21:2"
									},
									"id": 177,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:2"
								},
								{
									"baseName": {
										"id": 178,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "751:26:2"
									},
									"id": 179,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:2"
								},
								{
									"baseName": {
										"id": 180,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 442,
										"src": "783:20:2"
									},
									"id": 181,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:2"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 169,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:2",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 182,
							"linearizedBaseContracts": [
								182,
								442,
								508,
								292,
								323,
								616,
								482
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 183,
							"src": "605:203:2",
							"usedErrors": [],
							"usedEvents": [
								333,
								350,
								365,
								380,
								397,
								412,
								419,
								430,
								441
							]
						}
					],
					"src": "45:764:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							196
						]
					},
					"id": 197,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 184,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:3",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 196,
							"linearizedBaseContracts": [
								196
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:3",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1197:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1226:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 189,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "1255:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 191,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:3"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:3"
									},
									"scope": 196,
									"src": "1157:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 197,
							"src": "215:1077:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							292
						]
					},
					"id": 293,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:4",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 292,
							"linearizedBaseContracts": [
								292
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:4",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "442:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 201,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:4"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:4"
									},
									"scope": 292,
									"src": "422:51:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:4",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1536:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1563:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 209,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1588:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 211,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1613:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 213,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1637:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 215,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:4"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1681:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "1698:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:4"
									},
									"scope": 292,
									"src": "1513:202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:4",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2805:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2832:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 227,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2857:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 229,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2882:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 231,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2916:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 233,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:4"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2965:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 236,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 238,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:4"
									},
									"scope": 292,
									"src": "2779:220:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:4",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 243,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3689:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 245,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3714:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 247,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:4"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3753:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3770:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:4"
									},
									"scope": 292,
									"src": "3641:146:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:4",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4836:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4863:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4888:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 261,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4920:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 263,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4955:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:4"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "4999:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 268,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5015:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 270,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:4"
									},
									"scope": 292,
									"src": "4813:218:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:4",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 285,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5723:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5775:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "5800:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 281,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:4"
									},
									"scope": 292,
									"src": "5699:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:4",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "6257:33:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 287,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:4"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:4"
									},
									"scope": 292,
									"src": "6213:88:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 293,
							"src": "173:6130:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6259:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							323
						]
					},
					"id": 324,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 294,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:5",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 323,
							"linearizedBaseContracts": [
								323
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:5",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1403:29:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 297,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 298,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:5"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1481:30:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 301,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 302,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:5",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "1513:51:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 304,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 305,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:5"
									},
									"scope": 323,
									"src": "1386:180:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:5",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 322,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2383:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 310,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 312,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:5"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2477:26:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 315,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2517:37:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 317,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "2568:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 319,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:5"
									},
									"scope": 323,
									"src": "2348:251:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 324,
							"src": "293:2308:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2557:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							442
						]
					},
					"id": 443,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 326,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:6",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 442,
							"linearizedBaseContracts": [
								442
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:6",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 333,
									"name": "Initialize",
									"nameLocation": "551:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "562:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 328,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "584:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 330,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:6"
									},
									"src": "545:51:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:6",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 350,
									"name": "Mint",
									"nameLocation": "1164:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1178:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1202:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1233:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 339,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1266:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 341,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1299:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 343,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1323:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1348:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:6"
									},
									"src": "1158:212:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:6",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 365,
									"name": "Collect",
									"nameLocation": "1880:7:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1897:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1928:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1955:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 356,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1988:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 358,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2021:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 360,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "2046:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 362,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:6"
									},
									"src": "1874:194:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:6",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 380,
									"name": "Burn",
									"nameLocation": "2608:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2622:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2653:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 369,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2686:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 371,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2719:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 373,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2743:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "2768:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:6"
									},
									"src": "2602:188:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:6",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 397,
									"name": "Swap",
									"nameLocation": "3407:4:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3421:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3453:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 386,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3512:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 388,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3536:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 390,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3566:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 392,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "3593:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 394,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:6"
									},
									"src": "3401:209:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:6",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 412,
									"name": "Flash",
									"nameLocation": "4189:5:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4204:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4236:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4271:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4296:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4321:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4344:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:6"
									},
									"src": "4183:181:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:6",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 419,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4876:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 414,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:6",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4922:36:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 416,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:6"
									},
									"src": "4826:139:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:6",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 430,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5367:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 421,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5390:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 423,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5413:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 425,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5436:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 427,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:6"
									},
									"src": "5346:113:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:6",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 441,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5876:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5900:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 434,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5927:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 436,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "5944:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 438,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:6"
									},
									"src": "5854:107:6"
								}
							],
							"scope": 443,
							"src": "159:5804:6",
							"usedErrors": [],
							"usedEvents": [
								333,
								350,
								365,
								380,
								397,
								412,
								419,
								430,
								441
							]
						}
					],
					"src": "45:5919:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							482
						]
					},
					"id": 483,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 444,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 445,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:7",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 482,
							"linearizedBaseContracts": [
								482
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:7",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:7"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "450:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:7"
									},
									"scope": 482,
									"src": "408:51:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:7",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:7"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "624:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:7"
									},
									"scope": 482,
									"src": "583:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:7",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:7"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:7"
									},
									"scope": 482,
									"src": "758:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:7",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 469,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:7"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "941:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 466,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:7"
									},
									"scope": 482,
									"src": "903:46:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:7",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:7"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1364:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 472,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:7"
									},
									"scope": 482,
									"src": "1318:53:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:7",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 481,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:7"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "1799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 478,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:7"
									},
									"scope": 482,
									"src": "1745:63:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 483,
							"src": "224:1586:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1766:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							508
						]
					},
					"id": 509,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 484,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 485,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:8",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:8",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "464:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 487,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "484:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 489,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:8"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:8"
									},
									"scope": 508,
									"src": "440:73:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:8",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1041:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1068:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 497,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1102:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 499,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:8"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1151:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 502,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "1168:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 504,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:8"
									},
									"scope": 508,
									"src": "1007:178:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 509,
							"src": "187:1000:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1143:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							616
						]
					},
					"id": 617,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:9",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:9",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:9"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1498:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 514,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1532:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 516,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1556:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 518,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1593:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 520,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1636:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 522,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1683:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 524,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1714:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:9"
									},
									"scope": 616,
									"src": "1421:317:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:9"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "1972:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:9"
									},
									"scope": 616,
									"src": "1917:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:9",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:9"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2215:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:9"
									},
									"scope": 616,
									"src": "2160:64:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:9",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:9"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2429:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 544,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "2445:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 546,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:9"
									},
									"scope": 616,
									"src": "2382:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:9",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:9"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "2666:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 552,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:9"
									},
									"scope": 616,
									"src": "2622:53:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:9",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "3945:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 557,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:9"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4017:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 560,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4053:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 562,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4086:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4129:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4172:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 568,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4213:38:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 570,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4265:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 572,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "4300:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:9"
									},
									"scope": 616,
									"src": "3930:397:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:9",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4457:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 579,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:9"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4500:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:9"
									},
									"scope": 616,
									"src": "4437:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:9",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5239:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 587,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:9"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5312:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 590,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5344:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5390:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5436:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 596,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "5469:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 598,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:9"
									},
									"scope": 616,
									"src": "5220:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:9",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6281:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:9"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6356:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 606,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6391:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 608,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:9",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6425:41:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 610,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6480:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:9"
									},
									"scope": 616,
									"src": "6259:248:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 617,
							"src": "240:6269:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:6465:9"
				},
				"id": 9
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"TransferHelper": [
							787
						]
					},
					"id": 788,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 619,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 788,
							"sourceUnit": 78,
							"src": "71:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "690:229:10",
										"statements": [
											{
												"assignments": [
													632,
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 667,
														"src": "701:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 631,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 667,
														"src": "715:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 633,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 647,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 639,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "782:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:10",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 76,
																		"src": "782:19:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 642,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "812:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 643,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "818:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 644,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "822:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 637,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 635,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "748:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 649,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "847:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 650,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "859:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 656,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 634,
																					"src": "890:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 658,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 657,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 659,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 654,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 662,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 648,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "839:73:10"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:10",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "596:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "619:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "641:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "661:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:10"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:10"
									},
									"scope": 787,
									"src": "561:358:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "1314:206:10",
										"statements": [
											{
												"assignments": [
													679,
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "1325:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 678,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "1339:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 680,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 686,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "1394:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:10",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 44,
																		"src": "1394:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 689,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "1420:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 690,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "1424:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 684,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 682,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "1360:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "1449:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 696,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 681,
																					"src": "1461:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 702,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 681,
																					"src": "1492:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 704,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 703,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 705,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 700,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 701,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:10"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:10",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1242:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1265:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "1285:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:10"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:10"
									},
									"scope": 787,
									"src": "1211:309:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "1975:205:10",
										"statements": [
											{
												"assignments": [
													725,
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "1986:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 724,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:10",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "2000:17:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 726,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 732,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "2055:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:10",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "2055:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:10",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 735,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2080:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 736,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "2084:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 730,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:10",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 728,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "2021:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:10",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 741,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2109:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 742,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "2121:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:10",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 748,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "2152:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 750,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 749,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:10",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 751,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 746,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:10",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 754,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 740,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:10"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:10",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1903:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1926:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "1946:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:10"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:10"
									},
									"scope": 787,
									"src": "1873:307:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "2431:104:10",
										"statements": [
											{
												"assignments": [
													769,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 769,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "2442:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 768,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 779,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 774,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 770,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2460:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 772,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2475:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "2513:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:10"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:10",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2395:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2407:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:10"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:10"
									},
									"scope": 787,
									"src": "2370:165:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 788,
							"src": "129:2408:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:10"
				},
				"id": 10
			},
			"IERC20Standard.sol": {
				"ast": {
					"absolutePath": "IERC20Standard.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Standard": [
							811
						]
					},
					"id": 812,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 789,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 790,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 812,
							"sourceUnit": 78,
							"src": "58:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 791,
										"name": "IERC20",
										"nameLocations": [
											"144:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "144:6:11"
									},
									"id": 792,
									"nodeType": "InheritanceSpecifier",
									"src": "144:6:11"
								}
							],
							"canonicalName": "IERC20Standard",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 811,
							"linearizedBaseContracts": [
								811,
								77
							],
							"name": "IERC20Standard",
							"nameLocation": "126:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "157:54:11",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "225:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:11"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "255:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 795,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "255:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "254:15:11"
									},
									"scope": 811,
									"src": "216:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "276:102:11",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 804,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "392:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "398:2:11"
									},
									"returnParameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "424:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "424:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "423:15:11"
									},
									"scope": 811,
									"src": "383:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "445:622:11",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1081:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:2:11"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "1115:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 807,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1115:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1114:7:11"
									},
									"scope": 811,
									"src": "1072:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 812,
							"src": "116:1008:11",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "33:1092:11"
				},
				"id": 11
			},
			"IV3SwapRouter.sol": {
				"ast": {
					"absolutePath": "IV3SwapRouter.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							196
						],
						"IV3SwapRouter": [
							903
						]
					},
					"id": 904,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 813,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:12"
						},
						{
							"id": 814,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:12"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 815,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 197,
							"src": "91:83:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 817,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"307:22:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "307:22:12"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "307:22:12"
								}
							],
							"canonicalName": "IV3SwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 816,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:12",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								196
							],
							"name": "IV3SwapRouter",
							"nameLocation": "290:13:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IV3SwapRouter.ExactInputSingleParams",
									"id": 833,
									"members": [
										{
											"constant": false,
											"id": 820,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "384:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "376:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 819,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 822,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "409:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "401:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 821,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 824,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "434:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "427:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 823,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "427:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 826,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "455:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "447:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 825,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "447:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 828,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "482:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "474:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 830,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "508:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "500:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 829,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 832,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "542:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 833,
											"src": "534:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 831,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "343:22:12",
									"nodeType": "StructDefinition",
									"scope": 903,
									"src": "336:230:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "572:439:12",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "04e45aaf",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "1025:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1074:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1042:38:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 836,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 835,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"1042:22:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 833,
														"src": "1042:22:12"
													},
													"referencedDeclaration": 833,
													"src": "1042:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:40:12"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1116:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "1108:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:19:12"
									},
									"scope": 903,
									"src": "1016:111:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactInputParams",
									"id": 851,
									"members": [
										{
											"constant": false,
											"id": 844,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1173:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "1167:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 843,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1167:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1195:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "1187:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 845,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1222:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "1214:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 847,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1214:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 850,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1248:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 851,
											"src": "1240:24:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 849,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1240:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1140:16:12",
									"nodeType": "StructDefinition",
									"scope": 903,
									"src": "1133:138:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "1277:462:12",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "b858183f",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1753:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1790:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1764:32:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$851_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 854,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 853,
														"name": "ExactInputParams",
														"nameLocations": [
															"1764:16:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 851,
														"src": "1764:16:12"
													},
													"referencedDeclaration": 851,
													"src": "1764:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$851_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:34:12"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1832:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "1824:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:19:12"
									},
									"scope": 903,
									"src": "1744:99:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputSingleParams",
									"id": 875,
									"members": [
										{
											"constant": false,
											"id": 862,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1898:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "1890:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 861,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1890:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 864,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1923:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "1915:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 863,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1915:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 866,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1948:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "1941:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 865,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1941:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1969:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "1961:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 867,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1961:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1996:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "1988:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 869,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1988:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2023:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "2015:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 871,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "2056:17:12",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "2048:25:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 873,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2048:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1856:23:12",
									"nodeType": "StructDefinition",
									"scope": 903,
									"src": "1849:231:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2086:304:12",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n that may remain in the router after the swap.\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "5023b4df",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2404:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2455:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2422:39:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2422:23:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 875,
														"src": "2422:23:12"
													},
													"referencedDeclaration": 875,
													"src": "2422:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:41:12"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2497:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2489:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:18:12"
									},
									"scope": 903,
									"src": "2395:112:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputParams",
									"id": 893,
									"members": [
										{
											"constant": false,
											"id": 886,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2554:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 893,
											"src": "2548:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 885,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2548:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 888,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2576:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 893,
											"src": "2568:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 887,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2568:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 890,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2603:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 893,
											"src": "2595:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2595:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 892,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2630:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 893,
											"src": "2622:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 891,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2622:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2520:17:12",
									"nodeType": "StructDefinition",
									"scope": 903,
									"src": "2513:139:12",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "2658:338:12",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n that may remain in the router after the swap.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "09b81346",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "3010:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3049:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3022:33:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$893_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 896,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 895,
														"name": "ExactOutputParams",
														"nameLocations": [
															"3022:17:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "3022:17:12"
													},
													"referencedDeclaration": 893,
													"src": "3022:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$893_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:35:12"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3091:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3083:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:18:12"
									},
									"scope": 903,
									"src": "3001:100:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "280:2823:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:3059:12"
				},
				"id": 12
			},
			"TestSwap.sol": {
				"ast": {
					"absolutePath": "TestSwap.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Standard": [
							811
						],
						"IUniswapV3Factory": [
							160
						],
						"IUniswapV3Pool": [
							182
						],
						"IUniswapV3PoolActions": [
							292
						],
						"IUniswapV3PoolDerivedState": [
							323
						],
						"IUniswapV3PoolEvents": [
							442
						],
						"IUniswapV3PoolImmutables": [
							482
						],
						"IUniswapV3PoolOwnerActions": [
							508
						],
						"IUniswapV3PoolState": [
							616
						],
						"IUniswapV3SwapCallback": [
							196
						],
						"IV3SwapRouter": [
							903
						],
						"TestSwap": [
							1165
						],
						"TransferHelper": [
							787
						]
					},
					"id": 1166,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:13"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 183,
							"src": "65:66:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 161,
							"src": "132:69:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 908,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 788,
							"src": "202:70:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Standard.sol",
							"file": "./IERC20Standard.sol",
							"id": 909,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 812,
							"src": "273:30:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IV3SwapRouter.sol",
							"file": "./IV3SwapRouter.sol",
							"id": 910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 904,
							"src": "304:29:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 911,
								"nodeType": "StructuredDocumentation",
								"src": "335:58:13",
								"text": "@title CCFL contract\n @author\n @notice Link/usd"
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165
							],
							"name": "TestSwap",
							"nameLocation": "402:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 917,
									"mutability": "mutable",
									"name": "swapRouter",
									"nameLocation": "460:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "439:99:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
										"typeString": "contract IV3SwapRouter"
									},
									"typeName": {
										"id": 913,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 912,
											"name": "IV3SwapRouter",
											"nameLocations": [
												"439:13:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 903,
											"src": "439:13:13"
										},
										"referencedDeclaration": 903,
										"src": "439:13:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307833624641343736394642303965656643356138306436453837633342394336353066374165343845",
												"id": 915,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "495:42:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 914,
											"name": "IV3SwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 903,
											"src": "481:13:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$903_$",
												"typeString": "type(contract IV3SwapRouter)"
											}
										},
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "481:57:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "72f5d98a",
									"id": 920,
									"mutability": "constant",
									"name": "feeTier",
									"nameLocation": "567:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "544:37:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint24",
										"typeString": "uint24"
									},
									"typeName": {
										"id": 918,
										"name": "uint24",
										"nodeType": "ElementaryTypeName",
										"src": "544:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint24",
											"typeString": "uint24"
										}
									},
									"value": {
										"hexValue": "33303030",
										"id": 919,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "577:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3000_by_1",
											"typeString": "int_const 3000"
										},
										"value": "3000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c45a0155",
									"id": 926,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "612:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "587:104:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Factory_$160",
										"typeString": "contract IUniswapV3Factory"
									},
									"typeName": {
										"id": 922,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 921,
											"name": "IUniswapV3Factory",
											"nameLocations": [
												"587:17:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 160,
											"src": "587:17:13"
										},
										"referencedDeclaration": 160,
										"src": "587:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$160",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "307830323237363238663346303233626230423938306236374435323835373163393563364461433163",
												"id": 924,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "648:42:13",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"value": "0x0227628f3F023bb0B980b67D528571c95c6DaC1c"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 923,
											"name": "IUniswapV3Factory",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 160,
											"src": "630:17:13",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$160_$",
												"typeString": "type(contract IUniswapV3Factory)"
											}
										},
										"id": 925,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "630:61:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Factory_$160",
											"typeString": "contract IUniswapV3Factory"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "712:2:13",
										"statements": []
									},
									"id": 930,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "709:2:13"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "712:0:13"
									},
									"scope": 1165,
									"src": "698:16:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "1539:1937:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 951,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "1794:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1786:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1786:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1786:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "1807:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 946,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "1765:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Standard_$811",
																"typeString": "contract IERC20Standard"
															}
														},
														"id": 948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1778:7:13",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "1765:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1765:58:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "1765:58:13"
											},
											{
												"assignments": [
													957
												],
												"declarations": [
													{
														"constant": false,
														"id": 957,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "1842:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "1834:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 956,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1834:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 962,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "1886:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1878:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 960,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1878:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1878:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 966,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "1921:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1913:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 964,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1913:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1913:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "feeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "1946:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 958,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "1849:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Factory_$160",
																"typeString": "contract IUniswapV3Factory"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1857:7:13",
														"memberName": "getPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "1849:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view external returns (address)"
														}
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:114:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1834:129:13"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "1981:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "1974:10:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 971,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "1974:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 978,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 974,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "2002:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 973,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "1987:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$182_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1987:20:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$182",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2008:3:13",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 469,
														"src": "1987:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
															"typeString": "function () view external returns (uint24)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1974:39:13"
											},
											{
												"assignments": [
													980
												],
												"declarations": [
													{
														"constant": false,
														"id": 980,
														"mutability": "mutable",
														"name": "sqrtPriceLimitX96",
														"nameLocation": "2032:17:13",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2024:25:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 979,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2024:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"nodeType": "VariableDeclarationStatement",
												"src": "2024:25:13"
											},
											{
												"id": 1006,
												"nodeType": "Block",
												"src": "2059:387:13",
												"statements": [
													{
														"assignments": [
															983,
															985,
															987,
															989,
															991,
															993,
															995
														],
														"declarations": [
															{
																"constant": false,
																"id": 983,
																"mutability": "mutable",
																"name": "sqrtPriceX96",
																"nameLocation": "2099:12:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2091:20:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"typeName": {
																	"id": 982,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "2091:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 985,
																"mutability": "mutable",
																"name": "tick",
																"nameLocation": "2135:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2129:10:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"typeName": {
																	"id": 984,
																	"name": "int24",
																	"nodeType": "ElementaryTypeName",
																	"src": "2129:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 987,
																"mutability": "mutable",
																"name": "observationIndex",
																"nameLocation": "2164:16:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2157:23:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"typeName": {
																	"id": 986,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "2157:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 989,
																"mutability": "mutable",
																"name": "observationCardinality",
																"nameLocation": "2205:22:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2198:29:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"typeName": {
																	"id": 988,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 991,
																"mutability": "mutable",
																"name": "observationCardinalityNext",
																"nameLocation": "2252:26:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2245:33:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																},
																"typeName": {
																	"id": 990,
																	"name": "uint16",
																	"nodeType": "ElementaryTypeName",
																	"src": "2245:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 993,
																"mutability": "mutable",
																"name": "feeProtocol",
																"nameLocation": "2302:11:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2296:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 992,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "2296:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															},
															{
																"constant": false,
																"id": 995,
																"mutability": "mutable",
																"name": "unlocked",
																"nameLocation": "2336:8:13",
																"nodeType": "VariableDeclaration",
																"scope": 1006,
																"src": "2331:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"typeName": {
																	"id": 994,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "2331:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1001,
														"initialValue": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"arguments": [
																		{
																			"id": 997,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 957,
																			"src": "2376:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 996,
																		"name": "IUniswapV3Pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "2361:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$182_$",
																			"typeString": "type(contract IUniswapV3Pool)"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2361:20:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV3Pool_$182",
																		"typeString": "contract IUniswapV3Pool"
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2382:5:13",
																"memberName": "slot0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 529,
																"src": "2361:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																	"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2361:28:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2073:316:13"
													},
													{
														"expression": {
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1002,
																"name": "sqrtPriceLimitX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 980,
																"src": "2403:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1003,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "2423:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"src": "2403:32:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"id": 1005,
														"nodeType": "ExpressionStatement",
														"src": "2403:32:13"
													}
												]
											},
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "2501:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "2456:51:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
														},
														"typeName": {
															"id": 1010,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1009,
																"name": "IV3SwapRouter.ExactOutputSingleParams",
																"nameLocations": [
																	"2456:13:13",
																	"2470:23:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 875,
																"src": "2456:37:13"
															},
															"referencedDeclaration": 875,
															"src": "2456:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1029,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1016,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 941,
																	"src": "2596:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2588:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1014,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2588:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2588:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1020,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "2645:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2637:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1018,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2637:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2637:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1022,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "2679:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 1023,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2711:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2715:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2711:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "2750:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1026,
															"name": "amountInMaximum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "2794:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1027,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2846:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1012,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2510:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$903_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2537:23:13",
														"memberName": "ExactOutputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "2510:50:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$875_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactOutputSingleParams storage pointer)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"2579:7:13",
														"2627:8:13",
														"2674:3:13",
														"2700:9:13",
														"2739:9:13",
														"2777:15:13",
														"2827:17:13"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountOut",
														"amountInMaximum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "2510:352:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2456:406:13"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2975:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1033,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "3015:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactOutputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactOutputSingleParams_$875_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactOutputSingleParams memory"
																}
															],
															"expression": {
																"id": 1031,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "2986:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																	"typeString": "contract IV3SwapRouter"
																}
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2997:17:13",
															"memberName": "exactOutputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 884,
															"src": "2986:28:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$875_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IV3SwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2986:36:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2975:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "2975:47:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "3282:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1038,
														"name": "amountInMaximum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "3293:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3282:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1055,
												"nodeType": "IfStatement",
												"src": "3278:192:13",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "3310:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1045,
																				"name": "tokenAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 941,
																				"src": "3376:12:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20Standard_$811",
																					"typeString": "contract IERC20Standard"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20Standard_$811",
																					"typeString": "contract IERC20Standard"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3368:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3368:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3368:21:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1049,
																				"name": "swapRouter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "3415:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																					"typeString": "contract IV3SwapRouter"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																					"typeString": "contract IV3SwapRouter"
																				}
																			],
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3407:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1047,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3407:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3407:19:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3444:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 1040,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "3324:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$787_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3339:11:13",
																	"memberName": "safeApprove",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 760,
																	"src": "3324:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3324:135:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "3324:135:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "720:617:13",
										"text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
									},
									"functionSelector": "8efc0828",
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForUSD",
									"nameLocation": "1351:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1384:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1376:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "amountInMaximum",
												"nameLocation": "1411:15:13",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1403:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "stableCoin",
												"nameLocation": "1451:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1436:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Standard_$811",
													"typeString": "contract IERC20Standard"
												},
												"typeName": {
													"id": 937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 936,
														"name": "IERC20Standard",
														"nameLocations": [
															"1436:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 811,
														"src": "1436:14:13"
													},
													"referencedDeclaration": 811,
													"src": "1436:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Standard_$811",
														"typeString": "contract IERC20Standard"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "1486:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1471:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Standard_$811",
													"typeString": "contract IERC20Standard"
												},
												"typeName": {
													"id": 940,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 939,
														"name": "IERC20Standard",
														"nameLocations": [
															"1471:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 811,
														"src": "1471:14:13"
													},
													"referencedDeclaration": 811,
													"src": "1471:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Standard_$811",
														"typeString": "contract IERC20Standard"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:138:13"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1529:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1521:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:18:13"
									},
									"scope": 1165,
									"src": "1342:2134:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1137,
										"nodeType": "Block",
										"src": "3645:1812:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1075,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "4162:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4154:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1073,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4154:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4154:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1079,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "4197:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4189:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4189:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4189:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "4222:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1070,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "4114:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$787_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4129:11:13",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "4114:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4114:126:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "4114:126:13"
											},
											{
												"assignments": [
													1085
												],
												"declarations": [
													{
														"constant": false,
														"id": 1085,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4259:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "4251:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1084,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4251:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1090,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "4303:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4295:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1088,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4295:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4295:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1094,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "4338:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4330:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1092,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4330:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4330:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "feeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 920,
															"src": "4363:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1086,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "4266:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Factory_$160",
																"typeString": "contract IUniswapV3Factory"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4274:7:13",
														"memberName": "getPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "4266:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view external returns (address)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:114:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4251:129:13"
											},
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4398:3:13",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "4391:10:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1099,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "4391:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1102,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "4419:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1101,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "4404:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$182_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4404:20:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$182",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4425:3:13",
														"memberName": "fee",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 469,
														"src": "4404:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint24_$",
															"typeString": "function () view external returns (uint24)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4404:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4391:39:13"
											},
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "4945:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1137,
														"src": "4901:50:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 1110,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1109,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"4901:13:13",
																	"4915:22:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 833,
																"src": "4901:36:13"
															},
															"referencedDeclaration": 833,
															"src": "4901:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1116,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "5039:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5031:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5031:21:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1120,
																	"name": "stableCoin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "5088:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																],
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5080:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5080:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5080:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "5122:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"expression": {
																"id": 1123,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5154:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5158:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5154:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1059,
															"src": "5192:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5236:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 1127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5274:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 1112,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "4954:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$903_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4981:22:13",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 833,
														"src": "4954:49:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$833_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"5022:7:13",
														"5070:8:13",
														"5117:3:13",
														"5143:9:13",
														"5182:8:13",
														"5218:16:13",
														"5255:17:13"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "4954:336:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4901:389:13"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1130,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "5403:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1133,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "5443:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$833_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 1131,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "5415:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IV3SwapRouter_$903",
																	"typeString": "contract IV3SwapRouter"
																}
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5426:16:13",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 842,
															"src": "5415:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$833_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5415:35:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5403:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "5403:47:13"
											}
										]
									},
									"functionSelector": "a3fa08e4",
									"id": 1138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapEarnForUSD",
									"nameLocation": "3491:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3523:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3515:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3515:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "stableCoin",
												"nameLocation": "3556:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3541:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Standard_$811",
													"typeString": "contract IERC20Standard"
												},
												"typeName": {
													"id": 1061,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1060,
														"name": "IERC20Standard",
														"nameLocations": [
															"3541:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 811,
														"src": "3541:14:13"
													},
													"referencedDeclaration": 811,
													"src": "3541:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Standard_$811",
														"typeString": "contract IERC20Standard"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "3591:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3576:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Standard_$811",
													"typeString": "contract IERC20Standard"
												},
												"typeName": {
													"id": 1064,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1063,
														"name": "IERC20Standard",
														"nameLocations": [
															"3576:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 811,
														"src": "3576:14:13"
													},
													"referencedDeclaration": 811,
													"src": "3576:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Standard_$811",
														"typeString": "contract IERC20Standard"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:104:13"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3634:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1138,
												"src": "3626:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3625:19:13"
									},
									"scope": 1165,
									"src": "3482:1975:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "5536:86:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "5567:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1154,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5608:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TestSwap_$1165",
																				"typeString": "contract TestSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TestSwap_$1165",
																				"typeString": "contract TestSwap"
																			}
																		],
																		"id": 1153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5600:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1152,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5600:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5600:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1150,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "5577:12:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Standard_$811",
																		"typeString": "contract IERC20Standard"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5590:9:13",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "5577:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5577:37:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1146,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "5546:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Standard_$811",
																"typeString": "contract IERC20Standard"
															}
														},
														"id": 1148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5559:7:13",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "5546:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "ExpressionStatement",
												"src": "5546:69:13"
											}
										]
									},
									"functionSelector": "0a443276",
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAll",
									"nameLocation": "5472:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5498:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "5483:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Standard_$811",
													"typeString": "contract IERC20Standard"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC20Standard",
														"nameLocations": [
															"5483:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 811,
														"src": "5483:14:13"
													},
													"referencedDeclaration": 811,
													"src": "5483:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Standard_$811",
														"typeString": "contract IERC20Standard"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5520:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "5512:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5512:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:47:13"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5536:0:13"
									},
									"scope": 1165,
									"src": "5463:159:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "5655:2:13",
										"statements": []
									},
									"id": 1164,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5635:2:13"
									},
									"returnParameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5655:0:13"
									},
									"scope": 1165,
									"src": "5628:29:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1166,
							"src": "393:5266:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:5621:13"
				},
				"id": 13
			}
		}
	}
}