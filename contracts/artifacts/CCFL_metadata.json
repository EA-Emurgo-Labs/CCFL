{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "ERC1167FailedCreateClone",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidInitialization",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotInitializing",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateralAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "contract IERC20Standard",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "AddCollateral",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "loanAddress",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateralAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "contract IERC20Standard",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isYieldGenerating",
						"type": "bool"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "CreateLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint64",
						"name": "version",
						"type": "uint64"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateralAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "contract IERC20Standard",
						"name": "collateral",
						"type": "address"
					}
				],
				"name": "Liquidate",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "debtRemain",
						"type": "uint256"
					}
				],
				"name": "RepayLoan",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateralAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "contract IERC20Standard",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "WithdrawAllCollateral",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "collateralAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "contract IERC20Standard",
						"name": "collateral",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "WithdrawAllCollateralByAdmin",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "loanId",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isPaid",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "amount",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "isClosed",
								"type": "bool"
							},
							{
								"internalType": "address",
								"name": "borrower",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isLiquidated",
								"type": "bool"
							},
							{
								"internalType": "contract IERC20Standard",
								"name": "stableCoin",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "isFinalty",
								"type": "bool"
							},
							{
								"internalType": "bool",
								"name": "isFiat",
								"type": "bool"
							}
						],
						"indexed": false,
						"internalType": "struct DataTypes.Loan",
						"name": "loanInfo",
						"type": "tuple"
					}
				],
				"name": "WithdrawLoan",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "aTokens",
				"outputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "aaveAddressProvider",
				"outputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountCollateral",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_collateral",
						"type": "address"
					}
				],
				"name": "addCollateral",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountETH",
						"type": "uint256"
					}
				],
				"name": "addCollateralByETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amountCollateral",
						"type": "uint256"
					}
				],
				"name": "addCollateralHealthFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "ccflActiveCollaterals",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "ccflActivePoolStableCoins",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ccflLoan",
				"outputs": [
					{
						"internalType": "contract ICCFLLoan",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "ccflPoolStableCoins",
				"outputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "ccflPools",
				"outputs": [
					{
						"internalType": "contract ICCFLPool",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard[]",
						"name": "array",
						"type": "address[]"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "el",
						"type": "address"
					}
				],
				"name": "checkExistElement",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_collateral",
						"type": "address"
					}
				],
				"name": "checkMinimalCollateralForLoan",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "collateralTokens",
				"outputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "collaterals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountCollateral",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_collateral",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_isYieldGenerating",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_isFiat",
						"type": "bool"
					}
				],
				"name": "createLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_amountETH",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "_isYieldGenerating",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_isFiat",
						"type": "bool"
					}
				],
				"name": "createLoanByETH",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "earnBorrower",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "earnLender",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "earnPlatform",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "factory",
				"outputs": [
					{
						"internalType": "contract IUniswapV3Factory",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "getHealthFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "isPool",
						"type": "bool"
					}
				],
				"name": "getLatestPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "getLoanAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					}
				],
				"name": "getLoanIds",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_ccflPoolStableCoin",
						"type": "address[]"
					},
					{
						"internalType": "contract AggregatorV3Interface[]",
						"name": "_poolAggregators",
						"type": "address[]"
					},
					{
						"internalType": "contract ICCFLPool[]",
						"name": "_ccflPools",
						"type": "address[]"
					},
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_collateralTokens",
						"type": "address[]"
					},
					{
						"internalType": "contract AggregatorV3Interface[]",
						"name": "_collateralAggregators",
						"type": "address[]"
					},
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_aTokens",
						"type": "address[]"
					},
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "_aaveAddressProvider",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_maxLTV",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_liquidationThreshold",
						"type": "uint256"
					},
					{
						"internalType": "contract ICCFLLoan",
						"name": "_ccflLoan",
						"type": "address"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "isPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "liquidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidationThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "liquidator",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "loandIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "maxLTV",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "operators",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "penaltyLender",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "penaltyLiquidator",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "penaltyPlatform",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "platform",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "priceFeeds",
				"outputs": [
					{
						"internalType": "contract AggregatorV3Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "",
						"type": "address"
					}
				],
				"name": "pricePoolFeeds",
				"outputs": [
					{
						"internalType": "contract AggregatorV3Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "repayHealthFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					},
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					}
				],
				"name": "repayLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IPoolAddressesProvider",
						"name": "_aaveAddressProvider",
						"type": "address"
					}
				],
				"name": "setAaveProvider",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "_token",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "_isActived",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "_isPoolToken",
						"type": "bool"
					}
				],
				"name": "setActiveToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ICCFLLoan",
						"name": "_loan",
						"type": "address"
					}
				],
				"name": "setCCFLLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_collateralTokens",
						"type": "address[]"
					},
					{
						"internalType": "contract AggregatorV3Interface[]",
						"name": "_collateralAggregators",
						"type": "address[]"
					},
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_aTokens",
						"type": "address[]"
					}
				],
				"name": "setCollaterals",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_borrower",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_platform",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lender",
						"type": "uint256"
					}
				],
				"name": "setEarnShare",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_isActived",
						"type": "bool"
					}
				],
				"name": "setEnableETHNative",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "_addresses",
						"type": "address[]"
					},
					{
						"internalType": "bool[]",
						"name": "_isActives",
						"type": "bool[]"
					}
				],
				"name": "setOperators",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_paused",
						"type": "bool"
					}
				],
				"name": "setPaused",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_platform",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_liquidator",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_lender",
						"type": "uint256"
					}
				],
				"name": "setPenalty",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_platform",
						"type": "address"
					}
				],
				"name": "setPlatformAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard[]",
						"name": "_ccflPoolStableCoin",
						"type": "address[]"
					},
					{
						"internalType": "contract AggregatorV3Interface[]",
						"name": "_poolAggregators",
						"type": "address[]"
					},
					{
						"internalType": "contract ICCFLPool[]",
						"name": "_ccflPools",
						"type": "address[]"
					}
				],
				"name": "setPools",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract ISwapRouter",
						"name": "_swapRouter",
						"type": "address"
					},
					{
						"internalType": "contract IUniswapV3Factory",
						"name": "_factory",
						"type": "address"
					}
				],
				"name": "setSwapRouter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxLTV",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_liquidationThreshold",
						"type": "uint256"
					}
				],
				"name": "setThreshold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IWETH",
						"name": "_iWETH",
						"type": "address"
					}
				],
				"name": "setWETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "userLoans",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "wETH",
				"outputs": [
					{
						"internalType": "contract IWETH",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "withdrawAllCollateral",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isETH",
						"type": "bool"
					}
				],
				"name": "withdrawAllCollateralByAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "withdrawFiatLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "withdrawLiquidityByAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IERC20Standard",
						"name": "_stableCoin",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_loanId",
						"type": "uint256"
					}
				],
				"name": "withdrawLoan",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"author": "@notice Link/usd",
			"errors": {
				"ERC1167FailedCreateClone()": [
					{
						"details": "A clone instance deployment failed."
					}
				],
				"InvalidInitialization()": [
					{
						"details": "The contract is already initialized."
					}
				],
				"NotInitializing()": [
					{
						"details": "The contract is not initializing."
					}
				]
			},
			"events": {
				"Initialized(uint64)": {
					"details": "Triggered when the contract has been initialized or reinitialized."
				}
			},
			"kind": "dev",
			"methods": {},
			"title": "CCFL contract",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"CCFL.sol": "CCFL"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@aave/core-v3/contracts/interfaces/IPool.sol": {
			"keccak256": "0xbfd2077251c8dc766a56d45f4b03eb07f3441323e79c0f794efea3657a99747f",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://c6ff6221de0ea877932c73c0b99d3e4535f293053ae44f9f9d6b9d265e9af2f6",
				"dweb:/ipfs/QmSTaEKrhz1xNVnx4oBzWw8DenYPShVzJoP1A9GTEWkAzX"
			]
		},
		"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol": {
			"keccak256": "0x33d4308d9407b4ee2297fc4ba5acce1a96a6c658189e2778a4f6b90e032fb3b5",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://978336a2a40229ccc7749344be890862ea12e17e9fffe5bb977ba3841de07b5a",
				"dweb:/ipfs/QmScNrQfDSPg1afJmkCty6fZkETUrWTmEXWeTmHoe7mSqa"
			]
		},
		"@aave/core-v3/contracts/misc/interfaces/IWETH.sol": {
			"keccak256": "0x77edc81addcbe1acef487437e6a4d83369d6f09fd40e6fdbdd967cc16a9fb94c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://557eb552b7d334ebe97191574bd0b15d1804122268cf55933581e34496b578a4",
				"dweb:/ipfs/QmZrQ8WXv6ZVXst1k46q649kuLR6ydA1pwwwK2r5Qw6Pzr"
			]
		},
		"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol": {
			"keccak256": "0x771cb99fd8519c974f7e12130387c4d9a997a6e8d0ac10e4303b842fe53efa88",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0f41689d1d58bc13678c749bae8830f5a8b19b89cd135e962bf07d483350f828",
				"dweb:/ipfs/QmQSNGDxjYGqT1GU2CZzsWUTNcAtcfkg1jDGTH516nCAfN"
			]
		},
		"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
			"keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
				"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
			]
		},
		"@openzeppelin/contracts/proxy/Clones.sol": {
			"keccak256": "0xd18408af8a91bedb3d56343eeb9b30eb852e6dea93a5e2d5c6db9ca4cb905155",
			"license": "MIT",
			"urls": [
				"bzz-raw://061475b7302a732dc598907790f407417551c2b13e89daa57b3698489ef5484b",
				"dweb:/ipfs/QmdX5qmk3VSniSErFuD4aVawQxUi2MuUbP7spPcHddPfcX"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/utils/math/SafeCast.sol": {
			"keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
			"license": "MIT",
			"urls": [
				"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
				"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
			"keccak256": "0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2",
				"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
			"keccak256": "0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5",
				"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
			"keccak256": "0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652",
				"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
			"keccak256": "0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5",
				"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
			"keccak256": "0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7",
				"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
			"keccak256": "0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03",
				"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
			"keccak256": "0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047",
				"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
			"keccak256": "0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735",
				"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u"
			]
		},
		"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
			"keccak256": "0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f",
				"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg"
			]
		},
		"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
			"keccak256": "0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53",
				"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM"
			]
		},
		"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
			"keccak256": "0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2",
				"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v"
			]
		},
		"CCFL.sol": {
			"keccak256": "0x4b45a9667353f5f4739abbf7ebf49db389b0bf98b3779015ca10026ed4193534",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://6a33337a8c3f89f53156d20f88f0be56ac01767ef58d04811540a9030f25bc4c",
				"dweb:/ipfs/QmeynhcLqCAk6AHfZwoBTmzH1xs5HqUSpR4yJB4aMiPqMu"
			]
		},
		"DataTypes.sol": {
			"keccak256": "0xadf06b0957ff63350fdf59597d6fbaf8331c595960a88e1bc8f1d3cb9ec7b505",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://c740360c1d539d9c73b314d09e7b593647bde496e96c327ac4e99a42aa867cf1",
				"dweb:/ipfs/QmYxS2ZRpJkN5r2pj7c9FvSeq8uJXfRk3iQexwQzRHfSap"
			]
		},
		"ICCFL.sol": {
			"keccak256": "0x80d35c723087a707666c60472dbdc726657619cc1c255aab675240889c3f59b0",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://26d4f6cd5d345563b039be15f232cb2cb06087b0f96f5856e32ea6c0d85aeeb8",
				"dweb:/ipfs/QmY2qSwSF1tnyxR7vKneD61mVFHmwbBvqsWuMTaVTttXpn"
			]
		},
		"ICCFLLoan.sol": {
			"keccak256": "0x77e450d8ba709b04247be9028bee66aa1d0b967cb777f6e49e47242cf4674823",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://e8758a4d0b8d97474d876026c8d9055a3b9c828ef00644d43d556ce38009f1d1",
				"dweb:/ipfs/QmbyZnsUnUJJFjBkXYnPH37ZkRddZyqTNZzTKLdikKW6NZ"
			]
		},
		"ICCFLPool.sol": {
			"keccak256": "0x98460eb11f1770e71096a99e31f719098768405e0eb3f278b54b8ce20f393b38",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://776136380e2dc85c37ec5a4eb20669b2c1ad74204b08a30d1102e1eece1ecf20",
				"dweb:/ipfs/QmNtbSkR1E66dMQx4Pvxh5J5sYhW2FXvM3xWHQCkziyHk5"
			]
		},
		"IERC20Standard.sol": {
			"keccak256": "0x6de74494535348a285871959d6141adadcb56060fead04ad7baaf21fa5e748dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://dce6237b20eeb6103c81e205dac93ba9bf3d057279f6f4c787c0cdde7f84ea9a",
				"dweb:/ipfs/QmSexRYC5VkuFYHQ9DP5KVwHkPBeMwQBwEjpL1nLsrRLDa"
			]
		},
		"IReserveInterestRateStrategy.sol": {
			"keccak256": "0x8a17bf2a0d383bf6bea98d2a9d8085c2ebc785484ae5083947e1b4a6cada977c",
			"license": "AGPL-3.0",
			"urls": [
				"bzz-raw://7cef5d2dbeb8ff575e704374d71a426e6710823cccb4f91ec43817ad9068ce9a",
				"dweb:/ipfs/QmUwDfbbtpDYUiJkCeS6AnjvnhiciSNXo4tKSkZ4oXqods"
			]
		},
		"hardhat/console.sol": {
			"keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
			"license": "MIT",
			"urls": [
				"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
				"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
			]
		},
		"helpers/Errors.sol": {
			"keccak256": "0xd3417d80784c3279ab9246862161ea22660d0655781303c420456e2049299ce9",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://f7d450103159d926ef8e5f17b12234a1d6cf2ab6d34d883ca9d7c5876154d142",
				"dweb:/ipfs/QmeVXNSuq9m9QEwof6fKiy4DsWraAxwtA9totywEwKPvLx"
			]
		},
		"math/MathUtils.sol": {
			"keccak256": "0xb94b501d3f13553e3ccb0614d50cb8f449cce5ca2aa80391ce53fe57f4aee74d",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://00deede2ba66edae9bb9e425385d0326fc05f0a6e74a2da3d6f11b29b3a68f97",
				"dweb:/ipfs/Qme48x29DyqBbKnwmNbtj1zgWBPptsuh87WM3yHQ2ENwJ4"
			]
		},
		"math/PercentageMath.sol": {
			"keccak256": "0x6a7dcf18e1af47b69c8dd58093b0134e3689bf719ba63eae485d8f9dfc10cac7",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://f1eb7f7813ade11391040b7bf495c8eaaf55780e75d9f2f0f75ce01975b44dfd",
				"dweb:/ipfs/QmUpXWird3PCkTrTDEVVnwV353L9jHxabEfAfsw57vjWux"
			]
		},
		"math/WadRayMath.sol": {
			"keccak256": "0x618fe1876e322a10269e4a96e61e516bbbec883cb79e20b508f8010027178f07",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://d2814d57ad47ba13959bf9a108c25374828a370f8d64b5adb7564876927a3a06",
				"dweb:/ipfs/Qmf9xfz7svNZAzgUHUTAj6gVC7SHiT7S4obfo1Sg1Fwzbx"
			]
		}
	},
	"version": 1
}